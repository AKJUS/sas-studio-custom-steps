{"name": "Send SMTP Email.step", "creationTimeStamp": "2023-04-03T19:09:47.655Z", "modifiedTimeStamp": "2023-04-03T19:16:24.232Z", "createdBy": "sasadm", "modifiedBy": "sasadm", "displayName": "Send SMTP Email.step", "localDisplayName": "Send SMTP Email.step", "properties": {}, "links": [{"method": "GET", "rel": "self", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "type": "application/vnd.sas.data.flow.step"}, {"method": "GET", "rel": "alternate", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "type": "application/vnd.sas.data.flow.step.summary"}, {"method": "GET", "rel": "up", "href": "/dataFlows/steps", "uri": "/dataFlows/steps", "type": "application/vnd.sas.collection", "itemType": "application/vnd.sas.data.flow.step.summary"}, {"method": "PUT", "rel": "update", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "type": "application/vnd.sas.data.flow.step", "responseType": "application/vnd.sas.data.flow.step"}, {"method": "DELETE", "rel": "delete", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474"}, {"method": "GET", "rel": "transferExport", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "responseType": "application/vnd.sas.transfer.object"}, {"method": "PUT", "rel": "transferImportUpdate", "href": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "uri": "/dataFlows/steps/8c905f5a-8eec-420d-8fcb-133960b40474", "type": "application/vnd.sas.transfer.object", "responseType": "application/vnd.sas.summary"}], "metadataVersion": 0.0, "version": 2, "type": "code", "flowMetadata": {"inputPorts": [], "outputPorts": []}, "ui": "{\"showPageContentOnly\": true, \"pages\": [{\"id\": \"emailInfo\", \"type\": \"page\", \"label\": \"Email Message Information\", \"children\": [{\"id\": \"emailFrom\", \"type\": \"textfield\", \"label\": \"From:\", \"placeholder\": \"\", \"required\": false, \"visible\": \"\"}, {\"id\": \"emailTo\", \"type\": \"textfield\", \"label\": \"To:\", \"placeholder\": \"(separate mutiple recipients with a comma)\", \"required\": true, \"visible\": \"\"}, {\"id\": \"sectionCopy\", \"type\": \"section\", \"label\": \"Copy recipients\", \"open\": false, \"visible\": \"\", \"children\": [{\"id\": \"emailCC\", \"type\": \"textfield\", \"label\": \"cc:\", \"placeholder\": \"(separate mutiple recipients with a comma)\", \"required\": false, \"visible\": \"\"}, {\"id\": \"emailBCC\", \"type\": \"textfield\", \"label\": \"bcc:\", \"placeholder\": \"(separate mutiple recipients with a comma)\", \"required\": false, \"visible\": \"\"}]}, {\"id\": \"emailSubject\", \"type\": \"textfield\", \"label\": \"Subject:\", \"placeholder\": \"\", \"required\": true, \"visible\": \"\"}, {\"id\": \"emailBody\", \"type\": \"textarea\", \"label\": \"Body:\", \"placeholder\": \"(Enter your email text here.  If you want this text in a different color use the color selector on the Options tab.)\", \"required\": true, \"visible\": \"\"}]}, {\"id\": \"options\", \"type\": \"page\", \"label\": \"Options\", \"children\": [{\"id\": \"attachment_path\", \"type\": \"path\", \"label\": \"Select an attachment on the SAS server:\", \"pathtype\": \"file\", \"placeholder\": \"\", \"required\": false, \"visible\": \"\"}, {\"id\": \"importance\", \"type\": \"dropdown\", \"label\": \"Importance:\", \"items\": [{\"value\": \"High\"}, {\"value\": \"Normal\"}, {\"value\": \"Low\"}], \"required\": true, \"placeholder\": \"\", \"visible\": \"\"}, {\"id\": \"textColor\", \"type\": \"colorpicker\", \"label\": \"Email Text Color:\", \"visible\": \"\"}, {\"id\": \"readReceipt\", \"type\": \"checkbox\", \"label\": \"Request Read Receipt?\", \"visible\": \"\"}]}, {\"id\": \"emailSetep\", \"type\": \"page\", \"label\": \"Email Setup\", \"children\": [{\"id\": \"smtpHost\", \"type\": \"textfield\", \"label\": \"SMTP Mail Host:\", \"placeholder\": \"\", \"required\": true, \"visible\": \"\"}, {\"id\": \"smtpPort\", \"type\": \"numberfield\", \"label\": \"SMTP port:\", \"placeholder\": \"\", \"required\": true, \"max\": null, \"min\": null, \"visible\": \"\"}]}, {\"id\": \"about\", \"type\": \"page\", \"label\": \"About\", \"children\": [{\"id\": \"aboutText\", \"type\": \"text\", \"text\": \"The Send SMTP Email custom step enables SAS Studio users to send an email message.  It also allows for the setting of the message's importance, text color, and request a read receipt.\\n\\nRefer to the SAS Viya documentation for more details about configuring an SMTP Email server: https://go.documentation.sas.com/doc/en/pgmsascdc/default/lepg/n1w4ntt16ty6gvn17e68ggvhspwm.htm\\n\\n\\nVersion 2.0 (03APR2023)\", \"visible\": \"\"}]}], \"syntaxversion\": \"1.3.0\", \"values\": {\"emailFrom\": \"\", \"emailTo\": \"\", \"emailCC\": \"\", \"emailBCC\": \"\", \"emailSubject\": \"\", \"emailBody\": \"\", \"importance\": {\"value\": \"Normal\"}, \"textColor\": \"000000\", \"readReceipt\": false, \"smtpHost\": \"\", \"smtpPort\": 25}}", "templates": {"SAS": "/* SAS templated code goes here */\n\n/* -------------------------------------------------------------------------------------------* \n   Send SMTP Email\n\n   v 3.0.0 (06FEB2025)\n\n   This program enables SAS Studio users to send an email message and is meant for use within  \n   a SAS Studio Custom Step. Please modify requisite macro variables (hint: use the debug section \n   as a reference) to test run this through other interfaces, such as a SAS Program editor or the SAS \n    extension for Visual Studio Code.\n\n   Mary Kathryn Queen (MaryKathryn.Queen@sas.com)  \n   Sundaresh Sankaran (sundaresh.sankaran@sas.com|sundaresh.sankaran@gmail.com)\n   \n*-------------------------------------------------------------------------------------------- */\n/*-----------------------------------------------------------------------------------------*\n   DEBUG Section\n   Code under the debug section SHOULD ALWAYS remain commented unless you are tinkering with  \n   or testing the step!\n*------------------------------------------------------------------------------------------*/\n\n/* Provide test values for the parameters */\n\n/* Coming soon */;\n\n/*-----------------------------------------------------------------------------------------*\n   MACROS\n*------------------------------------------------------------------------------------------*/\n/* -------------------------------------------------------------------------------------------* \n   Macro to initialize a run-time trigger global macro variable to run SAS Studio Custom Steps. \n   A value of 1 (the default) enables this custom step to run.  A value of 0 (provided by \n   upstream code) sets this to disabled.\n\n   Input:\n   1. triggerName: The name of the runtime trigger you wish to create. Ensure you provide a \n      unique value to this parameter since it will be declared as a global variable.\n\n   Output:\n   2. &triggerName : A global variable which takes the name provided to triggerName.\n*-------------------------------------------------------------------------------------------- */\n\n%macro _create_runtime_trigger(triggerName);\n\n   %global &triggerName.;\n\n   %if %sysevalf(%superq(&triggerName.)=, boolean)  %then %do;\n  \n      %put NOTE: Trigger macro variable &triggerName. does not exist. Creating it now.;\n      %let &triggerName.=1;\n\n   %end;\n\n%mend _create_runtime_trigger;\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to create an error flag for capture during code execution.\n\n   Input:\n      1. errorFlagName: The name of the error flag you wish to create. Ensure you provide a \n         unique value to this parameter since it will be declared as a global variable.\n      2. errorFlagDesc: A description to add to the error flag.\n\n    Output:\n      1. &errorFlagName : A global variable which takes the name provided to errorFlagName.\n      2. &errorFlagDesc : A global variable which takes the name provided to errorFlagDesc.\n*------------------------------------------------------------------------------------------ */\n\n%macro _create_error_flag(errorFlagName, errorFlagDesc);\n\n   %global &errorFlagName.;\n   %let  &errorFlagName.=0;\n   %global &errorFlagDesc.;\n\n%mend _create_error_flag;\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to identify whether a given file or folder location provided from a \n   SAS Studio Custom Step folder selector happens to be a SAS Content folder\n   or a folder on the filesystem (SAS Server).\n\n   Input:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Output:\n   1. _path_identifier: Set inside macro, a global variable indicating the prefix of the \n      path provided.\n\n   Also available at: https://raw.githubusercontent.com/SundareshSankaran/sas_utility_programs/main/code/Identify%20SAS%20Content%20or%20Server/macro_identify_sas_content_server.sas\n\n*------------------------------------------------------------------------------------------ */\n\n%macro _identify_content_or_server(pathReference);\n   %global _path_identifier;\n   data _null_;\n      call symput(\"_path_identifier\", scan(\"&pathReference.\",1,\":\",\"MO\"));\n   run;\n   %put NOTE: _path_identifier is &_path_identifier. ;\n%mend _identify_content_or_server;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to extract the path provided from a SAS Studio Custom Step file or folder selector.\n\n   Input:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Output:\n   1. _sas_folder_path: Set inside macro, a global variable containing the path.\n\n   Also available at: https://raw.githubusercontent.com/SundareshSankaran/sas_utility_programs/main/code/Extract%20SAS%20Folder%20Path/macro_extract_sas_folder_path.sas\n\n*------------------------------------------------------------------------------------------ */\n\n%macro _extract_sas_folder_path(pathReference);\n\n   %global _sas_folder_path;\n\n   data _null_;\n      call symput(\"_sas_folder_path\", scan(\"&pathReference.\",2,\":\",\"MO\"));\n   run;\n\n%mend _extract_sas_folder_path;\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE MACRO \n\n   _sse prefix stands for Send SMTP Email\n*------------------------------------------------------------------------------------------*/\n\n%macro _sse_execution_code;\n\n   /* Set email options */\n   options emailsys=smtp emailhost=&smtpHost emailport=&smtpPort ;\n\t\n%mend _sse_execution_code;\n\n\n\n/* if emailBody_count is empty (doesnt exist) create it and create emailBody_1 */\n%global emailBody_count ;\n%if &emailBody_count eq %then %do ; \n\t%let emailBody_count=1 ;\n\t%let emailBody_1=&emailBody ;\n%end ;\n\n\n/* Format input information if multiple email addresses entered */\ndata _null_ ;\n    newEmailTo=cats(transtrn(strip(compbl(translate(\"&emailTo\",\" \",\",\"))),\" \",'\" \"')) ;\n    call symput('emailTo',strip(newEmailTo)) ;\n    newEmailCC=cats(transtrn(strip(compbl(translate(\"&emailCC\",\" \",\",\"))),\" \",'\" \"')) ;\n    call symput('emailCC',strip(newEmailCC)) ;\n    newEmailBCC=cats(transtrn(strip(compbl(translate(\"&emailBCC\",\" \",\",\"))),\" \",'\" \"')) ;\n    call symput('emailBCC',strip(newEmailBCC)) ;\nrun ;\n\n\n/* Format and send email */\nfilename outmail email\n\tfrom=\"&emailFrom\"\n \tto=(\"&emailTo\")\n\tcc=(\"&emailCC\")\n\tbcc=(\"&emailBCC\")\n\tsubject=\"&emailSubject\"\n \timportance=\"&importance\" /* Low Normal High.  Default is Normal */\n\t/* If ReadReceipt option is checked */\n\t%if &readReceipt %then %do ;\n\t\treadreceipt\n\t%end ;\n \tct=\"text/html\"\n;\n\n\n/* Build the body of the email */\ndata _null_ ;\n\tfile outmail ;\n\tput \"<html><body>\" ;\n    put \"<p style='color: #&textColor'>\" ;\n\tdo i = 1 to &emailBody_count ;\n        if symget(\"emailBody_\" || strip(put(i,12.))) eq '' then do ;\n\t\t\ttext=cats(\"<br>\") ;\n        end ;\n        else do ;\n\t\t\ttext=cats(symget(\"emailBody_\" || strip(put(i,12.))),\"<br>\") ;\n\t\tend ;\n\t\tput text ;\n\tend ;\n    put \"</p>\" ;\n\tput \"</body></html>\" ;\nrun ;\n\n\n/* Clear macro */\n%symdel emailBody_count ;"}}