{"creationTimeStamp":"2024-05-02T16:40:02.128Z","modifiedTimeStamp":"2024-07-22T18:52:55.833Z","createdBy":"neveng","modifiedBy":"neveng","name":"CV - Create Object Detection Table.step","displayName":"CV - Create Object Detection Table.step","localDisplayName":"CV - Create Object Detection Table.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3/copy","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","uri":"/dataFlows/steps/9e5666f1-ffd8-4b2d-b65b-f01af9a4c7e3","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[{"name":"codt_op_table_name","displayName":"codt_op_table_name","localDisplayName":"codt_op_table_name","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"pageParameters\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Input parameters\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"codt_input_path\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Parent directory containing images and annotations:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"codt_img_size\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Resize images to:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"224\",\n\t\t\t\t\t\t\t\t\t\"label\": \"224 X 224\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"416\",\n\t\t\t\t\t\t\t\t\t\"label\": \"416 X 416\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"640\",\n\t\t\t\t\t\t\t\t\t\"label\": \"640 X 640\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"1280\",\n\t\t\t\t\t\t\t\t\t\"label\": \"1280 X 1280\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section2\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Output Parameters\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"codt_save_table\",\n\t\t\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\t\t\"label\": \"Save object detection table locally?\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"No\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"codt_output_table_path\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Folder location to save object detection table:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$codt_save_table\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"Yes\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"codt_op_table_name\",\n\t\t\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\t\t\"label\": \"Output CAS Table:\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"pageAbout\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About \",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"CV - Create Object Detection Table\\n========================\\n\\nThis custom step leverages SAS DLPy to create the training dataset required for object detection models.\\n\\nObject detection models require labeled datasets for training, in order to provide accurate predictions of object locations.  This custom step helps you create the training dataset in a very easy manner.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"packages_section\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Python packages required\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"packages_list\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step requires Python (through proc python)  to be enabled inside SAS compute and makes use of the following Python packages: \\n\\n1. swat\\n2. python-dlpy\\n3. pandas\\n4. matplotlib \\n\\nNavigate to \\\"Documentation\\\" section to see documentation links for the above packages.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Ensure:\\n\\n1. SAS Viya has access to an active Python environment.  Proc Python makes use of this Python environment.\\n\\n2. Required Python packages (see section \\\"Python packages required\\\") are installed.\\n\\n3. Preferable / recommended:  Administrators could make use of the SAS Configurator for Open Source (also commonly known as sas-pyconfig) to install and configure Python access from SAS Viya.  Refer SAS Viya Deployment Guide (monthly stable 2023.08 onwards) for instructions on the same. Documentation provided below.\\n\\n4.  Input image files and annotation (XML) files generated from the labeling process are stored within the same folder. There must be an XML file for every input image, with the same filename. (eg) For an input image named 0001.png, there must be a corresponding annotation file named 0001.xml\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_input\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input Parameters\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"input_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Parent directory containing images and annotations (Required): provide a valid path to folder containing the images and object annotation files. Currently, the step expects the location to be a folder within \\\"SAS Server\\\"\\n\\n2.  Resize images to (Optional): provide the size to which the training images need to be resized. By default, images are resized to 416 x 416 when creating the object detection table. \",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_output_specs\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Specifications\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Save object detection table locally (Optional): choose if you want to save the created object detection table to your local machine. By default, the option is set to \\\"No\\\".\\n\\n2. Folder to save object detection table (Optional): Provide folder location to which you want to save the object detection table. This option appears only if you choose to save the detection table. \\n\\n3. Output table (output port, Required):  select / attach a CAS table to this output port, to store the created object detection table. The output table engine is expected to be a CAS engine.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"config_section\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Configuration\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"config_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"Note that the following configuration has been parameterised to obtain values from environment variables inside the SAS Studio Compute Context. \\n\\n1. CAS server hostname : this field is used to establish a connection to the CAS server.\\n\\n2. CAS server port :  this field is used to establish a connection to the CAS server.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"1. Documentation on the swat package: https://sassoftware.github.io/python-swat/\\n\\n2. Documentation on python-dlpy package:\\nhttps://github.com/sassoftware/python-dlpy\\n\\n3. Documentation on SAS callback object and methods:  https://go.documentation.sas.com/doc/da/pgmsascdc/default/proc/p0z7ahqmabxu6kn193kdojjhc477.htm\\n\\n4. The pandas package: https://pypi.org/project/pandas/\\n\\n5. Matplotlib package: https://matplotlib.org/stable/index.html\\n\\n6. This SAS Communities article provides details on the environment variables which facilitate connecting to CAS using the swat package within SAS Studio: https://communities.sas.com/t5/SAS-Communities-Library/Hotwire-your-SWAT-inside-SAS-Studio/ta-p/835956\\n\\n7. Peter Styliadis provides this helpful post (SAS documentation link contained therein) on how to identify a current active CAS session: https://communities.sas.com/t5/SAS-Viya/Programmatically-detect-an-active-CAS-session/m-p/890914#M1985\\n\\n8. \",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"change_log_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.0  (22JUL2024)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Created/contact: \\n\\n- Neela Vengateshwaran (Neela.Vengateshwaran@sas.com)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"codt_input_path\": \"\",\n\t\t\"codt_img_size\": {\n\t\t\t\"value\": \"416\",\n\t\t\t\"label\": \"416 X 416\"\n\t\t},\n\t\t\"codt_save_table\": {\n\t\t\t\"value\": \"Yes\"\n\t\t},\n\t\t\"codt_output_table_path\": \"\",\n\t\t\"codt_op_table_name\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/*-------------------------------*\n    CREATE MACRO DEFINITIONS\n*------------------------------*/\n\n/* -------------------------------------------------------------------------------------------* \n   This code ensures that the user specifies a valid CASLIB for output table's library name\n*-------------------------------------------------------------------------------------------- */\n%global _codt_nameCaslib;\n\n%if \"%upcase(&codt_op_table_name_engine)\" ne \"CAS\" %then %do;\n  data _null_;\n     putlog \"ERROR: The selected table is not a CAS table.\";\n     putlog \"ERROR: Please select a library that points to a caslib.\";\n     abort 42;\n  run;\n%end;\n%else %do;\n  proc sql noprint;\n     select sysvalue into :_codt_nameCaslib trimmed from dictionary.libnames\n     where libname=upcase(\"&codt_op_table_name_lib\") and upcase(sysname)=\"CASLIB\";\n  quit;\n  %put CASLIB name: &_codt_nameCaslib;\n%end;\n\n/* -----------------------------------------------------------------------------* \n   This code ensures the user uploads data only from the \"SAS server\" directory\n*---------------------------------------------------------------------------- */\n\ndata _null_;\n\tlocation = scan(\"&codt_input_path.\", 1, ':', 'MO');\n\tif location eq 'sascontent' then do;\n\t\tputlog \"ERROR: Please ensure that the directory containing images and annotations is located in SAS Server not in SAS Content\";\n\t\tabort 42;\n\tend;\n\n\tlocation = scan(\"&codt_output_table_path.\", 1, ':', 'MO');\n\tif location eq 'sascontent' then do;\n\t\tputlog \"ERROR: Please ensure that the folder location to save object detection table is located in SAS Server not in SAS Content\";\n\t\tabort 42;\n\tend;\n\nrun;\n\n/* -----------------------------------------------------------------------------------------* \n   This macro definition identifies if an active CAS session exists. About[doc] for details\n*------------------------------------------------------------------------------------------ */\n\n%if %sysfunc(symexist(_SESSREF_)) %then %do;\n   %let casSessionExists= %sysfunc(sessfound(&_SESSREF_.));\n%end;\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE \n   Note: Python code blocks follow different indentation logic and are currently not\n   indented within the SAS proc python blocks below. Comments may not be rendered as \n   elegantly as SAS code.\n*------------------------------------------------------------------------------------------*/\n\nproc python restart;\nsubmit;\n\n#############################################################################################\n#  Imports\n#############################################################################################\n\nimport os\nimport dlpy as dlpy\nimport swat as swat\nfrom dlpy.utils import *\nfrom dlpy.model import *\nfrom dlpy.images import ImageTable\nimport matplotlib.pyplot as plt\nimport pandas as pd\npd.set_option(\"display.max_columns\", None)\n\n#############################################################################################\n#  Establish a connection to CAS, attempting to connect to an existing connection.\n#  Ensure that an active CAS connection exists prior to running\n#  Otherwise, default to a new connection  \n#############################################################################################\n\ncas_session_exists =  SAS.symget(\"casSessionExists\")\ncas_host_path      =  SAS.symget(\"_CASHOST_SHARED_\")\ncas_host_port      =  SAS.symget(\"_CASPORT_\")\n\nSAS.logMessage(f\"Host is {cas_host_path}\")\nSAS.logMessage(f\"Port is {cas_host_port}\")\n\nos.environ[\"CAS_CLIENT_SSL_CA_LIST\"] = os.environ[\"SSLCALISTLOC\"]\n\nif cas_session_exists==\"1\":\n    sessuuid           =  SAS.symget(\"_IOCASUUID_\")\n    SAS.logMessage(f\"Connection exists. Session UUID is {sessuuid}\")\n    s = swat.CAS(hostname= cas_host_path.strip('\"'), port=cas_host_port, password=os.environ[\"SAS_SERVICES_TOKEN\"],session=sessuuid)\n    SAS.logMessage(\"Connected to existing session.\")\n\nelse:\n    SAS.logMessage(\"New Connection made to CAS through swat.\")\n    s = swat.CAS(hostname=cas_host_path.strip('\"'),port=cas_host_port, password=os.environ[\"SAS_SERVICES_TOKEN\"])\n\n#############################################################################################\n# Get user inputs from UI \n#############################################################################################\n\ninput_path         = SAS.symget(\"codt_input_path\")\ntrimmed_input_path = str.split(input_path,\":\")[1]\nimg_size           = int(SAS.symget(\"codt_img_size\"))\noutput_table_name  = SAS.symget(\"codt_op_table_name_name_base\")\noutput_caslib      = SAS.symget(\"codt_op_table_name_lib\")\nsave_table\t\t   = SAS.symget(\"codt_save_table\")\n\n#############################################################################################\n#  Create an object detection table to the output table port\n#############################################################################################\n\ns.sessionProp.setSessOpt(caslib=output_caslib)\n\ns.loadactionset(\"image\")\ns.loadactionset('deepLearn')\n\ntrainset = ImageTable.load_files(conn=s, casout=dict(name=\"trainset\"), path=trimmed_input_path)\n\nSAS.logMessage(\"Displaying some input images\")\n\ndisp = trainset.show(ncol=3)\nSAS.pyplot(plt)\nplt.close()\n\nobject_detection_targets = create_object_detection_table(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ts, \n                                                         \timage_size=img_size,\n                                                         \tdata_path = trimmed_input_path,\n                                                         \tcoord_type = 'yolo', \n                                                         \toutput = output_table_name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\nSAS.logMessage(\"Displaying some examples of bounding boxes\")\n\ndisp2 = display_object_detections(s, coord_type=\"yolo\", max_objects=10, table=output_table_name, n_col=3)\nSAS.pyplot(plt)\nplt.close()\n\n#############################################################################################\n#  Save the object detection table locally\n#############################################################################################\n\nif save_table == \"Yes\":\n\t\t\n\toutput_path \t= SAS.symget(\"codt_output_table_path\")\n\ttrimmed_op_path = str.split(output_path,\":\")[1] \n\t\n\ts.addcaslib(name=\"output_data\", path=trimmed_op_path, activeOnAdd=False, subdirectories=True)\n\t\n\ts.table.save(table=output_table_name, name=output_table_name+\".sashdat\", replace=True, caslib=\"output_data\", permission=\"PUBLICWRITE\")\n\n\ts.dropcaslib(name=\"output_data\")\n\nendsubmit;\nquit;\n\n%symdel casSessionExists _codt_nameCaslib;"}}