{"creationTimeStamp":"2023-07-21T09:48:24.206Z","modifiedTimeStamp":"2023-07-21T10:27:23.344Z","createdBy":"gerdaw","modifiedBy":"gerdaw","name":"Import - HTML Table.step","displayName":"Import - HTML Table.step","localDisplayName":"Import - HTML Table.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","uri":"/dataFlows/steps/53418709-c47c-4758-9182-17f84e9c9365","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[{"name":"ihtOutputTable","displayName":"ihtOutputTable","localDisplayName":"ihtOutputTable","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Definition\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtURL\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Enter the URL:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"A website can contain multiple HTML tables. That is why you can choose how tables are extracted. Selection of each individual option provides additional context on how they work.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtScrappingType\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Select which table you want:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"all\",\n\t\t\t\t\t\t\t\"label\": \"all table on page\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"id\",\n\t\t\t\t\t\t\t\"label\": \"by HTML ID\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"nth\",\n\t\t\t\t\t\t\t\"label\": \"a specific table\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtAllTables\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Note that it is unkown how many tables this will create. Thus the connected output table name will only be used as a prefix and then a number will be added to indicate which table on the page it is - because of that the table name can not be longer then 28 characters or it will be truncated automatically. This number can be used together with the option 'a specific table'.\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$ihtScrappingType\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"all\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"HTML elements can have an attribute that is called ID. The value of that ID uniquely identifies the HTML element within that webpage.\\n\\nYou can check if your desired HTML table element has an ID by right clicking the table in your browser, selecting the Inspect Element option from the context menu. Now you are in the developer console of your browser and you can see the HTML structure of the web page. Check if the table element has an ID attribute and if so copy its value and paste it below.\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$ihtScrappingType\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"id\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtTableID\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Enter the table element ID:\",\n\t\t\t\t\t\"placeholder\": \"HTML ID of the table element\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$ihtScrappingType\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"id\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text4\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"If a website contains multiple tables and you want only one specific table, but that table doesn't have an ID then you can make use of this option.\\n\\nThe value below selects the nth table that is available on the website. To get this number it is recommended that you first run this step in the 'all table on page' mode and then take the number that was added as a postfix for the table and set its value below.\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$ihtScrappingType\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"nth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtNthTable\",\n\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\"label\": \"Select which table you want as a dataset:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"stepsize\": 1,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$ihtScrappingType\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"nth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"ihtOutputTable\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Table containing HTML table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"work.HTMLTable\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Import HTML tables from websites as SAS datasets. This step requires that Proc Python is enabled on your system and that the Python package pandas is installed.\\n\\nNote that for this step to get HTML tables from public websites you have to have the ability to connect to the public internet.\\n\\nThis step was created by David.Weik@sas.com.\\n\\nVersion 1.0 (19JUL2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"ihtURL\": \"\",\n\t\t\"ihtScrappingType\": {\n\t\t\t\"value\": \"all\",\n\t\t\t\"label\": \"all table on page\"\n\t\t},\n\t\t\"ihtTableID\": \"\",\n\t\t\"ihtNthTable\": 0,\n\t\t\"ihtOutputTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"proc python restart;\nsubmit;\nimport pandas as pd\n\n# Pattern to work with SAS column names\nihtToReplacePattern = '[() -#$&,.]'\n\n# Check if there is a table on the page\ntry:\n\tif SAS.symget('ihtScrappingType') == 'id':\n\t\tihtDF = pd.read_html(SAS.symget('ihtURL'), attrs = {'id': SAS.symget('ihtTableID')})\n\telse:\n\t\tihtDF = pd.read_html(SAS.symget('ihtURL'))\nexcept:\n\tSAS.logMessage('No table found on the page.', 'error')\n\tSAS.logMessage('Tables build with HTML divs are not supported.', 'error')\n\n# Check if there is more then one table returned\nif len(ihtDF) > 1:\n\tSAS.logMessage(f\"{len(ihtDF)} HTML tables have been found.\")\n\tif SAS.symget('ihtScrappingType') == 'all':\n\t\tfor i, currentDF in enumerate(ihtDF):\n\t\t\tcurrentDF.columns = [str(i) for i in currentDF.columns]\n\t\t\tvalueList = currentDF.columns\n\t\t\tcurrentDF.columns = currentDF.columns.str.replace(ihtToReplacePattern, '', regex=True)[:32]\n\t\t\tlabelDict = dict(zip(currentDF.columns, valueList))\n\t\t\tSAS.df2sd(currentDF, f\"{SAS.symget('ihtOutputTable_lib')}.{SAS.symget('ihtOutputTable_name')[:28]}_{i}\", labels=labelDict)\n\telse:\n\t\tihtNthTable = int(SAS.symget('ihtNthTable'))\n\t\tihtDF[ihtNthTable].columns = [str(i) for i in ihtDF[ihtNthTable].columns]\n\t\tvalueList = ihtDF[ihtNthTable].columns\n\t\tihtDF[ihtNthTable].columns = ihtDF[ihtNthTable].columns.str.replace(ihtToReplacePattern, '', regex=True)[:32]\n\t\tlabelDict = dict(zip(ihtDF[ihtNthTable].columns, valueList))\n\t\tSAS.df2sd(ihtDF[ihtNthTable], SAS.symget('ihtOutputTable'), labels=labelDict)\nelse:\n\tihtDF[0].columns = [str(i) for i in ihtDF[0].columns]\n\tvalueList = ihtDF[0].columns\n\tihtDF[0].columns = ihtDF[0].columns.str.replace(ihtToReplacePattern, '', regex=True)[:32]\n\tlabelDict = dict(zip(ihtDF[0].columns, valueList))\n\tSAS.df2sd(ihtDF[0], SAS.symget('ihtOutputTable'), labels=labelDict)\nendsubmit;\nquit;\n\nproc python terminate;\nquit;"}}