{"type":"code","name":"UT - Load CAS with VarChar.step","displayName":"UT - Load CAS with VarChar.step","description":"","templates":{"SAS":"/*****************************************************************/\n/*                                                               */\n/* Loads a table into CAS memory converting chars to varchars    */\n/*                                                               */\n/* Parameters:                                                   */\n/*              inlib     - input library                        */\n/*              intab     - input table                          */\n/*              outlib    - output library (must be a CASLib)    */\n/*              outtab    - output table (must be a CAS Table)   */\n/*   (optional) indexVars - variables to build indexes on        */\n/*   (optional) compress  - compress the output table            */\n/*                                                               */\n/* 1) The input table is copied into the CASUSER library while   */\n/*    incoming CHAR variables are assigned new VARCHAR ones.     */\n/*    Only CHAR variables with length >16 are changed to VARCHAR */\n/*    If requested the result table is compressed or promoted    */\n/* 2) If indexVars have been provided the table is indexed.      */\n/* 3) If the output table exists is dropped                      */\n/*****************************************************************/\n\n\n%macro makeItVarChar();\n\n%let inlib=%scan(&inputtable1,1);\n%let intab=%scan(&inputtable1,2);\n\n%let outlib=%scan(&outputtable1,1);\n%let outtab=%scan(&outputtable1,2);\n\n%if %str(&outputtable1_engine) ^= CAS %then %do;\n\t\t%put \">>>>>>>    The OUTPUT ENGINE IS NOT CAS >>>>>>>>>>\";;\n%end;\n\t\n\t   %if %sysfunc(exist(work._cnts_out_)) %then %do;\n\t\t    proc delete   data=work._cnts_out_; run;\n       %end;\n\t\n\t\t%if %sysfunc(exist(&outlib..&outtab)) %then %do;\n\t\t\tproc delete   data=&outlib..&outtab; run;\n\t\t%end;\n\n      proc contents data=&inlib..&intab out=work._cnts_out_(where=(TYPE=2 and length > 16) keep=TYPE NAME LENGTH FORMAT INFORMAT) noprint; run;\n\n\t  /* %let obs=1; */\n\t  \n  \t  data _null_; \n\t\tif 0 then set work._cnts_out_ nobs=o;\n\t\tcall symput ('obs', o);\n\t\tput o=;\n\t\tstop;\n\t  run;\n\t\t\n\n\t \n\t\t\n      %if %str(&Selcompress) = %str( ) %then %let &Selcompress = no;\n\n\t  %if &obs > 0 %then %do;\n\t\t  /**************************************************/\n\t\t  /* RENAMES CHAR VARIABLES TO TEMPORARY VARS       */\n\t\t  /**************************************************/\n\n\t\t  filename f temp;\n\n\t\t  data _null_; set work._cnts_out_(keep=name) end=eof;\n\t\t\t\tfile f;\n\t\t\t\tif (_n_=1) then put \"data  &outlib..&outtab (compress=&Selcompress); set &inlib..&intab (rename=(\";\n\n\t\t\t\tlength txt $65;\n\t\t\t\ttxt = strip(name) || \"=_\" || strip(_n_);\n\t\t\t\tput txt;\n\n\t\t\t\tif eof then put \"));\";\n\t\t  run;\n\n\t\t  /**************************************************/\n\t\t  /* DECLARE VARCHARS                               */\n\t\t  /**************************************************/\n\n\t\t  data _null_; set work._cnts_out_(keep=name length) end=eof;\n\t\t\t\tfile f mod;\n\t\t\t\tif (_n_=1) then put \"length\";\n\n\t\t\t\tlength txt $48;\n\t\t\t\ttxt = strip(name) || \" varchar(\" || strip(length) || \")\";\n\t\t\t\tput txt;\n\n\t\t\t\tif eof then put \";\";\n\t\t  run;\n\n\t\t  /**************************************************/\n\t\t  /* ASSIGNS TRIMMED VALUES TO VARCHARS             */\n\t\t  /**************************************************/\n\n\t\t  data _null_; set work._cnts_out_(keep=name);\n\t\t\t\tfile f mod;\n\t\t\t\tlength txt $74;\n\t\t\t\ttxt = strip(name) || \"=strip(_\" || strip(_n_) || \");\";\n\t\t\t\tput txt;\n\t\t  run;\n\n\t\t  /**************************************************/\n\t\t  /* DROPS $ FORMATS / INFORMATS FOR VARCHARS       */\n\t\t  /**************************************************/\n\n\t\t  data _null_; set work._cnts_out_(keep=name format where=(format=\"$\")) end=eof;\n\t\t\t\tfile f mod;\n\t\t\t\tif (_n_=1) then put \"format\";\n\t\t\t\tput name;\n\t\t\t\tif eof then put \";\";\n\t\t  run;\n\n\t\t  data _null_; set work._cnts_out_(keep=name informat where=(informat=\"$\")) end=eof;\n\t\t\t\tfile f mod;\n\t\t\t\tif (_n_=1) then put \"informat\";\n\t\t\t\tput name;\n\t\t\t\tif eof then put \";\";\n\t\t  run;\n\n\t\t  /**************************************************/\n\t\t  /* DROPS TEMPARY VARIABLES                        */\n\t\t  /**************************************************/\n\n\t\t  data _null_; set work._cnts_out_(drop=type) end=eof;\n\t\t\t\tfile f mod;\n\t\t\t\tif (_n_=1) then put \"drop\";\n\t\t\t\tlength txt $32;\n\t\t\t\ttxt = \"_\" || strip(_n_);\n\t\t\t\tput txt;\n\t\t\t\tif eof then put \";\";\n\t\t  run;\n\n\t\t  data _null_;\n\t\t\t\tfile f mod;\n\t\t\t\tput \"run;\";\n\t\t  run;\n\n\t\t  %include \"%sysfunc(pathname(f))\";\n\t\t  filename f clear;\n\t  %end;\n\t  %else %do;\n\t\t  data &outlib..&outtab(compress=&compress); set &inlib..&intab; run;\n\t  %end;\n\n      %if %eval(&SelIndexVars_count) > 0 %then %do;\n\t\t\tdata _null_; \n\t\t\t\tlength a $32000; \n\t\t\t\t%do i=1 %to &SelIndexVars_count;  \n\t\t\t\t\t%if %eval(&i) > 1 %then\t\t\t \n\t\t\t\t\t\ta=cat(strip(a),'\",\"',\"&&SelIndexVars_&i._name\"); \n\t\t\t\t\t%else \n\t\t\t\t\t\ta=\"&&SelIndexVars_&i._name\"; \n\t\t\t\t\t\t; \n\t\t\t\t%end; \n\t\t\t\t\n\t\t\t\t\ta=cat('\"',strip(a),'\"');; \n\t\t\t\t\tput a=; \n\t\t\t\t\t \n\t\t\t\t\tcall SYMPUT(\"IndexVars\",strip(a)); \n\t\t\t\trun; \n\t\t\t\n\t\t\t%put &IndexVars=;\n            proc cas;\n                  table.index /\n                        table  = {caslib=\"&TargetCasLib\", name=\"&outtab\"}\n                        casout = {caslib=\"&TargetCasLib\", name=\"&outtab\", replace=true, indexVars={&indexVars}}\n                  ;\n            quit;\n      %end;\n\n\t  %if %str(&SelPromote) = Yes %then %do;\n\n\t      proc casutil;\n\t            /* droptable incaslib=\"&outlib\" casdata=\"&outtab\" quiet; run; */\n\t            promote   incaslib=\"&outlib\" casdata=\"&outtab\" outcaslib=\"&outlib\" casout=\"&outtab\"; run;\n\t      quit;\n\t  %end;\n\n      proc cas;\n            table.tableInfo /\n                  caslib=\"&outlib\" name=\"&outtab\";\n            table.tableDetails /\n                  caslib=\"&outlib\" name=\"&outtab\" level=\"NODE\";\n      quit;\n\n%mend;\n\n%makeItVarChar();                "},"properties":{},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"Options\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table label 1\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputtable1\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table label 1\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"SelCompress\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Compress\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"No\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Yes\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"SelPromote\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Promote table\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"No\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Yes\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"SelIndexVars\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Index\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"c\",\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Load CAS VarChar, allows to save memory loading, any table from any library, in CAS transforming all CHAR columns with a length greater than 16 characters into VARCHAR (See When to Use a VARCHAR Data Type -https://go.documentation.sas.com/doc/en/pgmsascdc/9.4_3.5/casref/p00irrg1pxzro6n1aadfcb1p3cag.htm#n0u86n2r75xk76n1003apo4msu3g).\\n\\nVer 1.0 (07Feb2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"outputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"SelCompress\": {\n\t\t\t\"value\": \"No\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"SelPromote\": {\n\t\t\t\"value\": \"No\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"SelIndexVars\": []\n\t}\n}","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"outputtable1","displayName":"outputtable1","minEntries":1,"maxEntries":1,"columnDelta":null,"type":"table"}]}}