{"creationTimeStamp":"2023-02-01T15:24:14.660Z","modifiedTimeStamp":"2023-02-02T14:10:39.614Z","createdBy":"sinsrn","modifiedBy":"sinsrn","name":"Git - Delete Local Repo.step","displayName":"Git - Delete Local Repo.step","localDisplayName":"Git - Delete Local Repo.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","uri":"/dataFlows/steps/25b39590-7492-491c-88d9-0763f5481794","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Git - Delete Local Repo\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Git repository details\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"folderName\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Select local repository folder (on filesystem):\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"sasserver:/the/repo/I/wish/to/delete\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"About_Text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Git - Delete Local Repo\\n\\nThis custom step helps you delete a local folder of a Git repository in your filesystem.\\n\\nSuch capability already exists through SAS functions as well as Git integration in SAS Studio. Refer documentation below for more information.\\n\\nThis custom steps supplements similar functionality (such as cloning a repo) so that you can access Git source code within a SAS Studio Flow in an easy manner.\\n\\nNote that this delete operation affects the LOCAL copy of the Git repository, not the content on the repository hosting service itself.\\n\\nParameters:\\n\\nSection - Git repository details:\\n\\n1. Folder containing the Git repository you wish to delete: This is a folder on your filesystem.  Note that unlike the Git Integration in SAS Studio functionality, you don't have an hard/soft delete option.\\n\\nOutput ports/tables:\\n\\nOptionally, specify a table for the following output port. \\n\\n1. Status table: A simple status table used to note the return code after the GIT_DELETE_REPO function is called by the step.  Return codes are explained in the Doc Reference #4 below.\\n\\nSAS Documentation:\\n\\n1. Understanding Git Integration in SAS Studio: https://go.documentation.sas.com/doc/en/sasstudiocdc/default/webeditorcdc/webeditorug/p0puc7muifjjycn1uemlm9lj1jkt.htm\\n2. Using Git Functions in SAS: https://go.documentation.sas.com/doc/en/pgmsascdc/default/lefunctionsref/n1mlc3f9w9zh9fn13qswiq6hrta0.htm\\n3. Configuration Properties for Git Integration: https://go.documentation.sas.com/doc/en/sasstudiocdc/default/webeditorcdc/webeditorag/p1a2vn20wzwkumn1freonkz81mx5.htm\\n4. The GIT_DELETE_REPO function : https://go.documentation.sas.com/doc/en/sasstudiocdc/default/pgmsascdc/lefunctionsref/n05xa2vo2wnzzon1ujsxkgduv1bh.htm#n17ri3xlx22i6en1t7ahybd09c0yc\\n\\nCreated / contact : \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\\nVersion : 1.0.   (26JAN2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"folderName\": \"\"\n\t}\n}","templates":{"SAS":"/* SAS templated code goes here */\n\n/* Extract name of folder from user interface */\ndata _null_;\n   call symput(\"folderName\",scan(\"&folderName.\",2,\":\",\"MO\"));\nrun;\n\n/* If a status table has not been specified, assign output_status_table macro variable as \"_NULL_\"; */\n%if %symexist(output_status_table) = 0 %then %do;\n   %let output_status_table=_NULL_;\n%end;\n\n/* Delete the Repo */\ndata &output_status_table.;\n/* rc stands for return code which captures any errors or messages that occur during the git cloning process. */\n   rc = GIT_DELETE_REPO(\"&folderName.\");\n/* The return code for deletes is (currently) very simple - 0 for successful and -1 for not successful */\n\nrun;"}}