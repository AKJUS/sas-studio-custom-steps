{"creationTimeStamp":"2024-06-26T12:33:14.322Z","modifiedTimeStamp":"2024-06-26T15:28:16.301Z","createdBy":"Neil.Griffin@sas.com","modifiedBy":"Neil.Griffin@sas.com","name":"Zip data.step","displayName":"Zip data.step","localDisplayName":"Zip data.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590/copy","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","uri":"/dataFlows/steps/101f2966-f67a-4504-8b43-6e30ca86d590","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"options\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"optionsSourceData\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Source data\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"dirSource\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Source directory:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"pattern\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Source filename pattern e.g. *.sas7bdat\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"optionsTargetData\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Target data\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"dirTarget\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Target directory:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"optionsArchivePeriod\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Archive period\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"periodText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Archive files with last modified date-times older than:\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"periodCount\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number:\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\"max\": 100,\n\t\t\t\t\t\t\t\"stepsize\": 1,\n\t\t\t\t\t\t\t\"indent\": 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"periodUnit\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Units:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"minutes\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"hours\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"days\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"weeks\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"months\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"years\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"optionsAction\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Action\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"action\",\n\t\t\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\t\t\"label\": \"Action:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"Move\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"Copy\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"dryRun\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Dry run (do not archive files)\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutDescription\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Zip data\\n\\nThe zip data custom step allows SAS Studio users to move or copy data to ZIP files.\\n\\nThe custom step includes options to specify:\\n- the source directory\\n- the source file pattern e.g. *.sas7bdat\\n- the target directory\\n- the period before which files should be archived\\n- whether to move or copy files to the ZIP file\\n- whether to do a \\\"dry-run\\\"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutRequirements\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Requirements\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutRequirementsText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Tested on SAS Viya Stable 2024.05, with Python 3.9.16 and dateutil 2.9.0.post0.\\n\\nPython must be configured on the SAS Viya platform.\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutUsage\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Usage\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutUsageText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Custom step options\\n\\n> Source data\\n\\nSource directory\\nDefault: None\\nDescription: Source directory on the file system. Directories in SAS Content are not supported\\n\\nSource filename pattern\\nDefault: *\\nDescription: Filename pattern used to match files in the source directory e.g. *.sas7bdat. See the glob module https://docs.python.org/3/library/glob.html for details\\n\\n> Target data\\n\\nTarget directory\\nDefault: None\\nDescription: Target directory on the file system. Directories in SAS Content are not supported\\n\\n> Archive period\\n\\nArchive files with a last modified date-time before a given period. The period is specified as a number and a unit e.g. 1 month. The cutoff is calculated with dateutil.relativedelta https://dateutil.readthedocs.io/en/stable/relativedelta.html\\n\\nNumber\\nDefault: 1\\nDescription: Number of periods\\n\\nUnits\\nDefault: months\\nDescription: Period unit. Select from minutes, hours, days, weeks, months, years\\n\\n> Action\\n\\nAction\\nDefault: Move\\nDescription: Move or copy files to a ZIP file\\n\\nDry run\\nDefault: False\\nDescription: If True, the step will run but not execute the archive step\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutOutput\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Output\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"For each file in the source directory that matches the file name pattern and modified date-time constraints, a ZIP file will be created in the archive directory.\\n\\nFor example, if the following source files match:\\n[source dir]/class.sas7bdat\\n[source dir]/classfit.sas7bdat\\n\\nThen the step will create:\\n[target dir]/class.sas7bdat.zip\\n[target dir]/classfit.sas7bdat.zip\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutChangelog\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Change Log\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutChangelogText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Version: 1.0 (25JUN2024)\\n- Initial version\\n\\nCreated/contact: \\n- Neil Griffin (neil.griffin@sas.com)\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"dirSource\": \"\",\n\t\t\"pattern\": \"*\",\n\t\t\"dirTarget\": \"\",\n\t\t\"periodCount\": 1,\n\t\t\"periodUnit\": {\n\t\t\t\"value\": \"months\"\n\t\t},\n\t\t\"action\": {\n\t\t\t\"value\": \"Move\"\n\t\t},\n\t\t\"dryRun\": false\n\t}\n}","templates":{"SAS":"* ----------------------------------------------------------------------------;\n* Archive files to ZIP;\n* ----------------------------------------------------------------------------;\n\n/*\n* Print macro variables passed from custom step;\n\n* Source directory;\n%put NOTE: &=dirSource;\n* Source filename pattern;\n%put NOTE: &=pattern;\n* Target directory;\n%put NOTE: &=dirTarget;\n* Archive period number;\n%put NOTE: &=periodCount;\n* Archive period units;\n%put NOTE: &=periodUnit;\n* Action (move or copy);\n%put NOTE: &=action;\n* Dry run;\n%put NOTE: &=dryRun;\n*/\n\n* Set error flag to 0;\n%let errorFlag=0;\n\n* Check the source and target directories both exist and are on the file system;\ndata _null_;\n\t* Get file system type and directory names;\n\tfsSource=scan(\"&dirSource\",1,\":\");\n\tdirSource=scan(\"&dirSource\",2,\":\");\n\tfsTarget=scan(\"&dirTarget\",1,\":\");\n\tdirTarget=scan(\"&dirTarget\",2,\":\");\n\n\terrorFlag=0;\n\n\t* Check source directory;\n\tif fsSource=\"sasserver\" then do;\n\t\tif fileexist(dirSource) then put \"NOTE: Source directory exists\";\n\t\telse do;\n\t\t\tput \"ERROR: The source directory does not exist\";\n\t\t\terrorFlag=1;\n\t\tend;\n\tend;\n\telse do;\n\t\tput \"ERROR: The source directory must be on the file system, not SAS Content\";\n    errorFlag=1;\n\tend;\n\n\t* Check target directory;\n\tif fsTarget=\"sasserver\" then do;\n\t\tif fileexist(dirTarget) then put \"NOTE: Target directory exists\";\n\t\telse do;\n\t\t\tput \"ERROR: The target directory does not exist\";\n\t\t\terrorFlag=1;\n\t\tend;\n\tend;\n\telse do;\n\t\tput \"ERROR: The target directory must be on the file system, not SAS Content\";\n    errorFlag=1;\n\tend;\n\n\t* Set return code to 1 if directories are not ok;\n  call symput(\"errorFlag\",put(errorFlag,1.));\nrun;\n\n* Run the Python code if the source and target directories are ok;\n%if &errorFlag=0 %then %do;\n\nproc python;\nsubmit;\n# -----------------------------------------------------------------------------\n# Archive files to ZIP\n# -----------------------------------------------------------------------------\n\n# Import modules\nimport datetime\nfrom dateutil.relativedelta import relativedelta\nimport glob\nimport os\nfrom os.path import basename\nimport time\nimport zipfile\n\n# -----------------------------------------------------------------------------\n# Get parameters from SAS macro variables\n\n# Source directory\ndirSource = SAS.symget('dirSource').split(':')[1]\n\n# Pattern\npattern = SAS.symget('pattern')\n\n# Target directory\ndirTarget = SAS.symget('dirTarget').split(':')[1]\n\n# Archive period\nperiodCount = float(SAS.symget('periodCount'))\nperiodUnit = SAS.symget('periodUnit')\n\n# Move files to ZIP\naction = SAS.symget('action')\n\n# Dry run\ndryRun = bool(int(SAS.symget('dryRun')))\n\n# -----------------------------------------------------------------------------\n# Get list of files to archive\n\n# Get current date-time\nnow = datetime.datetime.now()\n\n# Calculate cutoff date-time\nperiod = {'minutes': 0, 'hours': 0, 'days': 0, 'weeks': 0, 'months': 0, 'years': 0}\nperiod.update({periodUnit: periodCount})\ncutoff = now - relativedelta(\n    minutes=period.get('minutes'), \n    hours=period.get('hours'), \n    days=period.get('days'), \n    weeks=period.get('weeks'), \n    months=period.get('months'), \n    years=period.get('years'))\n\n# Get list of files based on the pattern and modified date-time constraints\nfiles = list(\n    filter(\n        lambda name: os.path.isfile(name) and \n        datetime.datetime.fromtimestamp(os.path.getmtime(name)) < cutoff, \n        glob.glob(f'{dirSource}/{pattern}')))\n\n# Get number of files that match the constraints\nnFiles = len(files)\n\nprint(f'Archiving files with the pattern: {pattern}')\nprint(f'Archiving files last modified before: {cutoff.isoformat(sep=\"T\", timespec=\"seconds\")}')\nprint(f'Found {nFiles} files that match the pattern and modified date-time constraints')\n\n# -----------------------------------------------------------------------------\n# Archive files\n\n# Counter for files archived\nn = 0\n\n# Error code\nrc = 0\n\nif nFiles > 0 and dryRun:\n    print('Skipping zip - dry run only...')\n    for file in files:\n        # Get the filename (remove the path)\n        bName = basename(file)\n        print(f'Skipping zip of: {bName}')\nelif nFiles > 0 and not dryRun:\n    print('Zipping files...')\n    for file in files:\n        # Get the filename (remove the path)\n        bName = basename(file)\n        try:\n            with zipfile.ZipFile(f'{dirTarget}/{bName}.zip', 'w') as myzip:\n                # Zip file\n                print(f'Zipping: {bName}')\n                myzip.write(file, arcname = bName)\n                # If files are being moved to a ZIP file, then delete the source\n                if action == 'Move':\n                    try:\n                        print(f'Deleting: {bName}')\n                        os.remove(file)\n                    except OSError as e:\n                        print(f'Error deleting file: {e}')\n                        rc = 1\n                # Increment counter for number of files archived\n                n += 1\n\n        except:\n            print('Error zipping file {bName}')\n        myzip.close()\n    print(f'Archived {n} files that match the pattern and modified date-time constraints')\n\nif rc == 0:\n    print('Finished')\nelse:\n    print('Finished with error(s)')\n\n# Pass return code as a SAS macro variable\nSAS.symput('errorFlag', str(rc))\n\nendsubmit;\nrun;\n\n%end;\n\n%if &errorFlag=0 %then %do;\n\t%put NOTE: Step ended successfully;\n%end;\n%else %do;\n\t%put ERROR: Step ended with errors;\n%end;\n\n* ----------------------------------------------------------------------------;\n* Delete macro variables;\n* ----------------------------------------------------------------------------;\n\n%if %symexist(errorFlag) %then %do;\n  %symdel errorFlag;\n%end;\n\n* ----------------------------------------------------------------------------;"}}