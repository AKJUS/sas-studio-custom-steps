{"creationTimeStamp":"2023-07-22T15:25:22.320Z","modifiedTimeStamp":"2023-08-17T03:24:20.003Z","createdBy":"viya_admin","modifiedBy":"viya_admin","name":"SDG - Generate Synthetic Data.step","displayName":"SDG - Generate Synthetic Data.step","localDisplayName":"SDG - Generate Synthetic Data.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","uri":"/dataFlows/steps/88550ed5-bcb1-4fcb-a3d2-7e5de09096ed","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[{"name":"outputtable1","displayName":"outputtable1","localDisplayName":"outputtable1","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"Score\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Score\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Provide astore table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"numobs\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"Number of observations:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputtable1\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Specify generated data output table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Generate Synthetic Data\\n=================\\n\\nThe \\\"Generate Synthetic Data\\\" custom step generates synthetic data on the basis of a pre-trained model. This step results in a new dataset which contains synthetically generated data. \\n\\nOnce you have generated synthetic data, you can carry out further downstream activities such as comparing distributions to see how close your synthetic data resembles the original.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step runs on data loaded to a SAS Cloud Analytics Services (CAS) library (known as a caslib). Ensure you are connected to CAS before running this step.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_input\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input Parameters\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"input_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. An input table which contains the model binary (known as an astore) which has been trained earlier - attach this to the input port of this step.\\n\\n2. Number of synthetic observations you wish to generate.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_output_specs\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Specifications\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"- Set up the output for this process by attaching a table to the output port (called Generated Data) \\n\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_runtimecontrol\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Run-time Control\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"runtimecontrol_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Note: Run-time control is optional.  You may choose whether to execute the main code of this step or not, based on upstream conditions set by earlier SAS programs.  This includes nodes run prior to this custom step earlier in a SAS Studio Flow, or a previous program in the same session.\\n\\nRefer this blog (https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526) for more details on the concept.\\n\\nThe following macro variable,\\n\\n_gsd_run_trigger\\n\\nwill initialize with a value of 1 by default, indicating an \\\"enabled\\\" status and allowing the custom step to run.\\n\\nIf you wish to control execution of this custom step, include code in an upstream SAS program to set this variable to 0.  This \\\"disables\\\" execution of the custom step.\\n\\nTo \\\"disable\\\" this step, run the following code upstream:\\n\\n%global _gsd_run_trigger;\\n%let _gsd_run_trigger =0;\\n\\nTo \\\"enable\\\" this step again, run the following (it's assumed that this has already been set as a global variable):\\n\\n%let _gsd_run_trigger =1;\\n\\nIMPORTANT: Be aware that disabling this step means that none of its main execution code will run, and any  downstream code which was dependent on this code may fail.  Change this setting only if it aligns with the objective of your SAS Studio program.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"1. The score action for astores is documented here : https://documentation.sas.com/?cdcId=pgmsascdc&cdcVersion=default&docsetId=casactml&docsetTarget=cas-astore-score.htm\\n\\n2. This SAS Communities article: https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526 referred to earlier suggests an approach through which execution of this custom step is controlled during run time.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"change_log_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.1  (16AUG2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Created/contact: \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n- Brett Wujek (brett.wujek@sas.com)\\n- Reza Nazari (reza.nazari@sas.com) \\n- Ruiwen Zhang (ruiwen.zhang@sas.com) \\n- Lorne Rothman (lorne.rothman@sas.com)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"numobs\": 10000,\n\t\t\"outputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/*-----------------------------------------------------------------------------------------*\n   START MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n/* -----------------------------------------------------------------------------------------* \n   Create a global macro variable for the trigger to run this custom step. A value of 1 \n   (the default) enables this custom step to run.  A value of 0 (provided by upstream code)\n   sets this to disabled.\n*------------------------------------------------------------------------------------------ */\n\n%global _gsd_run_trigger;\n\n%if %sysevalf(%superq(_gsd_run_trigger)=, boolean)  %then %do;\n\t%put NOTE: Trigger macro variable _gsd_run_trigger does not exist. Creating it now.;\n    %let _gsd_run_trigger=1;\n%end;\n\n/* -----------------------------------------------------------------------------------------* \n   This macro creates a global macro variable called _usr_nameCaslib\n   that contains the caslib name (aka. caslib-reference-name) associated with the libname \n   and assumes that the libname is using the CAS engine.\n\n   As sysvalue has a length of 1024 chars, we use the trimmed option in proc sql\n   to remove leading and trailing blanks in the caslib name.\n*------------------------------------------------------------------------------------------ */\n\n%macro _usr_getNameCaslib(_usr_LibrefUsingCasEngine); \n\n   %global _usr_nameCaslib;\n   %let _usr_nameCaslib=;\n\n   proc sql noprint;\n      select sysvalue into :_usr_nameCaslib trimmed from dictionary.libnames\n      where libname = upcase(\"&_usr_LibrefUsingCasEngine.\") and upcase(sysname)=\"CASLIB\";\n   quit;\n\n%mend _usr_getNameCaslib;\n\n/*-----------------------------------------------------------------------------------------*\n   This macro creates a dataset of IDs on the fly as per number provided by user.\n*------------------------------------------------------------------------------------------*/\n\n%macro _gsd_createData;\n\n   data PUBLIC.IDONLY;\n\t  length ID 8.;\n\t  %do i=1 %to &numobs.;\n\t     ID = &i.;\n\t     output;\n\t  %end;\n   run;\n\n%mend _gsd_createData;\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE MACRO \n*------------------------------------------------------------------------------------------*/\n\n%macro main_execution_code;\n\n   /*--------------------------------------------------------------------------------------*\n      Run the libref check macro in order to obtain the correct Caslib for desired tables.\n   *---------------------------------------------------------------------------------------*/\n   %global inputCaslib;\n   %global outputCaslib;\n   \n   %_usr_getNameCaslib(&inputtable1_lib.);\n   %let inputCaslib=&_usr_nameCaslib.;\n   %put NOTE: &inputCaslib. is the input caslib.;\n   %let _usr_nameCaslib=;\n\n   %_usr_getNameCaslib(&outputtable1_lib.);\n   %let outputCaslib=&_usr_nameCaslib.;\n   %let _usr_nameCaslib=;\n\n   /*--------------------------------------------------------------------------------------*\n      Generate a dataset of IDs. \n   *---------------------------------------------------------------------------------------*/\n\n   %_gsd_createData;\n\n   proc cas;\n\n      /*-----------------------------------------------------------------------------------*\n         Capture inputs from the UI \n      *------------------------------------------------------------------------------------*/\n\n      input_table_lib   = symget(\"inputCaslib\");\n      input_table_name  = symget(\"inputtable1_name_base\");\n      output_table_lib  = symget(\"outputCaslib\");\n      output_table_name = symget(\"outputtable1_name_base\");\n\t\n      /*-----------------------------------------------------------------------------------*\n         Load astore to memory. \n      *------------------------------------------------------------------------------------*/\n\n      table.loadTable /\n         caslib = input_table_lib,\n         path   = input_table_name||\".sashdat\",\n         casout = {name = input_table_name, caslib=input_table_lib, replace=True}\n      ;\n\n      /*-----------------------------------------------------------------------------------*\n         Load astore to memory. \n      *------------------------------------------------------------------------------------*/\n\n      astore.score /\n         table={name = \"IDONLY\", caslib=\"PUBLIC\"},\n         casOut={name = output_table_name, caslib=output_table_lib, replace=True},\n         rstore={name = input_table_name, caslib=input_table_lib};\n\n   quit;\n\n   /*--------------------------------------------------------------------------------------*\n      Generate a dataset of IDs. \n   *---------------------------------------------------------------------------------------*/\n\n   data &outputtable1.;\n\t  set &outputtable1.;\n\t  SYNTHETIC_DATA_FLAG=0;\n   run;\n\n%mend main_execution_code;\n\n/*-----------------------------------------------------------------------------------------*\n   END OF MACROS\n*------------------------------------------------------------------------------------------*/\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE\n   The execution code is controlled by the trigger variable defined in this custom step. This\n   trigger variable is in an \"enabled\" (value of 1) state by default, but in some cases, as \n   dictated by logic, could be set to a \"disabled\" (value of 0) state.\n*------------------------------------------------------------------------------------------*/\n\n%if &_gsd_run_trigger. = 1 %then %do;\n   %main_execution_code;\n%end;\n%if &_gsd_run_trigger. = 0 %then %do;\n   %put NOTE: This step has been disabled.  Nothing to do.;\n%end;\n\n"}}