{"creationTimeStamp":"2022-07-11T08:03:28.250Z","modifiedTimeStamp":"2022-09-22T09:02:14.418Z","createdBy":"italot","modifiedBy":"italot","name":"DQ - Surviving Record.step","displayName":"DQ - Surviving Record.step","localDisplayName":"DQ - Surviving Record.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","uri":"/dataFlows/steps/8896de81-399d-402e-8351-d207bae25ded","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"_output","displayName":"_output","localDisplayName":"_output","minEntries":1,"maxEntries":1,"type":"table","columnDelta":{"automaticMapping":[{"inputPort":"inputtable1","inputPortName":"inputtable1"}]},"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Surviving Record\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"survOptions\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Surviving Options\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"SORTND\",\n\t\t\t\t\t\t\t\"label\": \"Sort No Dup\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"SORTNDK\",\n\t\t\t\t\t\t\t\"label\": \"Sort No Dup key\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"FCLUSTER\",\n\t\t\t\t\t\t\t\"label\": \"First Cluster\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"LCLUSTER\",\n\t\t\t\t\t\t\t\"label\": \"Last Cluster\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"MCLUSTERBYFIELDS\",\n\t\t\t\t\t\t\t\"label\": \"Merge Cluster by Fields (Rules)\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"MCLUSTERBYRECORD\",\n\t\t\t\t\t\t\t\"label\": \"Merge Cluster by Record (Rules)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"cluster_id\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Cluster ID\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"By Group\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$survOptions\",\n\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\"MCLUSTERBYFIELDS\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$survOptions\",\n\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\"MCLUSTERBYRECORD\"\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"bycolumns\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"By Columns \",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"sortopt\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Additional Sort option to include on a PROC SORT statement, separated by spaces\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"dupouttable\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Specifies the output table to which duplicate observations are written (libname.tablename)\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section2\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Rule Group\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$survOptions\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"MCLUSTERBYFIELDS\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$survOptions\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"MCLUSTERBYRECORD\"\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"rcol1\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select the column to use in the rule\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textarea1\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use an operator to associate with the column (= 'test')\",\n\t\t\t\t\t\t\t\"placeholder\": \"= 'Sample'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$rcol1\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"rcol2\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select the column to use in the rule\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$rcol1\",\n\t\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textarea2\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use an operator to associate with the column (= 'test')\",\n\t\t\t\t\t\t\t\"placeholder\": \"= 'Sample'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"$rcol2\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"rcol3\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select the column to use in the rule\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$rcol2\",\n\t\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textarea3\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use an operator to associate with the column (= 'test')\",\n\t\t\t\t\t\t\t\"placeholder\": \"= 'Sample'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"$rcol3\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"rcol4\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select the column to use in the rule\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$rcol3\",\n\t\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textarea4\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use an operator to associate with the column (= 'test')\",\n\t\t\t\t\t\t\t\"placeholder\": \"= 'Sample'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"$rcol4\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"rcol5\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select the column to use in the rule\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$rcol4\",\n\t\t\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textarea5\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use an operator to associate with the column (= 'test')\",\n\t\t\t\t\t\t\t\"placeholder\": \"= 'Sample'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"$rcol5\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"delwork\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Delete Work Tables\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page3\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Data\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table label 1\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_output\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table label 1\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"The DQ - Surviving Record allows you to extract the best record (Golden Record) from the clustered data by selecting the rules of interest. You can use standard deduplication techniques or create a rule to choose which data should survive.\\n\\nVersion 1.0 (19MAY2022)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"survOptions\": {\n\t\t\t\"value\": \"FCLUSTER\",\n\t\t\t\"label\": \"First Cluster\"\n\t\t},\n\t\t\"cluster_id\": [],\n\t\t\"bycolumns\": [],\n\t\t\"sortopt\": \"\",\n\t\t\"dupouttable\": \"\",\n\t\t\"rcol1\": [],\n\t\t\"textarea1\": \"\",\n\t\t\"delwork\": {\n\t\t\t\"value\": \"Yes\"\n\t\t},\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"_output\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/** \n  @file dq_surv_genhash.sas\n  @brief Create hash table used on surviving macro\n  @details Create hash table used on surviving macro\n\n  Usage:\n\n      %dq_surv_genhash\n\n\n <h4> SAS Macros </h4>\n\n  @version 1.0\n  @date 19MAY2022\n  @author Lorenzo Toja\n\n**/\n%macro dq_surv_genhash ;\n\t%let m_version = %str(1.0) ;\n\t%let m_date    = %str(19MAY2022);\n\n\t%put NOTE: %upcase(&sysmacroname) - Version Number: &m_version - Version Date  : &m_date ;  \n\n\t%let ctr=1 ;\n\t%let token= ;\n\t%let tokent= ;\n\t%let tokenl= ;\n\t%let virg= ;\n\tlength\n\t%do %until(&token=) ;\n\t\t%let token=%scan(&variables,&ctr,\" \") ;\n\t\t%let tokent=%scan(&type,&ctr,\" \") ;\n\t\t%let tokenl=%scan(&length,&ctr,\" \") ;\n\t\t%if &token ne %then %do ;\n\t\t\t&token\n\t\t\t%if %upcase(&tokent)=CHAR %then %do ;\n\t\t\t\t$&tokenl..\n\t\t\t%end ;\n\t\t\t%else %do ;\n\t\t\t\t&tokenl..\n\t\t\t%end ;\n\t\t%end ;\n\t\t%let ctr=%eval(&ctr + 1) ;\n\t%end ;\n\t%if %upcase(&survOptions)=MCLUSTERBYRECORD %then %do ;\n\t\trule_weight 8.\n\t%end ;\n    ;\n\t%let ctr=1 ;\n\t%let token= ;\n\t%let virg= ;\n\tif _N_ = 1 then do;\n\t\tdeclare hash h( hashexp:16);\n\t\th.defineKey(\"&cluster_id\");\n\t\th.defineData(\n        %do %until(&token=) ;\n            %let token=%scan(&variables,&ctr,\" \") ;\n            %if &token ne %then %do ;\n                &virg \"&token\"\n            %end ;\n            %let virg=%str(,) ;\n            %let ctr=%eval(&ctr + 1) ;\n        %end ;\n        %if %upcase(&survOptions)=MCLUSTERBYRECORD %then %do ;\n            , \"rule_weight\"\n        %end ;\n\t\t) ;\n\t\th.defineDone();\n\t\t%let ctr=1 ;\n\t\t%let token= ;\n\t\t%let virg= ;\n\t\tcall missing(\n        %do %until(&token=) ;\n            %let token=%scan(&variables,&ctr,\" \") ;\n            %if &token ne %then %do ;\n                &virg &token\n            %end ;\n            %let virg=%str(,) ;\n            %let ctr=%eval(&ctr + 1) ;\n        %end ;\n        %if %upcase(&survOptions)=MCLUSTERBYRECORD %then %do ;\n            , rule_weight\n        %end ;\n\t\t) ;\n\tend ;\n%mend ;\n\n/** \n  @file dq_surv_savevar.sas\n  @brief Save or Restore variables on surviving record\n  @details Save or Restore variables on surviving record\n\n  Usage:\n\n      %dq_surv_savevar(save) ;\n\n  @param tmode - Define operation mode: SAVE | RESTORE (Positional parameter)\n\n <h4> SAS Macros </h4>\n\n  @version 1.0\n  @date 19MAY2022\n  @author Lorenzo Toja\n\n**/\n\n%macro dq_surv_savevar(tmode) ;\n\t%let m_version = %str(1.0) ;\n\t%let m_date    = %str(19MAY2022);\n\n\t%put NOTE: %upcase(&sysmacroname) - Version Number: &m_version - Version Date  : &m_date ;  \n\n\t%let ctr=1 ;\n\t%let token= ;\n\t%if %upcase(&tmode)=SAVE %then %do ;\n\t\t%do %until(&token=) ;\n\t\t\t%let token=%scan(&variables,&ctr,\" \") ;\n\t\t\t%if &token ne %then %do ;\n\t\t\t\ts_&token=&token ;\n\t\t\t%end ;\n\t\t\t%let ctr=%eval(&ctr + 1) ;\n\t\t%end ;\n\t%end ;\n\t%if %upcase(&tmode)=RESTORE %then %do ;\n\t\t%do %until(&token=) ;\n\t\t\t%let token=%scan(&variables,&ctr,\" \") ;\n\t\t\t%if &token ne %then %do ;\n\t\t\t\t&token=s_&token ;\n\t\t\t%end ;\n\t\t\t%let ctr=%eval(&ctr + 1) ;\n\t\t%end ;\n\t%end ;\n%mend  ;\n\n/** \n  @file dq_surviving.sas\n  @brief Create Golden record\n  @details The Surviving Record allows you to extract the best record (Golden Record) from the clustered data by selecting the rules of interest. You can use standard deduplication techniques or create a rule to choose which data should survive. Used on Custom Step DQ Surviving Record  \n\n  Usage:\n\n      %dq_surviving(inds=libname.tablename) ;\n\n  @param inds= Define input table used to be create the golden record\n\n <h4> SAS Macros </h4>\n   @li dq_surv_genhash.sas\n   @li dq_surv_savevar.sas\n\n  @version 1.0\n  @date 19MAY2022\n  @author Lorenzo Toja\n\n**/\n\n%macro dq_surviving(inds=) ;\n\t%let m_version = %str(1.0) ;\n\t%let m_date    = %str(19MAY2022);\n\n\t%put NOTE: %upcase(&sysmacroname) - Version Number: &m_version - Version Date  : &m_date ;  \n\n\t%let lib = %upcase(%scan(&inds , 1, .));  \n    %let mem = %upcase(%scan(&inds , 2, .));  \n\t%let qinds = &lib..%str(%'&mem%'n) ;\n\t%let _input=&inds ;\n\t%let cluster_id=&cluster_id_1_name ;\n\t\n\t%if %symexist(eqdi_framework_active)=0 %then %do ;\n\t\t%global eqdi_framework_active ;\n\t\t%let eqdi_framework_active=NO ;\n\t%end ;\n\n\t%if &eqdi_framework_active=NO %then %do ;\n\t\t%global job_rc trans_rc sqlrc ;\n\t\t%let sysrc = 0;\n\t\t%let job_rc = 0;\n\t\t%let trans_rc = 0;\n\t\t%let sqlrc = 0;\n\t\t%let syscc = 0;\n\n\t\t%macro rcSet(error); \n\t\t   %if (&error gt &trans_rc) %then \n\t\t\t  %let trans_rc = &error;\n\t\t   %if (&error gt &job_rc) %then \n\t\t\t  %let job_rc = &error;\n\t\t%mend rcSet; \t\n\t\t\n\t%end ;\n\n\t%* find columns and their types in the desired tables - write to macrovars;\n\n\tproc sql noprint;\n\t\tselect strip(col.libname),\n\t\t\t  strip(col.memname), \n\t\t\t  strip(col.name),\n\t\t\t  strip(col.type),\n\t\t\t  col.length,\n\t\t\t  strip(col.format),\n\t\t\t  strip(col.informat),\n\t\t\t  case when tab.dbms_memtype ne '' then tab.dbms_memtype \n\t\t\t\telse tab.memtype\n\t\t\t\tend as memtype\n\t\t\t  into\n\t\t\t  :libnames separated by ' ',\n\t\t\t  :memnames separated by ' ',\n\t\t\t  :varnames separated by '#',\n\t\t\t  :vartypes separated by ' ',\n\t\t\t  :varlengths separated by ' ',\n\t\t\t  :varformats separated by '#',\n\t\t\t  :varinformats separated by '#',\n\t\t\t  :memtypes separated by ' '\n\t\tfrom  sashelp.vcolumn col\n\t\tleft join sashelp.vmember tab on tab.libname=col.libname and tab.memname=col.memname and upcase(tab.libname)=(\"&lib\") and upcase(tab.memname) =(\"&mem\")  \n\t\twhere upcase(col.libname)     =(\"&lib\") \n\t\t\t  and upcase(col.memname) =(\"&mem\");\n\tquit;\n\t%rcSet(&sqlrc); \n\t\n\t%let n_vars= %sysfunc(countw(&varnames,%str(#))); \n\t%global keep type length variables;\n\t%let variables= ;\n\t%let keep= ;\n\t%let type= ;\n\t%let length= ;\n\t%do i=1 %to &n_vars ;\n\t\t%let var     = %scan(&varnames, &i,%str(#), M );  \n\t\t%let vartype = %scan(&vartypes,  &i );  \n\t\t%let varlen  = %scan(&varlengths,  &i ); \n\t\t%let keep=&keep &var ;\n\t\t%let variables=&variables &var ;\n\t\t%let type=&type &vartype ;\n\t\t%let length=&length &varlen ;\n\t%end ;\n\n\t%if &survOptions=MCLUSTERBYFIELDS %then %do ;\n\t\t%macro ruleMERGECLUSTERBYFIELDS ;\n\t\t\trctr=0 ;\n\t\t\t%let rulectr=0 ;\n\t\t\t%do j=1 %to 5 ;\n\t\t\t\t%if &&rcol&j._count > 0 %then %do ;\n\t\t\t\t\tif s_&&rcol&j._1_name %unquote(&&textarea&j) then do ; \n\t\t\t\t\t\t&&rcol&j._1_name = s_&&rcol&j._1_name ;\n\t\t\t\t\t\trctr+1 ;\n\t\t\t\t\tend ;\n\t\t\t\t\t%let rulectr=%eval(&rulectr + 1) ;\n\t\t\t\t%end ;\n\t\t\t%end ;\n\t\t%mend ;\n\t\t%macro ruleMERGECLUSTERBYRECORD ;\n\t\t%mend ;\t\n\t%end ;\n\n\t%if &survOptions=MCLUSTERBYRECORD %then %do ;\n\t\t%macro ruleMERGECLUSTERBYRECORD ;\n\t\t\trctr=0 ;\n\t\t\t%let rulectr=0 ;\n\t\t\t%do j=1 %to 5 ;\n\t\t\t\t%if &&rcol&j._count > 0 %then %do ;\n\t\t\t\t\tif s_&&rcol&j._1_name %unquote(&&textarea&j) then rctr+1 ;\n\t\t\t\t\t%let rulectr=%eval(&rulectr + 1) ;\n\t\t\t\t%end ;\n\t\t\t%end ;\n\t\t%mend ;\n\t\t%macro ruleMERGECLUSTERBYFIELDS ;\n\t\t%mend ;\n\t%end ;\n\n\t%let ctr=1 ;\n\t%let token= ;\n\t%let virg= ;\n\t%if %upcase(&survOptions)=SORTND or %upcase(&survOptions)=SORTNDK or\n\t\t%upcase(&survOptions)=FCLUSTER or %upcase(&survOptions)=LCLUSTER %then %do ;\n\t\tdata work.tmp_nocluster ;\n\t\t\tset &_input ;\n\t\t\twhere &cluster_id eq . ;\n\t\trun ;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t%end ;\n\t%if %upcase(&survOptions)=SORTND or %upcase(&survOptions)=SORTNDK %then %do ;\n\t\tproc sort data=&_input out=work.tmp_cluster\n            %if %upcase(&survOptions)=SORTND %then %do ;\n                nodup\n            %end ;\n            %if %upcase(&survOptions)=SORTNDK %then %do ;\n                nodupkey\n            %end ;\n            %if &dupoutTable ne %then %do ;\n                dupout=&dupoutTable\n            %end ;\n            %if &sortopt ne %then %do ;\n                &sortopt\n            %end ;\n        ;\n        by\n        %do g=1 %to &bycolumns_count ;\n            &&bycolumns_&g._name\n        %end ;\n        ;\n        where &cluster_id ne . ;\n\t\trun ;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t%end ;\n\t%if %upcase(&survOptions)=FCLUSTER or %upcase(&survOptions)=LCLUSTER %then %do ;\n\t\tproc sort data=&_input out=work.tmp_cluster ;\n\t\t\tby &cluster_id\n\t\t\t%do g=1 %to &bycolumns_count ;\n\t\t\t\t&&bycolumns_&g._name\n\t\t\t%end ;\t\t\t\n\t\t\t;\n\t\t\twhere &cluster_id ne . ;\n\t\trun ;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t\tdata work.tmp_cluster\n\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t&dupoutTable\n\t\t\t%end ;\n\t\t\t;\n\t\t\tset work.tmp_cluster ;\n\t\t\tby &cluster_id \n\t\t\t%do g=1 %to &bycolumns_count ;\n\t\t\t\t&&bycolumns_&g._name\n\t\t\t%end ;\t\t\t\n\t\t\t;\n\t\t\t%if %upcase(&survOptions)=FCLUSTER %then %do ;\n\t\t\t\tif first.&cluster_id then output work.tmp_cluster ;\n\t\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t\telse output &dupoutTable ;\n\t\t\t\t%end ;\n\t\t\t%end ;\n\t\t\t%if %upcase(&survOptions)=LCLUSTER %then %do ;\n\t\t\t\tif last.&cluster_id then output work.tmp_cluster ;\n\t\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t\telse output &dupoutTable ;\n\t\t\t\t%end ;\n\t\t\t%end ;\n\t\trun ;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t%end ;\n\t%if %upcase(&survOptions)=MCLUSTERBYFIELDS or\n\t\t%upcase(&survOptions)=MCLUSTERBYRECORD %then %do ;\n\t\tdata  work.tmp_nocluster(keep=&variables)\n\t\t\t%if &dupoutTable ne %then %do ;\n                &dupoutTable(keep=&variables)\n            %end ;\n            ;\n            %dq_surv_genhash\n            set &_input end=fine;\n            if &cluster_id eq . then output work.tmp_nocluster ;\n            if &cluster_id ne . then do ;\n\t\t\t\t%dq_surv_savevar(save) ;\n\t\t\t\t&cluster_id=s_&cluster_id ;\n\t\t\t\trcf=h.find() ;\n\t\t\t\tif \"&survOptions\"='MCLUSTERBYFIELDS' then do ;\n\t\t\t\t\t%ruleMERGECLUSTERBYFIELDS ;\n\t\t\t\t\tif rcf eq 0 then do ;\n\t\t\t\t\t\tif rctr=0 then do ;\n\t\t\t\t\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t\t\t\t\t%dq_surv_savevar(restore) ;\n\t\t\t\t\t\t\t\toutput &dupoutTable ;\n\t\t\t\t\t\t\t%end ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\t\telse do ;\n\t\t\t\t\t\t\trc=h.replace() ;\n\t\t\t\t\t\t\tif rc ne 0 then do ;\n\t\t\t\t\t\t\t\tput 'Not replaced' ;\n\t\t\t\t\t\t\tend ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\tend ;\n\t\t\t\t\telse do ;\n\t\t\t\t\t\trc=h.add() ;\n\t\t\t\t\t\tif rc ne 0 then do ;\n\t\t\t\t\t\t\tput 'Not added' ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\tend ;\n\t\t\t\tend ;\n\t\t\t\tif \"&survOptions\"='MCLUSTERBYRECORD' then do ;\n\t\t\t\t\t%ruleMERGECLUSTERBYRECORD ;\n\t\t\t\t\tif rcf eq 0 then do ;\n\t\t\t\t\t\tif rctr > rule_weight then do ;\n\t\t\t\t\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t\t\t\t\toutput &dupoutTable ;\n\t\t\t\t\t\t\t%end ;\n\t\t\t\t\t\t\t%dq_surv_savevar(restore) ;\n\t\t\t\t\t\t\trule_weight=rctr ;\n\t\t\t\t\t\t\trc=h.replace() ;\n\t\t\t\t\t\t\tif rc ne 0 then do ;\n\t\t\t\t\t\t\t\tput 'Not replaced' ;\n\t\t\t\t\t\t\tend ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\t\telse do ;\n\t\t\t\t\t\t\t%if &dupoutTable ne %then %do ;\n\t\t\t\t\t\t\t\toutput &dupoutTable ;\n\t\t\t\t\t\t\t%end ;\n\t\t\t\t\t\t\t%dq_surv_savevar(restore) ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\tend ;\n\t\t\t\t\telse do ;\n\t\t\t\t\t\trule_weight=rctr ;\n\t\t\t\t\t\trc=h.add() ;\n\t\t\t\t\t\tif rc ne 0 then do ;\n\t\t\t\t\t\t\tput 'Not added' ;\n\t\t\t\t\t\tend ;\n\t\t\t\t\tend ;\n\t\t\t\tend ;\n            end;\n            if fine then rc=h.output(dataset:'tmp_cluster') ;\n\t\trun ;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t%end ;\n\tdata &_output(\n\t\tkeep=&keep\n\t\t) ;\n\t\tset work.tmp_nocluster\n\t\t\twork.tmp_cluster\n\t\t;\n\trun ;\n\t%rcSet(&syserr);\n\t%rcSet(&sysrc);\n\t%if %upcase(&delwork)=YES %then %do ;\n\t\tproc datasets library=work nolist nowarn ;\n\t\t\tdelete tmp_nocluster tmp_cluster\n\t\t;quit;\n\t\t%rcSet(&syserr);\n\t\t%rcSet(&sysrc);\n\t%end ;\n\n\n\t%let syslast=&_output ;\n%mend ;\n\n%dq_surviving(inds=&inputtable1);"}}