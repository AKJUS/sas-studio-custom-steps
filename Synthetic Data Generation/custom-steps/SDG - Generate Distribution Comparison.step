{"creationTimeStamp":"2022-09-11T14:04:30.951Z","modifiedTimeStamp":"2022-10-21T14:12:44.665Z","createdBy":"Sundaresh.Sankaran@sas.com","modifiedBy":"Sundaresh.Sankaran@sas.com","name":"Generate Distribution Comparison.step","displayName":"Generate Distribution Comparison.step","localDisplayName":"Generate Distribution Comparison.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","uri":"/dataFlows/steps/bb885d36-b83b-4083-bdf6-7848c1ff9f15","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"type":"table"},{"name":"inputtable2","displayName":"inputtable2","localDisplayName":"inputtable2","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Train Data\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable2\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Synthetic Data\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"columnselector1\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select the columns which you would like to compare\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"n\",\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"table\": \"inputtable2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Generate Distribution Comparison\\n\\nThe \\\"Generate Distribution Comparison\\\" custom step generates a histogram comparing the distribution of original and synthetic data so that users can understand if their synthetic data is an adequately similar representation of the original. This step results in a chart printed in the Results Tab, accessible from the Submission window.  It also creates and loads an in-memory table which is available for reporting in Visual Analytics.  \\n\\nWhile the purpose of this custom step is to assist in synthetic data generation, users may choose to repurpose the same to compare the distribution of any two tables with the same variables.  Just ensure that the dataset provided to the Synthetic Data input port has a TRAINFLAG set to 1. \\n\\nInput parameters for this custom step are : \\n\\n1. Attach a table containing the original training data to the Training Data input port.\\n2. Attach a table containing the synthetic data to the Synthetic Data input port\\n3. Select the columns you wish to generate distributions for.\\n\\nThere are no explicit output datasets created which are intended to be used further in the flow.  However,  you'll notice that your CASUSER caslib will now contain a table (syn_compare_merged_data)  which is also loaded to memory.  You may choose to visualize this using SAS Visual Analytics.\\n\\nCreated / contact : Brett Wujek (brett.wujek@sas.com),  Reza Nazari (reza.nazari@sas.com) , Ruiwen Zhang (ruiwen.zhang@sas.com) and Sundaresh Sankaran (sundaresh.sankaran@sas.com) \\n\\nVersion : 1.0.   Oct 6 2022\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"inputtable2\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"columnselector1\": []\n\t}\n}","templates":{"SAS":"data &inputtable2.;\nset &inputtable2.;\nTRAINFLAG=0;\nrun;\n\ndata CASUSER.merged_data;\nlength Synthetic_data_flag varchar(*);\nset &inputtable1. &inputtable2.;\nIf TRAINFLAG=0 then Synthetic_data_flag=\"Generated Data\"; else Synthetic_data_flag=\"Original Data\";\nrun;\n\n%put _all_;\n\n%let blankSeparatedList = %_flw_get_column_list(_flw_prefix=columnselector1);\n%let commaSeparatedList = %_flw_get_column_list(_flw_prefix=columnselector1, _delim=%str(,));\ndata _null_;\ncall symput(\"commaSeparatedList\",'\"'||tranwrd(\"&commaSeparatedList.\",\",\",'\",\"')||'\"');\nrun;\n%put &commaSeparatedList.;\n\n%global varname;\n%macro genDistPlot;\n\n%do i=1 %to %sysfunc(countw(&blankSeparatedList.));\n\n\tdata _null_;\n\tcall symput(\"varname\",scan(\"&blankSeparatedList.\", &i., \" \",\"MO\"));\n\trun;\n\nproc sgplot data=CASUSER.merged_data noautolegend;\n title \"Distribution of &varname.\";\n density &varname. / group=Synthetic_data_flag;\nrun;\n\n%end;\n\n%mend genDistPlot;\n%genDistPlot;\n\n\nproc cas;\ntextmanagement.generateIds /\n\ttable={name=\"merged_data\", caslib=\"CASUSER\"}\n\tcasout={name=\"MERGED_DATA_ID\", caslib=\"CASUSER\", replace=True}\n\n;\ndatastep.runCode /\n\tcode=\"data CASUSER.MERGED_DATA_ID; set CASUSER.MERGED_DATA_ID; Synthetic_Data_Measure_Value='Value';run;\";\n\nquit;\n\nproc cas;\ntranspose.transpose /                                         \n   table={name=\"MERGED_DATA_ID\", caslib=\"CASUSER\", groupby={\"_id_\",\"Synthetic_data_flag\"}}                     /*1*/\n   transpose={&commaSeparatedList.}                                  /*3*/\n   id={\"Synthetic_Data_Measure_Value\"}                                        \n   casOut={name=\"syn_compare_merged_data\", caslib=\"PUBLIC\", replace=true}  ;                   /*5*/\n\nquit;\n\n\n\nproc cas;\ntable.save / \n\n\ttable= {name=\"syn_compare_merged_data\", caslib=\"CASUSER\"}\n\tname=\"syn_compare_merged_data\"\n\tcaslib=\"CASUSER\"\n\treplace=True\n;\n\ntable.tableExists  result=rc/\n   name=\"syn_compare_merged_data\", caslib=\"CASUSER\"\n;\nprint rc;\n\ndo until (rc.exists=0);\n   table.dropTable /\n         name=\"syn_compare_merged_data\"\n\t\t caslib=\"CASUSER\"\n         ;\n   table.tableExists  result=rc/\n\t\tname=\"syn_compare_merged_data\"\n\t\tcaslib=\"CASUSER\"\n\t\t;\nprint rc;\nend;\n\n;\n\ntable.loadTable /\n\tpath=\"syn_compare_merged_data.sashdat\"\n\tcaslib=\"CASUSER\"\n\tcasout={name=\"syn_compare_merged_data\", caslib=\"CASUSER\", replace=True}\n\n;\n\n;\n\ttable.promote /\n        name=\"syn_compare_merged_data\"\n        caslib=\"CASUSER\"\n        drop=FALSE\n        targetcaslib=\"CASUSER\"\n    ;\n\n\nquit;\n\n"}}