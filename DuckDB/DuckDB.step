{"creationTimeStamp":"2023-04-26T10:46:05.878Z","modifiedTimeStamp":"2023-05-09T12:51:25.669Z","createdBy":"viyademo01","modifiedBy":"viyademo01","name":"DuckDB.step","displayName":"DuckDB.step","localDisplayName":"DuckDB.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","uri":"/dataFlows/steps/355270d5-cd4c-4c49-b445-74448e7404af","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"_inputtable","displayName":"_inputtable","localDisplayName":"_inputtable","minEntries":0,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"_outputtable","displayName":"_outputtable","localDisplayName":"_outputtable","minEntries":1,"maxEntries":1,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"_page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"SQL\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_inputtable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Select input table:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_outputtable\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Set output table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_ignore_file_options\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Ignore file options:\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_sqlstmt\",\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"label\": \"SQL statement:\",\n\t\t\t\t\t\"placeholder\": \"SQL statement:\\nSELECT * \\nFROM mytable\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"_page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"DuckDB Options:\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_file_search_path_txt\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set directories to search for input files as comma separated list.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_file_search_path\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"File search path:\",\n\t\t\t\t\t\"placeholder\": \"Search path for: parquet, csv and json files\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_duckdb_persist\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Use persistent database \",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_duckdbName\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Set DuckDB folder and name\",\n\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\"placeholder\": \"sasserver:/myfolder/mydatabase.duckdb\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_duckdb_persist\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\ttrue\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"DuckDB configuration settings. \\nYou can put the configuration settings here. Each command must be delimited with a semicolon (;). \\nFor available parameters see DuckDB documentation (SQL/Configuration)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_configuration\",\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"label\": \"Configuration settings:\",\n\t\t\t\t\t\"placeholder\": \"memory_limit='10GB';\\nnull_order='NULLS_FIRST';\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"_page3\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parquet\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set options for Parquet files. \\nThese options don't take effect on table joins or when aggregations are used.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_file_row_number\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Add row number column\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_filename\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Add file name column\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_union_by_name\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Union multiple files by column name instead of column position\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"_page4\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"CSV\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set options for csv files.\\nYou can set general options or overwrite options for dedicated files.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_gen\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"General settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_gen\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_gen\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_gen\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_union_by_name_csv_gen\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Union multiple files by column name instead of column position\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_csv_gen\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Add file name column (only valid when reading single file)\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_gen\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_gen\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_gen\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%d/%m/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_gen\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_gen\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_files_cnt\",\n\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\"label\": \"Number of csv files to overwrite general options\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\"max\": 5,\n\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_file_f1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"File 1 settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_csv_files_cnt\",\n\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t0\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"File name (case sensetive):\",\n\t\t\t\t\t\t\t\"placeholder\": \"E.g.: data.csv\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_names_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1','col2'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_columns_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names and types\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1': 'INTEGER', 'col2': 'VARCHAR'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_f1\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_f1\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_f1\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%m/%d/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_f1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_file_f2\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"File 2 settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_csv_files_cnt\",\n\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t1\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"File name (case sensetive):\",\n\t\t\t\t\t\t\t\"placeholder\": \"E.g.: data.csv\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_names_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1','col2'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_columns_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names and types\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1': 'INTEGER', 'col2': 'VARCHAR'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_f2\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_f2\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_f2\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%m/%d/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_f2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_file_f3\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"File 3 settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_csv_files_cnt\",\n\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t2\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"File name (case sensetive):\",\n\t\t\t\t\t\t\t\"placeholder\": \"E.g.: data.csv\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_names_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1','col2'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_columns_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names and types\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1': 'INTEGER', 'col2': 'VARCHAR'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_f3\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_f3\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_f3\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%m/%d/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_f3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_file_f4\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"File 4 settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_csv_files_cnt\",\n\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t3\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"File name (case sensetive):\",\n\t\t\t\t\t\t\t\"placeholder\": \"E.g.: data.csv\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_names_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1','col2'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_columns_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names and types\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1': 'INTEGER', 'col2': 'VARCHAR'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_f4\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_f4\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_f4\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%m/%d/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_f4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_csv_file_f5\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"File 5 settings\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_csv_files_cnt\",\n\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t4\n\t\t\t\t\t],\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_filename_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"File name (case sensetive):\",\n\t\t\t\t\t\t\t\"placeholder\": \"E.g.: data.csv\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_names_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1','col2'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_columns_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column names and types\",\n\t\t\t\t\t\t\t\"placeholder\": \"'col1': 'INTEGER', 'col2': 'VARCHAR'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_sample_size_f5\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of sample rows to read to detect column type\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_skip_f5\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Number of lines at the top to skip\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_all_varchar_f5\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Make all columns of type VARCHAR\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_delim_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Column delimiter\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_quote_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Quoting string when a data value is quoted\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_dateformat_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Date format to use when parsing dates\",\n\t\t\t\t\t\t\t\"placeholder\": \"%m/%d/%Y (see DuckDB for more format information)\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_decimal_separator_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Decimal separator of numbers\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_nullstr_f5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"String that represents a NULL value\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"_page5\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Postgres\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text4\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set connection parameters to connect with Postgres database.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_connect\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Connect Postgres database\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_host\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Postgres server:\",\n\t\t\t\t\t\"placeholder\": \"127.0.0.1\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_port\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Postgres port:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_user\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"User:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_pwd\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Password:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_database\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Postgres database\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_pg_schema\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Postgres schema\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_ddb_schema\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"DuckDB Schema\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"_page6\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_about\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"The DuckDB step enables you to use DuckDB, a column-oriented OLAP database, to access data.\\n\\nIn this version following data sources are supported:\\n-\\tParquet\\n-\\tCSV files\\n-\\tPostgres\\n\\nFor parameter settings in the data source tabs see information in GitHub (custom steps - DuckDB): https://github.com/sassoftware/sas-studio-custom-steps\\n\\nFor SQL to use with DuckDB see DuckDB documentation: https://duckdb.org/docs/\\n\\nNote: This custom step requires the Python package DuckDB to be installed.\\n\\nChange Log:\\n\\nVersion 1.0 (08MAY2023)\\n  *  Initial version\\n\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"_inputtable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"_outputtable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"_ignore_file_options\": false,\n\t\t\"_sqlstmt\": \"\",\n\t\t\"_file_search_path\": \"\",\n\t\t\"_duckdb_persist\": false,\n\t\t\"_duckdbName\": \"\",\n\t\t\"_configuration\": \"\",\n\t\t\"_file_row_number\": false,\n\t\t\"_filename\": false,\n\t\t\"_union_by_name\": true,\n\t\t\"_sample_size_gen\": 20480,\n\t\t\"_skip_gen\": 0,\n\t\t\"_all_varchar_gen\": false,\n\t\t\"_union_by_name_csv_gen\": false,\n\t\t\"_filename_csv_gen\": false,\n\t\t\"_delim_gen\": \",\",\n\t\t\"_quote_gen\": \"\\\"\",\n\t\t\"_dateformat_gen\": \"\",\n\t\t\"_decimal_separator_gen\": \".\",\n\t\t\"_nullstr_gen\": \"\",\n\t\t\"_csv_files_cnt\": 0,\n\t\t\"_names_f1\": \"\",\n\t\t\"_sample_size_f1\": 20480,\n\t\t\"_skip_f1\": 0,\n\t\t\"_delim_f1\": \",\",\n\t\t\"_quote_f1\": \"\\\"\",\n\t\t\"_decimal_separator_f1\": \".\",\n\t\t\"_sample_size_f2\": 20480,\n\t\t\"_skip_f2\": 0,\n\t\t\"_delim_f2\": \",\",\n\t\t\"_quote_f2\": \"\\\"\",\n\t\t\"_decimal_separator_f2\": \".\",\n\t\t\"_sample_size_f3\": 20480,\n\t\t\"_skip_f3\": 0,\n\t\t\"_delim_f3\": \",\",\n\t\t\"_quote_f3\": \"\\\"\",\n\t\t\"_decimal_separator_f3\": \".\",\n\t\t\"_sample_size_f4\": 20480,\n\t\t\"_skip_f4\": 0,\n\t\t\"_delim_f4\": \",\",\n\t\t\"_quote_f4\": \"\\\"\",\n\t\t\"_decimal_separator_f4\": \".\",\n\t\t\"_sample_size_f5\": 20480,\n\t\t\"_skip_f5\": 0,\n\t\t\"_delim_f5\": \",\",\n\t\t\"_quote_f5\": \"\\\"\",\n\t\t\"_decimal_separator_f5\": \".\",\n\t\t\"_pg_connect\": false,\n\t\t\"_pg_host\": \"\",\n\t\t\"_pg_port\": \"5432\",\n\t\t\"_pg_user\": \"\",\n\t\t\"_pg_pwd\": \"\",\n\t\t\"_pg_database\": \"postgres\",\n\t\t\"_pg_schema\": \"public\",\n\t\t\"_ddb_schema\": \"main\"\n\t}\n}","templates":{"SAS":"PROC Python;\nsubmit;\n\n#################################################################################\nimport duckdb\nimport os\nimport time\n\n#################################################################################\n#function to output message and stop executing the step\n#################################################################################\ndef abortStep(msg):\n    print('*******************************************************************')\n    print(msg)\n    print('*******************************************************************')\n    sas_stmt='data _null_;put \"Error executing in DuckDB! See message below (after proc printto) for more details.\"; abort;run;'\n    SAS.submit(sas_stmt)\n\n#################################################################################\n#function to read general csv parameters\n#################################################################################\ndef readCsvGeneralParameters(files):\n    parameters={}\n    parameters[\"sample_size\"]= int(SAS.symget(\"_sample_size_gen\"))\n    parameters[\"skip\"]= int(SAS.symget(\"_skip_gen\"))\n    parameters[\"all_varchar\"]= int(SAS.symget(\"_all_varchar_gen\"))\n    parameters[\"union_by_name\"]= int(SAS.symget(\"_union_by_name_csv_gen\"))\n    parameters[\"filename\"]= int(SAS.symget(\"_filename_csv_gen\"))\n    parameters[\"delim\"]= SAS.symget(\"_delim_gen\")\n    parameters[\"quote\"]= SAS.symget(\"_quote_gen\")\n    parameters[\"dateformat\"]= SAS.symget(\"_dateformat_gen\")\n    parameters[\"decimal_separator\"]= SAS.symget(\"_decimal_separator_gen\")\n    parameters[\"nullstr\"]= SAS.symget(\"_nullstr_gen\")\n\n    files['general']= parameters\n    return files\n#################################################################################\n#function to read file csv parameters\n#################################################################################\ndef readCsvFileParameters(files):\n    file_cnt= int(SAS.symget(\"_csv_files_cnt\")) +1\n\n    for i in range(1,file_cnt):\n        if len(SAS.symget(\"_filename_f\" +str(i))) > 0:\n            parameters={}\n            parameters[\"names\"]= SAS.symget(\"_names_f\" +str(i))\n            parameters[\"columns\"]= SAS.symget(\"_columns_f\" +str(i))\n            parameters[\"sample_size\"]= int(SAS.symget(\"_sample_size_f\" +str(i)))\n            parameters[\"skip\"]= int(SAS.symget(\"_skip_f\" +str(i)))\n            parameters[\"all_varchar\"]= int(SAS.symget(\"_all_varchar_f\" +str(i)))\n            parameters[\"delim\"]= SAS.symget(\"_delim_f\" +str(i))\n            parameters[\"quote\"]= SAS.symget(\"_quote_f\" +str(i))\n            parameters[\"dateformat\"]= SAS.symget(\"_dateformat_f\" +str(i))\n            parameters[\"decimal_separator\"]= SAS.symget(\"_decimal_separator_f\" +str(i))\n            parameters[\"nullstr\"]= SAS.symget(\"_nullstr_f\" +str(i))\n            \n            files[SAS.symget(\"_filename_f\" +str(i))]= parameters\n    return files\n#################################################################################\n#function to prepare the sql statement for csv files\n#################################################################################\ndef prepCSV(stmt):\n    files= {}\n    files= readCsvGeneralParameters(files)\n    files= readCsvFileParameters(files)\n\n    stmt_csv= ''\n    for token in stmt.split(' '):\n        idx= token.find(\".csv\")\n        if idx >= 0:\n            stmt_csv= stmt_csv + \" read_csv_auto('\" + token[0:idx+4].strip() +\"'\"\n            #in case there is something after .csv we save it here and add it at the end\n            token_end= token[idx+4:]\n            #determin if we have to use the general file parameters or the flie overwrite parameters\n            if token[0:idx+4].strip() not in files:\n                token= 'general'\n                \n            for parameter in files[token]:\n                if type(files[token][parameter]) == int:\n                    stmt_csv= stmt_csv +\",\" +parameter +\"=\" +str(files[token][parameter])\n                elif type(files[token][parameter]) == str:\n                    if len(files[token][parameter]) > 0:\n                        if parameter == 'columns':\n                            stmt_csv= stmt_csv +\",\" +parameter +'= ' +files[token][parameter]\n                        elif parameter == 'quote' and files[token][parameter] == '\"':\n                            stmt_csv= stmt_csv +\",\" +parameter +\"= '\" +files[token][parameter] +\"'\"\n                        else:\n                            stmt_csv= stmt_csv +\",\" +parameter +'= \"' +files[token][parameter] +'\"'\n                    \n            stmt_csv= stmt_csv + \")\" + token_end\n            \n        else:\n            stmt_csv= stmt_csv + ' ' + token.strip()\n    return stmt_csv\n\n#################################################################################\n#function to prepare the sql statement for parquet files\n#################################################################################\ndef prepParquet(stmt):\n    #get Parquet parameters\n    filename= int(SAS.symget(\"_filename\"))\n    file_row_number= int(SAS.symget(\"_file_row_number\"))\n    union_by_name= int(SAS.symget(\"_union_by_name\"))\n\n    stmt_parquet= ''\n    for token in stmt.split(' '):\n        idx= token.find(\".parquet\")\n        if idx >= 0:\n            stmt_parquet= stmt_parquet + \" read_parquet('\" + token[0:idx+8].strip() +\"'\"\n            if filename:\n                stmt_parquet= stmt_parquet + \", filename=true\"\n            if file_row_number:\n                stmt_parquet= stmt_parquet + \", file_row_number=true\"\n            if union_by_name:\n                stmt_parquet= stmt_parquet + \", union_by_name=true\"\n            stmt_parquet= stmt_parquet + \")\" +token[idx+8:]\n        else:\n            stmt_parquet= stmt_parquet + ' ' + token.strip()\n    return stmt_parquet  \n#################################################################################\n#function to connect to Postgres database\n#################################################################################\ndef connectPostgres(con): \n    #we need a database for the Postgres views. We put it in '/tmp/duckdb'\n    home_directory= '/tmp/duckdb'\n    try:\n        os.mkdir(home_directory)\n    except:\n        pass\n    #set the DuckDB home directory\n    con.execute(\"PRAGMA home_directory='\" + home_directory +\"'\")\n    con.execute(\"INSTALL postgres\")\n    con.execute(\"LOAD postgres\")\n\n    #Get Postgres connection parameters\n    pg_host= SAS.symget(\"_pg_host\")\n    pg_port= SAS.symget(\"_pg_port\")\n    pg_user= SAS.symget(\"_pg_user\")\n    pg_pwd= SAS.symget(\"_pg_pwd\")\n    pg_database= SAS.symget(\"_pg_database\")\n    pg_schema= SAS.symget(\"_pg_schema\")\n    ddb_schema= SAS.symget(\"_ddb_schema\")\n\n    #if the DuckDB schema does not exist yet, we create it\n    try:\n        con.execute(\"CREATE SCHEMA IF NOT EXISTS \" + ddb_schema)\n    except Exception as err:\n        abortStep(str(err))\n\n    #Connect to Postgres\n    connectStmt=\"CALL postgres_attach('host=\" + pg_host +\" port=\" +pg_port +\" user=\" +pg_user +\" password=\" +pg_pwd +\" dbname=\" +pg_database +\"', source_schema='\" +pg_schema +\"', sink_schema='\" +ddb_schema +\"', overwrite=true)\"\n    try:\n        con.execute(connectStmt)\n    except Exception as err:\n        abortStep(str(err))\n\n    return\n#################################################################################\n#Main. The script start executing here\n#################################################################################\ntime_step_s= time.time()\nDuckDB= \":memory:\"\n#check if we use persistent database \nif int(SAS.symget(\"_duckdb_persist\")) == 1:\n    #get the name for the DuckDB for persistent database. If not set we connect as :memory:\n    DuckDB= SAS.symget(\"_duckdbName\")\n    if len(DuckDB) > 0:\n        if DuckDB[0:10] != \"sasserver:\":\n            abortStep(\"DuckDB must be on SAS Server not on SAS Content!\")\n\n        #cut off sasserver:\n        DuckDB= DuckDB[10:]\n\n        #if there is no fuffix yet we add the suffix duckdb\n        if DuckDB.split('/')[len(DuckDB.split('/'))-1].find('.') < 0:\n            DuckDB+= '.duckdb'\n    else:\n        DuckDB= \":memory:\"\n\n#connect to memory database\ncon= duckdb.connect(DuckDB)\n\n#set the search path for parquet, csv, and json files\nfile_search_path= SAS.symget(\"_file_search_path\")\ncon.execute(\"set file_search_path to '\" + file_search_path +\"'\")\n\n#get the configuration settings and submit them in one execution line\nconfiguration= SAS.symget(\"_configuration\")\nif len(configuration) > 0:\n    configStmt= ''\n    for setStmt in configuration.split(';'):\n        if len(setStmt) > 0:\n            configStmt+= 'set ' +setStmt.strip() +'; '\n    try:\n        con.execute(configStmt)\n    except Exception as err:\n        abortStep(str(err))\n\n#read input table (if there is one) into a dataframe\n#We can use the name \"_flow_table\" in the sql statement to reference the input table\ninputtable= SAS.symget(\"_inputtable\")\n#if there is a flow input table we assign it to a dataframe\nif len(inputtable) > 0:\n    _flow_table= SAS.sd2df(inputtable)\n\n#connect to Postgres if needed\nif int(SAS.symget(\"_pg_connect\")):\n    connectPostgres(con)\n\n#get the SQL statement\nsqlstmt= SAS.symget(\"_sqlstmt\")\n\n#do not run file parameters if switch off (in SQL page)\n#if switched off the use can run pass through DuckDB SQL symtax\nif int(SAS.symget(\"_ignore_file_options\")) == 0:\n    #prepare sql statement for parquet files\n    sqlstmt= prepParquet(sqlstmt)\n\n    #prepare sql statement for csv files\n    sqlstmt= prepCSV(sqlstmt)\n\n#execute sql statement\ntry:\n    time_sql_s= time.time()\n    df_out= con.execute(sqlstmt).df()\n    time_sql_e= time.time()\nexcept Exception as err:\n    abortStep(str(err))\nelse:\n    #get the name for the step output table and pass the SQL result to the output table\n    outputtable= SAS.symget(\"_outputtable\")\n    SAS.df2sd(df_out, outputtable)\n    time_step_e= time.time()\n\n    print(\"#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#\")\n    print(\"Step stats:\")\n    print(\"Time to execute Step \" +str(round(time_step_e - time_step_s, 3)) +\" sec\")\n    print(\"Time to execute SQL  \" +str(round(time_sql_e - time_sql_s, 3)) +\" sec\")\n    print(\"#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#\")\n\ncon.close()\n\n\n#################################################################################\n\nendsubmit;\nQUIT;"}}