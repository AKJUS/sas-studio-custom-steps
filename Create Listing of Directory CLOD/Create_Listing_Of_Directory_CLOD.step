{"creationTimeStamp":"2022-09-07T16:56:51.608Z","modifiedTimeStamp":"2022-09-09T23:33:05.571Z","createdBy":"Stephan.Weigandt@sas.com","modifiedBy":"Stephan.Weigandt@sas.com","name":"Create_Listing_Of_Directory_CLOD.step","displayName":"Create_Listing_Of_Directory_CLOD.step","localDisplayName":"Create_Listing_Of_Directory_CLOD.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","uri":"/dataFlows/steps/0dbf63cb-3b7a-4802-b6cf-ba1397c831fa","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"Essentials\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Essentials\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"root_directory_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Provide Root Directory (can be from within SAS Server or SAS Content)\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"Select Root Directory\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"Extension_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Extension\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"target_libname_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Target Libname (CAS or 94, needs to exist)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"output_dataset_name_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Name of Output Dataset?\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"General\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"General\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"clod_traverse_directories_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Traverse Subdirectories?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"include_directories_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Include Directories in Output?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"cas_save_on_disk_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Should promoted table be saved on disk?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$cas_promote_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"cas_promote_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"If a CAS library is selected, should table be promoted?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"Admin\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Admin\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"debug_mode_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Debug Mode?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"log_file_path_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Path for logfile creation\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"Please select a location for the log file!\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$write_log_into_file_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"write_log_into_file_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Write Log into File?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"options_seq_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide options to be applied for this run (only single options allowed like mprint, nosource, etc).\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"About\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"CLOD: Create Listing Of Directory:\\n\\nCLOD lists all files and directories that can be found under a provided (root-) directory.\\n\\nIf you have any questions, suggestions, ideas or any unexpected behavior, please contact:\\nstephan.weigandt@sas.com.\\n\\nHere is an overview of the available parameters:\\n\\n#### Provide Root Directory (can be from within SAS Server or SAS Content) - ROOT_DIRECTORY_UI\\n\\nProvide the top level directory that CLOD should use to start looking for files and subfolders. CLOD will then traverse through the whole directory structure and find all the files and folders below this top level directory. \\n\\nIf the root directory is in the SAS Server area, this has to start out with: sasserver: (e.g. example value for root_directory: sasserver:/mnt/desired/path/for/files_to_be_readin/from/SASServer/).\\n\\nIf the root directory is in the SAS Content area, this has to start out with: sascontent: (e.g. example value for root_directory: sascontent:/Public/desired_path_for/files/in/SASContent/).\\n\\n#### Extension - EXTENSION_UI\\n\\nDefault value: *\\n\\nif * is provided, all files are captured in the output. \\nOtherwise, any text string can provided, which will be used as a filter for the ending of the files. So only files will be captured that fall into this filter. \\n\\n#### Target Libname (CAS or 94, needs to exist) - TARGET_LIBNAME_UI\\n\\nThis can be any existing library accessible to SAS Studio. \\nIf it is a CASLIB, the table will NOT be promoted or saved to disk. \\nIf that is desired, this would need to happen outside the custom step. \\n\\n#### Name of Output Dataset? - OUTPUT_DATASET_NAME_UI\\n\\nProvide the output table name. \\n\\n#### Traverse Subdirectories? - CLOD_TRAVERSE_DIRECTORIES_UI\\n\\nSuggested default value: Yes (1)\\n\\nIf Yes is selected, CLOD will traverse all directories that can be found under directory provided in \\\"Root Directory\\\" parameter.\\nIf No is selected, CLOD will only look for files in selected directory. \\n\\n#### Include Directories in Output? - INCLUDE_DIRECTORIES_UI\\n\\nSuggested default value: No (0)\\n\\nIf No is selected, the output dataset doesn't contain the actual directory names, but only the files that could be found. \\nIf Yes is selected, the actual directory names are also captured, and an additional column is added to the output table (OBJECT_TYPE), which is either set to \\\"file\\\" or \\\"folder\\\".\\n\\n#### If a CAS library is selected, should table be promoted? - CAS_PROMOTE_UI\\n\\nSuggested default value: No (0)\\nThis selection is only applied if selected target library is a CAS library. \\nIf No is selected, the table is not promoted and stays only active for the local session.\\nIf Yes is selected, CLOD will promote the table. \\n\\n#### Should promoted table be saved on disk? - CAS_SAVE_ON_DISK_UI\\n\\nSuggested default value: No (0)\\nThis selection is only applied if selected target library is a CAS library and output table is promoted. \\nIf No is selected, the table is not saved on disk.\\nIf Yes is selected, CLOD will save table on disk and make it persistent. \\n\\n#### Debug Mode? - DEBUG_MODE_UI\\n\\nSuggested default value: No (0)\\n\\nIf set to 1, CLOD writes out more information out to the log, that might be helpful for further investigations.\\n\\nIf set to 0, CLOD just writes out the default SAS log output, depending on the settings of the options mprint, source and notes.\\n\\n#### Path for logfile creation - LOG_FILE_PATH_UI\\n\\nsuggested default value: empty/missing.\\n\\nThis parameter is only relevant when the parameter \\\"WRITE_LOG_INTO_FILE_UI\\\" is set to 1. \\n\\nProvide a default path for all runs: as soon as a path is provided, this path is being used for ALL runs.\\n\\nIf the log directory is in the SAS Server area, this has to start out with: sasserver: (e.g. example value for provide_default_log_path: sasserver:/mnt/desired/path/for/log_files_to_be_saved/on/SASServer/).\\n\\nIf the log directory is in the SAS Content area, this has to start out with: sascontent: (e.g. example value for provide_default_log_path: sascontent:/Public/desired_path_for/logfiles/in/SASContent/).\\n\\n#### Write Log into File? - WRITE_LOG_INTO_FILE_UI\\n\\nSuggested default value: No (0)\\n\\nIf set to 0, log is written into default SAS log location.\\n\\nIf set to 1, log is written to location as provided under the parameter \\\"LOG_FILE_PATH_UI\\\".\\n\\n#### Provide options to be applied for this run (only single options allowed like mprint, nosource, etc). - OPTIONS_SEQ_UI\\n\\nIf provided those options will be applied to the execution of the code. \\n\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"root_directory_ui\": \"\",\n\t\t\"Extension_ui\": \"*\",\n\t\t\"target_libname_ui\": \"work\",\n\t\t\"output_dataset_name_ui\": \"directory_overview\",\n\t\t\"clod_traverse_directories_ui\": {\n\t\t\t\"value\": \"1\",\n\t\t\t\"label\": \"Yes\"\n\t\t},\n\t\t\"include_directories_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"cas_save_on_disk_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"cas_promote_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"debug_mode_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"log_file_path_ui\": \"\",\n\t\t\"write_log_into_file_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"options_seq_ui\": \"nonotes nomprint nosource\"\n\t},\n\t\"promptHierarchies\": []\n}","templates":{"SAS":"data work._clod_option_setting_storage;\n\tlength\n\t\tnew_setting $24.\n\t\toriginal_setting $24.\n\t\tnew_setting_seq $256.\n\t\t;\n\tnew_setting = \"\";\n\toriginal_setting = \"\";\n\tnew_setting_seq = \"\";\n\tnumberofsettings = 0;\n\tif 0;\nrun;\n%let _clod_option_validvarname_org = %sysfunc(getoption(validvarname));\noption validvarname = any;\n%if \"&options_seq_ui\" ne \"\" %then\n%do;\ndata _clod_option_setting_storage;\n\tlength new_setting $24.;\n\tnew_setting_seq = strip(\"&options_seq_ui\");\n\tnumberofsettings = count(new_setting_seq, \" \") + 1;\n\t\n\tdo i = 1 to numberofsettings;\n\t\tnew_setting = \"\";\n\t\tnew_setting = scan(new_setting_seq, i, \" \");\n\t\tif not missing(new_setting) then\n\t\tdo;\n\t\t\toriginal_setting = getoption(new_setting);\n\t\t\tcall execute(\"option \"||new_Setting||\";\");\n\t\n\t\t\toutput;\n\t\tend;\n\tend;\n\trun;\t\n%end;\n \n%let install_mode_in_SAS_Content = 0;\n \n \n%let clod_delimiter = ;\n%macro set_os_dependent_values(\n\tsodv_delimiter = clod_delimiter\n\t);\n\t%if %upcase(&SYSSCP) = WIN %then\n\t%do;\n\t\t%let &sodv_delimiter = \\;\n\t%end; %else\n\t%do;\n\t\t%let &sodv_delimiter = /;\n\t%end;\n%mend;\n%set_os_dependent_values(\n\tsodv_delimiter = clod_delimiter\n\t);\n \n/******************************************************************************\n \n%list_all_files\n________\n \n \ncreates a list of files, based on the provided extensions, that are available\nwithin a root directory. It automatically also checks all subdirectories.\n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro creates a SAS dataset that lists all files that can be found within a\nroot directory and all subdirectories under the provided root directory. This can be\napplied to all available files (by choosing \"*\" as extension), or for specific extensions.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nlaf_root_dir                  provide the top level directory from where to search for files.\nlaf_extenstion_to_check       can be the wildcard \"*\" or any extension, e.g. \"CSV\", \"XLM\" etc\n\t\t\t\t\t\t\t\t(provide without quotes)\nlaf_output_ds_file_overview   provide SAS datasets providing LIBNAME and SAS Dataset name\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\nStephan Weigandt    20220610  expanded functionality to also cover SAS Content objects\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro list_all_files(\n\tlaf_root_dir,\n\tlaf_extenstion_to_check,\n\tlaf_output_ds_file_overview,\n\tlaf_debug_mode = 0,\n\tlaf_directory_separator = /,\n\tlaf_traverse_directories = 1,\n\tlaf_is_sas_content_directory = 0,\n\tlaf_iteration_number = 0_0,\n\tlaf_include_directories = 0\n\t);\n\t%local\n\t\tfilrf\n\t\trc\n\t\tdid\n\t\tmemcnt\n\t\tname\n\t\tlal_append_flag\n\t\tlal_length\n\t\ttot_obs\n\t\ttable_append_seq\n\t\tlaf_full_file_name\n\t\ti;\n \n \n\t%let lal_length = %length(&laf_root_dir);\n\t%if \"%substr(%trim(%left(&laf_root_dir)), &lal_length, 1)\" ne \"%trim(%left(&laf_directory_separator))\" %then\n\t%do;\n\t\t%let laf_root_dir = %trim(%left(&laf_root_dir))&laf_directory_separator;\n\t%end;\n\t%if &laf_iteration_number = 0_0 %then\n\t%do;\n\t\tproc datasets lib= work;\n\t\t\tdelete _DIAP_spcl_list_files_:;\n\t\tquit;\n\t%end;\n\t%let laf_do_processing = 1;\n\t%if &laf_is_sas_content_directory = 0 %then\n\t%do;\n\t\tfilename f&laf_iteration_number \"&laf_root_dir\";\n\t%end; %else\n\t%do;\n\t\t%let laf_rc = 1;\n\t\tdata _null_;\n\t\t\tlength fref $ 8 folderPath $ 1024;\n\t\t\tfolderPath = \"&laf_root_dir\";\n\t\t\tfref=\"__isdir\";\n\t\t\trcf = filename(fref, , \"filesrvc\", cats('folderpath=',quote(strip(folderPath))));\n\t\t\tput rcf;\n\t\t\tcall symput (\"laf_rc\", strip(rcf));\n\t\trun;\n \n\t \t%if &laf_rc = 0 %then\n\t\t%do;\n\t\t\tfilename f&laf_iteration_number filesrvc folderpath=\"&laf_root_dir\";\n\t\t%end; %else\n\t\t%do;\n\t\t\t%let laf_do_processing = 0;\n\t\t%end;\n\t%end;\n\t%let laf_next_iteration = %eval(%scan(&laf_iteration_number, 1, '_') + 1);\n\t%let lal_append_flag = 0;\n\t%if %sysfunc(exist(work._DIAP_spcl_list_files_&laf_iteration_number)) %then\n\t%do;\n\t\tdata work._DIAP_spcl_list_files_&laf_iteration_number._inter;\n\t\t\tset work._DIAP_spcl_list_files_&laf_iteration_number\n\t\t\t%if %sysfunc(exist(work._DIAP_spcl_list_files_&laf_iteration_number._inter)) %then\n\t\t\t%do;\n\t\t\t\twork._DIAP_spcl_list_files_&laf_iteration_number._inter\n\t\t\t%end;\n\t\t\t;\n\t\trun;\n\t\t%let lal_append_flag = 1;\n\t%end;\n\tdata work._DIAP_spcl_list_files_&laf_iteration_number ;\n\t\tkeep\n\t\t\tdirectory_path\n\t\t\tfull_file_name\t\n\t\t\tfile_name\n\t\t\tis_in_SAS_Content_flag\n\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t%do;\n\t\t\t\tobject_type\n\t\t\t%end;\n\t\t\t;\n\t\tlength\n\t\t\tdirectory_path $768\n\t\t\tfile_name $256\n\t\t\tfull_file_name $1024\n\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t%do;\n\t\t\t\tobject_type $12\n\t\t\t%end;\n\t\t\t;\n\t\tis_in_SAS_Content_flag = &laf_is_sas_content_directory;\n\t\tdirectory_path = symget(\"laf_root_dir\");\n\t%if &laf_do_processing = 1 %then\n\t%do;\n\t\tdid = dopen(\"f&laf_iteration_number\");\n\t\tmcount = dnum(did);\n\t\t/**\n\t\tcheck if directory exists or the correct area is chosen.\n\t\tif not set to 0 to prevent error message\n\t\t**/\n\t\tif missing(mcount) then\n\t\t\tmcount = 0;\n\t\tdo i=1 to mcount;\n\t\t\tfile_name = dread(did, i);\n\t\t\tfid = mopen(did, file_name);\n\t\t\tfileext = find(file_name,'.');\n\t\t\textension = scan(file_name, -1, '.');\n\t\t\t/* fid=0 means directory in most cases */\n\t\t\tfull_file_name = STRIP(directory_path)||STRIP(file_name);\n\t\t\tif fid > 0 or fileext then\n\t\t\tdo;\n\t\t\t\tif \"&laf_extenstion_to_check\" = \"*\" or\t\n\t\t\t\tupcase(extension) = %upcase(\"&laf_extenstion_to_check\") then\n\t\t\t\tdo;\n\t\t\t\t\t%if &laf_debug_mode %then\n\t\t\t\t\t%do;\n\t\t\t        \tput \"INFORMATION: Found following file:\" full_file_name;\n\t\t\t\t\t%end;\n\t\t\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t\t\t%do;\n\t\t\t\t\t\tobject_type = \"file\";\n\t\t\t\t\t%end;\n\t\t\t\t\toutput;\n\t\t\t\tend;\n\t\t\t\t%if &laf_debug_mode %then\n\t\t\t\t%do;\n\t\t\t\t\telse\n\t\t\t\t\tdo;\n\t\t\t\t\t\tput \"INFORMATION: Skipping due to extension:\" full_file_name;\n\t\t\t\t\tend;\n\t\t\t\t%end;\n\t\t\tend;\n\t\t\t%if &laf_traverse_directories = 1 %then\n\t\t\t%do;\n\t\t\t\telse\n\t\t\t\tdo;\n\t\t\t\t\t%if &laf_debug_mode %then\n\t\t\t\t\t%do;\n\t\t\t\t\t\tput 'INFORMATION: Scanning next directory:' full_file_name;\n\t\t\t\t\t%end;\n\t\t\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t\t\t%do;\n\t\t\t\t\t\tobject_type = \"folder\";\n\t\t\t\t\t\toutput;\n\t\t\t\t\t%end;\t\t\t\t\t\n\t\t\t\t\targ1 = cats('%nrstr(%list_all_files(', full_file_name, \", &laf_extenstion_to_check,\");\n\t\t\t\t\targ2 = cats(\"&laf_output_ds_file_overview,\n\t\t\t\t\tlaf_debug_mode = &laf_debug_mode,\");\n\t\t\t\t\targ3 = cats(\"laf_directory_separator = &laf_directory_separator,\n\t\t\t\t\tlaf_traverse_directories = &laf_traverse_directories,\");\n\t\t\t\t\targ3b = cats(\"laf_include_directories = &laf_include_directories, \");\n\t\t\t\t\targ4 = cats(\"laf_is_sas_content_directory = &laf_is_sas_content_directory,\n\t\t\t\t\tlaf_iteration_number = &laf_next_iteration._\",i,\"))\");\n\t\t\t\t\tcall execute(strip(arg1)||strip(arg2)||strip(arg3)||strip(arg3b)||strip(arg4));\n \n \n\t\t\t\tend;\n\t\t\t%end;\n\t\tend;\n\t\trc = dclose(did);\n\t%end;\n%else\n\t%do;\n\t\tfull_file_name = STRIP(substr(directory_path, 1, length(directory_path)-1));\n\t\t%if &laf_include_directories = 1 %then\n\t\t%do;\n\t\t\tobject_type = \"file\";\n\t\t%end;\n \n\t\toutput;\n\t%end;\n\trun;\n \n \n\t%let tot_obs = 0;\n\tproc sql noprint;\n\t\tselect nobs into :tot_obs\n\t\tfrom dictionary.tables\n\t\twhere upcase(libname)='WORK' and upcase(memname)=\"_DIAP_SPCL_LIST_FILES_&laf_iteration_number\";\n\tquit;\n\t%put total records = &tot_obs.;\t\n\t%if &tot_obs = 0 %then\n\t%do;\n\t\tproc datasets lib= work;\n\t\t\tdelete _DIAP_SPCL_LIST_FILES_&laf_iteration_number;\n\t\tquit;\n\t\t%if lal_append_flag = 1 %then\n\t\t%do;\n\t\t\tdata work._DIAP_spcl_list_files_&laf_iteration_number.;\n\t\t\t\tset work._DIAP_spcl_list_files_&laf_iteration_number._inter;\n\t\t\trun;\n\t\t\tproc datasets lib= work;\n\t\t\t\tdelete _DIAP_spcl_list_files_&laf_iteration_number._inter;\n\t\t\tquit;\n\t\t%end;\n\t%end; %else\n\t%do;\n\t\t%if lal_append_flag = 1 %then\n\t\t%do;\n\t\t\tdata work._DIAP_spcl_list_files_&laf_iteration_number.;\n\t\t\t\tset work._DIAP_spcl_list_files_&laf_iteration_number.\n\t\t\t\t\twork._DIAP_spcl_list_files_&laf_iteration_number._inter;\n\t\t\trun;\n\t\t\tproc datasets lib= work;\n\t\t\t\tdelete _DIAP_spcl_list_files_&laf_iteration_number._inter;\n\t\t\tquit;\n\t\t%end;\n\t%end;\n\t\n\t%if &laf_iteration_number = 0_0 %then\n\t%do;\n\t\t%let table_append_seq = ;\n\t\tproc sql noprint;\n\t\t\tselect memname into :table_append_seq separated by \" \"\n\t\t\tfrom dictionary.tables\n\t\t\twhere upcase(libname)='WORK' and upcase(memname)contains\"_DIAP_SPCL_LIST_FILES_\";\n\t\tquit;\n\t\t%if \"&table_append_seq\" ne \"\" %then\n\t\t%do;\n\t\t\tdata work._laf_file_overview_sort;\n\t\t\t\tset &table_append_seq;\n\t\t\trun;\n\t\t\tproc sort data =work._laf_file_overview_sort;\n\t\t\t\tby full_file_name\n\t\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t\t%do;\n\t\t\t\t\tdescending object_type\n\t\t\t\t%end;\t\t\t\t\n\t\t\t\t;\n\t\t\tquit;\n\t\t\t\n\t\t\tdata &laf_output_ds_file_overview;\n\t\t\t\tset work._laf_file_overview_sort;\n\t\t\t\tby full_file_name;\n\t\t\t\t%if &laf_include_directories = 1 %then\n\t\t\t\t%do;\n\t\t\t\t\tif first.full_file_name ne last.full_file_name  then\n\t\t\t\t\tdo;\n\t\t\t\t\tobject_type = \"file\";\n\t\t\t\t\tend;\n\t\t\t\t%end;\n\t\t\t\tif first.full_file_name;\n\t\t\trun;\n\t\t%end;\n \n \n\t%end;\n \n\t%if &laf_do_processing = 1 %then\n\t%do;\n\t\tfilename f&laf_iteration_number clear;\n\t%end;\n%mend list_all_files;\n/** FOR TESTING ***\n \n \noption mprint source notes;\n%let root_directory = /Users/<<MYUSERID>>/My Folder/SAS Videos;\n%let is_content_dir = 0;\n%let delimiter = /;\n%let delimiter = \\;\n%let include_directories = 1;\n%let extension = *;\n%let overview_ds = work.file_overview;\n%let traverse_directories = 1;\n%list_all_files(\n\t&root_directory,\n\t&extension,\n\t&overview_ds,\n\tlaf_traverse_directories = &traverse_directories,\n\tlaf_debug_mode = 1,\n\tlaf_directory_separator = /,\n\tlaf_is_sas_content_directory = &is_content_dir,\n\tlaf_include_directories = &include_directories\n\t);\n \n*********************/\n/******************************************************************************\n \n%wordcnt\n________\n \n \nCounts the words in a list\n \n______________________________________________________________________________\n \n \nUSAGE:                         %wordcnt(list,delim)\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nFinds the number of words/tokens in a string.  The user specifies a\ndelimiter e.g. # to identify what separates the words.  The macro should be\ncalled in the following way, e.g. %let x=%wordcnt(item1#item2 item2a#item3, '#').  After running\nthe macro x will be assigned the value of wordcnt.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nlist            the name of the string.\ndelim           the delimiter e.g. '#'.\n______________________________________________________________________________\n \n \nCALLS: none.\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n%macro wordcnt(\nlist,\ndelim\n)\n;\n%local\nword\nwc_count;\n%let wc_count = 0;\n%if %quote(&list) ne %then\n%do;\n%let word = %scan(%quote(&list), 1, &delim);\n%let word = %quote(&word);\n%do %while (&word ne);\n%let wc_count = %eval(&wc_count + 1);\n%let word = %scan(%quote(&list), &wc_count+1, &delim);\n%let word = %quote(&word);\n%end;\n%end;\n&wc_count\n%mend wordcnt;\n%macro execute_all();\n \n%let write_log_to_file = &write_log_into_file_ui;\n%if &write_log_to_file eq 1 %then\n%do;\n\t%let provide_default_log_path = %scan(&log_file_path_ui, 2, \":\")/;\n\t%let log_file_directory_source_ui = %scan(&log_file_path_ui, 1, \":\");\n\t\n\t%if \"%upcase(&log_file_directory_source_ui)\" eq \"SASSERVER\" %then\n\t%do;\n\t\t%let log_file_in_SAS_Content = 0;\n\t%end; %else\n\t%do;\n\t\t%let log_file_in_SAS_Content = 1;\n\t%end;\n \n\t/**\n\tdetermine and set todays date\n\t**/\n\tdata _null_;\n\t\ttodaysdate = today();\n\t\tyear = year(todaysdate);\n\t\tmonth = put(month(todaysdate), z2.);\n\t\tday = put(day(todaysdate), z2.);\n\t\tnowtime = time();\n\t\thour = put(hour(nowtime), z2.);\n\t\tminute = put(minute(nowtime), z2.);\n\t\tput minute;\n\t\ttimestamp = trim(left(year))||trim(left(month))||trim(left(day))||\"_\"||trim(left(hour))||trim(left(minute));\n\t\tcall symput('timestamp', timestamp);\n\trun;\n\t%let timestamp = %trim(%left(&timestamp));\n\t%if &debug_mode_ui = 1 %then\n\t%do;\n\t\t%put INFORMATION: Logfile location: &provide_default_log_path;\n\t\t%put INFORMATION: Logfile name : clod_run_&timestamp..log;\n\t%end;\n \n \n\t%if &log_file_in_SAS_Content = 1 %then\n\t%do;\n\t\tfilename logfl\n\t\t\tfilesrvc\n\t\t\tfolderpath = \"&provide_default_log_path\"\n\t\t\tfilename = \"clod_run_&timestamp..log\";\n\t\tfilename printfl\n\t\t\tfilesrvc\n\t\t\tfolderpath = \"&provide_default_log_path\"\n\t\t\tfilename = \"clod_run_&timestamp..out\";\n\t%end; %else\n\t%do;\n\t\tfilename logfl \"&provide_default_log_path.clod_run_&timestamp..log\";\n\t\tfilename printfl \"&provide_default_log_path.clod_run_&timestamp..out\";\n\t%end;\n\tproc printto\n\t\tlog=logfl new\n\t\tprint=printfl new;\n\tquit;\n%end;\n \n \n \n%put \t&=debug_mode_ui\t;\n%put \t&=clod_traverse_directories_ui\t;\n%put \t&=extension_ui\t;\n%put \t&=root_directory_ui\t;\n%put    &=log_file_path_ui;\n%put \t&=target_libname_ui\t;\n%put \t&=write_log_into_file_ui\t;\n%put    &=output_dataset_name_ui;\n%put    &=options_seq_ui;\n%let root_directory = %scan(&root_directory_ui, 2, \":\");\n%let root_dir_src = %upcase(%scan(&root_directory_ui, 1, \":\"));\n%let is_content_dir = 0;\n%if %upcase(\"&root_dir_src\") eq \"SASCONTENT\" %then\n%do;\n\t%let is_content_dir = 1;\n%end;\n%put &=root_directory;\n \n%let \ttarget_libname\t=\t&target_libname_ui\t;\n%let \twrite_log_into_file\t=\t&write_log_into_file_ui\t;\n \n \n%let provide_default_log_path = ;\n%let log_file_directory_source_ui = ;\n%if \"&log_file_path_ui\" ne \"\" %then\n%do;\n\t%let provide_default_log_path = %scan(&log_file_path_ui, 2, \":\")/;\n\t%let log_file_directory_source_ui = %scan(&log_file_path_ui, 1, \":\");\n%end;\n%if \"%upcase(&log_file_directory_source_ui)\" eq \"SASSERVER\" %then\n%do;\n\t%let install_mode_in_SAS_Content = 0;\n%end; %else\n%do;\n\t%let install_mode_in_SAS_Content = 1;\n%end;\n%let target_environment = ;\nproc sql noprint;\n\tselect distinct(engine)\n\tinto :target_environment\n\tfrom dictionary.libnames\n\twhere upcase(libname) = \"%upcase(&target_libname_ui)\"\n\t;\nquit;\n \n\t\n%if %upcase(&target_environment) = CAS %then\n%do;\n\t%if &cas_promote_ui = 1 %then\n\t%do;\n\t\tproc casutil incaslib=\"&target_libname_ui\" outcaslib=\"&target_libname_ui\";\n\t\t\tdroptable casdata = \"&output_dataset_name_ui\" quiet;\n\t\t\tdroptable casdata = \"&output_dataset_name_ui\" quiet;\n\t\tquit;\n\t%end;\n%end;\n \n \n%let include_directories = 1;\n%let overview_ds = &target_libname_ui..&output_dataset_name_ui;\n%let traverse_directories = 1;\n%list_all_files(\n\t&root_directory,\n\t&extension_ui,\n\t&overview_ds,\n\tlaf_traverse_directories = &clod_traverse_directories_ui,\n\tlaf_debug_mode = &debug_mode_ui,\n\tlaf_directory_separator = &clod_delimiter,\n\tlaf_is_sas_content_directory = &is_content_dir,\n\tlaf_include_directories = &include_directories_ui\n\t);\n \n \n\t\n%if %upcase(&target_environment) = CAS %then\n%do;\n\t%if &cas_promote_ui = 1 %then\n\t%do;\n\t\tproc casutil incaslib=\"&target_libname_ui\" outcaslib=\"&target_libname_ui\";\n\t\t\tpromote casdata = \"&output_dataset_name_ui\" casout=\"&output_dataset_name_ui\";\n\t\t\t%if &cas_save_on_disk_ui = 1 %then\n\t\t\t%do;\n\t\t\t\tsave casdata= \"&output_dataset_name_ui\" casout=\"&output_dataset_name_ui\" replace;\n\t\t\t%end;\n\t\tquit;\n \n\t%end;\n \n%end;\n \n%if &write_log_to_file = 1 %then\n%do;\n\tproc printto ;\n\tquit;\n%end;\n \n%mend;\n \n%execute_all();\n \ndata _null_;\n\tset _clod_option_setting_storage;\n\tcall execute(\"option \"||original_setting||\";\");\nrun;\n \noption validvarname = &_clod_option_validvarname_org;\n"}}