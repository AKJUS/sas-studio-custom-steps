{"creationTimeStamp":"2023-03-23T17:25:36.911Z","modifiedTimeStamp":"2023-03-24T10:00:43.424Z","createdBy":"sinsrn","modifiedBy":"sinsrn","name":"NLP - Score Text Classifier.step","displayName":"NLP - Score Text Classifier.step","localDisplayName":"NLP - Score Text Classifier.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","uri":"/dataFlows/steps/de69e172-2841-492b-98e9-faa078f22a91","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputTable","displayName":"inputTable","localDisplayName":"inputTable","minEntries":1,"maxEntries":1,"type":"table"},{"name":"modelTable","displayName":"modelTable","localDisplayName":"modelTable","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"casOut","displayName":"casOut","localDisplayName":"casOut","minEntries":1,"maxEntries":1,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"parameters\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"modelTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Model table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Input parameters\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textVar\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select text variable:\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"table\": \"inputTable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"docId\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select document ID:\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"table\": \"inputTable\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"gpuEnabled\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Enable GPU\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"numDevices\",\n\t\t\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\t\t\"label\": \"Specify GPU device ID (max 1):\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\t\"visible\": \"$gpuEnabled\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"includeAllScores\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Include All Scores\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"advancedParam\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Advanced parameters\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"batchSize\",\n\t\t\t\t\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Batch size:\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"max\": 32,\n\t\t\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\t\t\"excludemin\": false,\n\t\t\t\t\t\t\t\t\t\"excludemax\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"casOut\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Score (output) table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"NLP - Score Text Classifier\\n\\nThis custom step enables you to score a text corpus with a text classifier model trained using the deep learning (BERT-based) textClassifier.trainTextClassifier action. \\n\\nIt uses the recently introduced SAS Visual Text Analytics (VTA) CAS action, textClassifier.scoreTextClassifier.  This augments SAS approaches for Natural Language Processing-based classification models (in addition to rules-based classification). More details in the documentation (link provided below).\\n\\nUse this to classify customer reviews as per a star rating, carry out sentiment analysis, prioritize customer complaints, identify serious adverse events, and many other classification use-cases.\\n\\nUse of this custom step requires a SAS Visual Text Analytics (VTA) license.\\n \\nParameters:\\n\\nNote that this custom step runs on data loaded in SAS Cloud Analytics Services (CAS). Ensure you are connected to CAS before running this step.\\n\\nInput parameters:\\n\\n1. Input table: connect a CAS table containing text you wish to be scored to the \\\"Input table\\\" input port. The table should contain at least one character / varchar variable with the text to be scored, along with a document ID.\\n\\n2. Model table: connect a CAS table to the \\\"Model table\\\" input port.  This should be an in-memory table which was trained using the textClassifier.trainTextClassifier action.\\n\\n3. Text variable: select a variable containing the text you wish to classify.  Ensure you select either a char or varchar variable.\\n\\n4. Document ID: select a column which can act as an identifier for your text observation. \\n\\n5. Enable GPU: choose between using GPU or CPU resources to classify your data.  GPUs are recommended due to their performant nature.  At the same time, note that GPUs may not be readily available in all Viya environments, and may lead to higher cloud costs.  Check with your SAS administrator on the availability of GPU resources.\\n\\n6. As an optional step, if you select Enable GPU, you may choose to provide the device ID of the GPU you wish to use.  Currently, the action allows for only 1 GPU device to be used.\\n\\n7. Include all scores: check this box if you would like text classification scores for all labels to be appended to the observation.  Otherwise, the output table will contain only the predicted label and its score.\\n \\n8. Advanced parameters: you may change the batch size  hyperparameter to a higher or lower value as suggested by documentation. Note this will affect the performance of the scoring process. Refer documentation (below) for more details.\\n\\nOutput table specifications:\\n\\n1. Output port: connect an output CAS table to contain the scored output.\\n\\nDocumentation:\\n\\n1. textClassifier.scoreTextClassifier CAS action : https://go.documentation.sas.com/doc/en/pgmsascdc/default/casvtapg/cas-textclassifier-scoretextclassifier.htm\\n\\nCreated / contact : \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\\nVersion : 1.0.   (19MAR2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"modelTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"textVar\": [],\n\t\t\"docId\": [],\n\t\t\"gpuEnabled\": false,\n\t\t\"numDevices\": null,\n\t\t\"includeAllScores\": false,\n\t\t\"batchSize\": 16,\n\t\t\"casOut\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/* SAS templated code goes here */\n\n\n/*--------------------------------------------------------------------------------------*\n   This macro creates a global macro variable called _usr_nameCaslib\n   that contains the caslib name (aka. caslib-reference-name) associated with the libname \n   and assumes that the libname is using the CAS engine.\n\n   As sysvalue has a length of 1024 chars, we use the trimmed option in proc sql\n   to remove leading and trailing blanks in the caslib name.\n*---------------------------------------------------------------------------------------*/\n\n%macro _usr_getNameCaslib(_usr_LibrefUsingCasEngine); \n\n   %global _usr_nameCaslib;\n   %let _usr_nameCaslib=;\n\n   proc sql noprint;\n      select sysvalue into :_usr_nameCaslib trimmed from dictionary.libnames\n      where libname=upcase(\"&_usr_LibrefUsingCasEngine.\") and upcase(sysname)=\"CASLIB\";\n   quit;\n\n%mend _usr_getNameCaslib;\n\n/*--------------------------------------------------------------------------------------*\n   macro to facilitate abort within a subsequent open code block.\n*---------------------------------------------------------------------------------------*/\n\n%macro abortthisblock;\n   %abort;\n%mend abortthisblock;\n\n\n/*--------------------------------------------------------------------------------------*\n  Call the above \"caslib check\" macro 3 times for each of the tables (and their libnames) presently connected to this step.\n*---------------------------------------------------------------------------------------*/\n\n%_usr_getNameCaslib(&inputTable_lib.);\n%let input_table_lib=&_usr_nameCaslib.;\n\n%if \"&input_table_lib.\"=\"\" %then %do;\n   %put NOTE: Please provide a valid table and libref using the CAS engine.;\n   %abortthisblock;\n%end;\n\n%_usr_getNameCaslib(&modelTable_lib.);\n%let model_table_lib=&_usr_nameCaslib.;\n\n%_usr_getNameCaslib(&casOut_lib.);\n%let output_table_lib=&_usr_nameCaslib.;\n\n\n/* Blank out the _usr_nameCaslib macro variable so as to not leave things dangling. */\n%let _usr_nameCaslib=;\n\n\n\n/*--------------------------------------------------------------------------------------*\n/* Execute some string substitution for \"GPU Devices\" in case the user enables GPU and specifies a GPU device ID */\n\n/* Note : For those interested, a little dated but insightful SAS Global Forum paper on the best way to evaluate if a macro variable is  */\n/* blank (as used below), provided here : http://support.sas.com/resources/papers/proceedings09/022-2009.pdf */\n/*---------------------------------------------------------------------------------------*/\n\n%macro gpu_status_string_substitute;\n   %global deviceArgumentString;\n   %if &gpuEnabled.=0 %then %do;\n      %let deviceArgumentString=;\n   %end;\n   %else %do;\n      %if %sysevalf(%superq(numDevices)=,boolean) %then %do;\n         %let deviceArgumentString=;\n      %end;\n      %else %do;\n         data _null_;\n            call symput(\"deviceArgumentString\",\",device=&numDevices.\");\n         run;\n      %end;\n   %end;\n\n%mend gpu_status_string_substitute;\n\n%gpu_status_string_substitute;\n\n/*---------------------------------------------------------------------------------------*/\n/* Main Processing occurs below */\n/*---------------------------------------------------------------------------------------*/\n\nproc cas;\n\n/* Obtain values from the UI */\n   input_table_name=symget(\"inputTable_name_base\");\n   input_table_lib=symget(\"input_table_lib\");\n   output_table_name=symget(\"casOut_name_base\");\n   output_table_lib=symget(\"output_table_lib\");\n   model_table_name=symget(\"modelTable_name_base\");\n   model_table_lib=symget(\"model_table_lib\");\n   document_id=symget(\"docId_1_name_base\");\n   text_variable=symget(\"textVar_1_name_base\");\n\n/* Score table with a given text classifier model */\n   textClassifier.scoreTextClassifier /               \n      table={name=input_table_name, caslib=input_table_lib}\n      model={name=model_table_name, caslib=model_table_lib}\n      text=text_variable\n      docId=document_id\n      gpu={enable=&gpuEnabled. &deviceArgumentString.}\n      includeAllScores=&includeAllScores.\n      batchSize=&batchSize.\n      casOut={name=output_table_name, caslib=output_table_lib, replace=True}\n;\n\n\nquit;  "}}