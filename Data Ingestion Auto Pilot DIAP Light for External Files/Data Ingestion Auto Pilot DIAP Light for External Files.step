{"creationTimeStamp":"2022-04-13T14:35:28.949Z","modifiedTimeStamp":"2022-10-21T00:19:51.883Z","createdBy":"Stephan.Weigandt@sas.com","modifiedBy":"Stephan.Weigandt@sas.com","name":"Data Ingestion Auto Pilot DIAP Light for External Files.step","displayName":"Data Ingestion Auto Pilot DIAP Light for External Files.step","localDisplayName":"Data Ingestion Auto Pilot DIAP Light for External Files.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","uri":"/dataFlows/steps/b4831b71-2af6-45ba-b270-dc9724847f5a","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"Essentials\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Essentials\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"diap_guided_auto_fl_loc_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Provide CSV File that contains detailed DIAP execution instructions (create a template by choosing \\\"3 - Create Guided Automation Control File Template\\\")\",\n\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\"placeholder\": \"Select CSV file that describes execution (create a template by choosing \\\"3 - Create Guided Automation Control File Template\\\")\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$DIAP_mode_selection_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"root_directory_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Provide Root Directory (can be from within SAS Server or SAS Content)\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"Select Root Directory\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$DIAP_mode_selection_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"controlfile_target_location_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Target Path for Template Creation (Option 3 or 4)\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$DIAP_mode_selection_ui\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"4\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$DIAP_mode_selection_ui\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"3\"\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"DIAP_mode_selection_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Select DIAP Execution Mode\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"1 - Fully Automated\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"2\",\n\t\t\t\t\t\t\t\"label\": \"2 - Guided Automated Execution via Explicit File List\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"3\",\n\t\t\t\t\t\t\t\"label\": \"3 - Create Guided Automation Control File Template\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"4\",\n\t\t\t\t\t\t\t\"label\": \"4 - Create Fixed Width Control File Template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"Extension_ui\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Extension\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"*\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"XLSX\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"XLSM\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"JMP\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"CSV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"TXT\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"JSON\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"SHP\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"NEF\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"CUSTOM\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"target_libname_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Target Libname (CAS or Compute, needs to exist)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"General\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"General\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"root_directory_overwrite_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide Root Directory Manually (must be a physical file storage)\",\n\t\t\t\t\t\"placeholder\": \"If provided, this will overwrite Root Directory from Essentials\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"diap_traverse_directories_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Traverse Subdirectories?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"make_imported_data_persistent_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Make Ingested Data Persistent\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"force_upload_of_all_files_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Force upload of all files, even if already uploaded?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"chck_4_spcl_char_in_vars_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Clean up variable name from weird characters (like #, $, !, blanks, etc, ...)?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"prefix_4_suspicious_src_fl_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide Filename Prefix added if source file shows flaws\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"Source_specific\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Source Specific\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"skip_files_starting_with_seq_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide list of filename beginnings that should be excluded from ingesting (separated by #)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"skip_files_ending_with_seq_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide list of filename endings that should be excluded from ingesting (separated by #)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"csv_big_data_mode_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Anticipate more than 2k vars for CSV?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"check_csv_4_num_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Check character fields in CSV Files for numeric?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"check_txt_file_4_special_chrctui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Check for special characters in text files and replace? (Provide values below)\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"special_chrctr_seq_2_chck_inhex2\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide list of characters in hex format to check in text files (sep by #)\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$check_txt_file_4_special_chrctui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"spcl_chrctr_check_rplcmnt_inhex2\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide characters in hex format to replace with\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$check_txt_file_4_special_chrctui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"Target_Specific\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Target Specific\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"substitute_string_seq_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide Characters to be Omitted in Target Names if too long!\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"max_table_length_ui\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"Max Tablename Length\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"max\": 32,\n\t\t\t\t\t\"min\": 15,\n\t\t\t\t\t\"excludemin\": false,\n\t\t\t\t\t\"excludemax\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"drop_missing_vars_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Drop Missing Variables?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"(0) Keep All\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"(1) Drop All\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"2\",\n\t\t\t\t\t\t\t\"label\": \"(2) Drop only vars with missing varnames AND all miss. values\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"3\",\n\t\t\t\t\t\t\t\"label\": \"(3) Same as (1) w/o Upload, Execute Only on Already Uploaded Data\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"4\",\n\t\t\t\t\t\t\t\"label\": \"(4) Same as (2) w/o Upload, Execute Only on Already Uploaded Data.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"stringseq_2_cutout_from_fn_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Target Filename: Provide String that Should be Cut Out (sep by #)\",\n\t\t\t\t\t\"placeholder\": \"string1#string2\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"stringseq_2_cutout_from_vn_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Target Variablename: Provide String that Should be Cut Out (sep by #)\",\n\t\t\t\t\t\"placeholder\": \"string1#string2\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"diap_create_unique_target_tblnm2\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Create unique final dataset name for different source files/sheets with the same name (in different locations)?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"fnl_ds_name_4_all_extfiles_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"If string provided, all external files will be read into ONE table with the name of this string.\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"diap_fnl_tblname_from_sheetonly2\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"For Multi Table Files (e.g. XLSX, XML, JSON), derive final dataset name from sheet only?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"Admin\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Admin\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"meta_centralized_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Store Metadata Centralized?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"libname_meta_centralized_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Libname for Centralized DIAP Metadata\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$meta_centralized_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"debug_mode_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Debug Mode\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"write_log_into_file_ui\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Write Log into File? (\\\"Yes\\\" will open input field below for path selection)\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"1\",\n\t\t\t\t\t\t\t\"label\": \"Yes\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"0\",\n\t\t\t\t\t\t\t\"label\": \"No\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"log_file_path_ui\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Path for logfile creation\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"Select directory in SAS Server or SAS Content\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$write_log_into_file_ui\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"max_lgth_of_suspicious_str_ui\",\n\t\t\t\t\t\"type\": \"numberfield\",\n\t\t\t\t\t\"label\": \"Max allowed length for Prefix in Filename for suspicious filenames.\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"max\": 8,\n\t\t\t\t\t\"min\": 2,\n\t\t\t\t\t\"excludemin\": false,\n\t\t\t\t\t\"excludemax\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"options_seq_ui\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide options to be applied for this run (only single options allowed like mprint, nosource, etc).\",\n\t\t\t\t\t\"placeholder\": \"mprint source notes\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"About\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"DIAP: Data Ingestion Auto Pilot:\\nVersion: 4.1.0\\n\\nIf you have any questions, suggestions, ideas or any unexpected behavior, please contact:\\nstephan.weigandt@sas.com.\\n\\nDIAP allows to ingest (LOTS) of external data into the SAS ecosystem QUICKLY by only setting a few parameters and pushing a button while increasing the quality and confidence into data insights by handlilng many potential data inconistencies automatically. \\n\\nHINTS:\\nONLY set mandatory options in \\\"Essentials\\\" and everything else can be left at default.\\n\\nHere is an overview of the available parameters:\\n\\n### root_directory (In Custom Step Version: \\\"Select DIAP Execution Mode -> (1)\\\")\\n\\nsuggested default value: if there is a default landing area, this could be provided here.\\n\\nprovide the top level directory that DIAP should use to start looking for files. DIAP will then traverse through the whole directory structure and find all the files below this top level directory. \\n\\nIf the root directory is in the SAS Server area, this has to start out with: sasserver: (e.g. example value for root_directory: sasserver:/mnt/desired/path/for/files_to_be_readin/from/SASServer/).\\n\\nIf the root directory is in the SAS Content area, this has to start out with: sascontent: (e.g. example value for root_directory: sascontent:/Public/desired_path_for/files/in/SASContent/).\\n\\n### diap_traverse_directories (In Custom Step Version: \\\"Traverse Subdirectories?\\\")\\n\\nsuggested default value: 1\\n\\nIf set to 1, DIAP traverses through all subdirectories recursively that can be found under root_directory.\\n\\nIf set to 0, DIAP only checks for files in the provided root_directory.\\n\\n### extension (In Custom Step Version: \\\"Extension\\\")\\n\\nsuggested default value: \\\\*\\n\\nThis parameter determines which files are considered to be imported. Use the wildcard “*” (without quotes) for any files that can be ingested by DIAP, or any extension. The following extensions are supported as of now:\\n•\\tXLSX\\n•\\tXLSM\\n•\\tCSV\\n•\\tJMP\\n•\\tSHP\\n•\\tTXT\\n•\\tNEF\\n•\\tJSON\\n•\\tCustom (Fixed Width/XML)\\n\\n### Target_libname (In Custom Step Version: \\\"Target Libname\\\")\\n\\nsuggested default value: any libname, that is used for testing, e.g. WORK.\\n\\nProvide the SAS or CAS libname, where the imported files are stored at. It needs to be preassigned or assigned within the session.\\n\\n\\n### provide_default_log_path (In Custom Step Version: \\\"Path for logfile creation\\\")\\n\\nsuggested default value: empty/missing.\\n\\nThis parameter is only relevant when the parameter “write_log_into_file” is set to 1. \\n\\nProvide a default path for all runs: as soon as a path is provided, this path is being used for ALL runs.\\n\\nIf the log directory is in the SAS Server area, this has to start out with: sasserver: (e.g. example value for provide_default_log_path: sasserver:/mnt/desired/path/for/log_files_to_be_saved/on/SASServer/).\\n\\nIf the log directory is in the SAS Content area, this has to start out with: sascontent: (e.g. example value for provide_default_log_path: sascontent:/Public/desired_path_for/logfiles/in/SASContent/).\\n\\n\\n### write_log_into_file (In Custom Step Version: \\\"Write Log into File\\\") \\n\\nsuggested default value: 1\\n\\nIf set to 0, log is written into default SAS log location.\\n\\nIf set to 1, log is written to location as provided under the parameter “provide_default_log_path”.\\n\\n### max_table_name_length (In Custom Step Version: \\\"Max Tablename Length\\\")\\n\\nsuggested default value: 27\\n\\nThis determines the maximum allowed table name length.  E.g. in the case of uploading XLSX files to SAS94, the final table name is built by concatenating Excel-filename and Sheetname. \\n\\nSo this can easily lead to a datasetname that is too long.\\n\\nAlso take into consideration that the concatenated name for multiple tables could potentially the same in the abbreviated form. \\n\\nThe system checks for that and adds a counter to the table name. \\n\\nSo, leave at least 2 characters for a counter.\\n\\n### check_txt_file_4_special_chrct (In Custom Step Version: \\\"Check for special characters in text files and replace?\\\")\\n\\nsuggested default value: 0\\n\\nIf set to 0, the text file is read in as-is.\\n\\nIf set to 1, then text files is examined before reading for the characthers as outlined in parameter \\\"special_chrctr_seq_2_chck_in_hex\\\", and replaced with the character as outlined in parameter \\\"spcl_chrctr_check_rplcmnt_in_hex\\\".\\nThis might need to be required, especially if files have NOTES or DESCRIPTION columns, that could contain carriage returns. Those carriage returns would then cause the file to be read in with a few errors, wherever those carriage returns occur.\\n\\n### special_chrctr_seq_2_chck_in_hex (In Custom Step Version: \\\"Provide list of characters in hex format to check in text files (sep by #)\\\")\\n\\nsuggested default value: 0A#0D\\n\\nThis parameter has to be set to one or a sequence of # separated hex formats of a character. \\n\\n0A#0D: checks for new line feed (0A) and carriage return (0D)\\n\\nsee asciitable.com for an overview of all characters in hex format.\\n\\n### spcl_chrctr_check_rplcmnt_in_hex (In Custom Step Version: \\\"Provide characters in hex format to replace with\\\")\\n\\nsuggested default value: 00\\n\\nPlease provide the characters that should be used to replace the special characters as defined in special_chrctr_seq_2_chck_in_hex\\nThe characters value is provided in hex format.\\n\\nsee asciitable.com for an overview of all characters in hex format.\\n\\n### substitute_string_seq (In Custom Step Version: \\\"Provide Characters to be Omitted in Target Names if too long!\\\")\\n\\nsuggested default value: aeiouAEIOU\\n\\nIf the target table name is too long, this string determines which characters are taken out from the target name to shorten the name further, before the truncation process kicks in.\\n\\nE.g. when substitute_string_seq = aeAEoO, then a table name of \\\"ThisIsAVeryLongTableNameThatIsTooLong\\\" and a max_table_name_length = 29\\nwould be first changed to the following: \\\"ThisIsVryLngTblNmThtIsTLng\\\" which would be short enough without any further action needed by DIAP.\\n\\n### skip_files_starting_with_seq (In Custom Step Version: \\\"Provide list of filename beginnings that should be excluded from ingesting (separated by #)\\\")\\n\\ndefault value: _DIAP_Special_File_Definition.csv\\nIf not missing, DIAP will skip all the files that start out with the sequence of string snippets separated by #.\\nE.g. if set to:\\n_DIAP_Special_File_Definition.csv#filebe ginning1#filebeginning2\\nAll files that start out with either _DIAP_Special_File_Definition.csv filebeginning1 or filebeginning2 will NOT be ingested.\\n_DIAP_Special_File_Definition.csv is the default value used by DIAP to describe fixed width or XML definitions and wouldn't be needed to be read into the target libname.\\n\\n### skip_files_ending_with_seq (In Custom Step Version: \\\"Provide list of filename endings that should be excluded from ingesting (separated by #)\\\")\\n\\ndefault value: empty/missing\\nIf not missing, DIAP will skip all the files that end with the sequence of string snippets separated by #.\\nE.g. if set to:\\nfile_ending1#file_ending2#csv\\nAll files that end with either file_ending1 or file_ending2 or csv will NOT be ingested.\\nE.g. in this example all csv files would be skipped.\\n\\n### meta_centralized (In Custom Step Version: \\\"Store Metadata Centralized?\\\")\\n\\nsuggested default value: 1\\n\\nThis value goes closely with the next parameter “libname_meta_centralized”. \\n\\nIf set to 1, all meta information generated by DIAP (e.g. data around upload activity, variable name, table names, etc) will be stored in predetermined tables (_UPLOAD_LOG, _VARIABLE_DICTIONARY) under the libname that is provided under “libname_meta_centralized”.  \\n\\nIf set to 0, all meta information generated by DIAP (e.g. data around upload activity, variable name, table names, etc) will be stored in predetermined tables (_UPLOAD_LOG, _VARIABLE_DICTIONARY) under the libname that is provided under “target_libname”.\\n### libname_meta_centralized (In Custom Step Version: \\\"Libname for Centralized DIAP Metadata\\\")\\n\\nPlease provide a libname (SAS or CAS), that can be used as a central storage for the metainformation that is generated for all DIAP activities, when the “meta_centralized” parameter is set to 1.\\n\\nIMPORTANT:\\n\\nIf the Data Quality Monitoring Solution is installed as well and being used with DIAP, then please here the same libname as being used there for the dictionary location.\\n\\n### debug_mode (In Custom Step Version: \\\"Debug Mode\\\")\\n\\nSuggested default value: 1\\n\\nIf set to 1, DIAP writes out more information out to the log, that might be helpful for further investigations.\\n\\nIf set to 0, DIAP just writes out the default SAS log output, depending on the settings of the options mprint, source and notes.\\n\\n### csv_big_data_mode (In Custom Step Version: \\\"Anticipate more than 2k vars for CSV?\\\")\\n\\nsuggested default value: 0.\\n\\nIf set to 0, csv files are read in with default mode (e.g. normal proc import stuff with guessing the format and such).\\n\\nIf set to 1, csv files are read in with the “big data mode”. It can happen that files are provided that contain more than 2000 variables. So when the anticipated number of variables is over 2000, then it is suggested to set this to 1. This will allow to read in the file completely, but the formats might not be in the desired state. DIAP will try to identify numeric columns and change the format for those from character to numeric.\\n\\n### drop_missing_vars (In Custom Step Version: \\\"Drop Missing Variables?\\\")\\n\\nsuggested default value: 0\\n\\nThe following values are possible:\\n\\nIf set to 0, missing variables are NOT dropped.\\n\\nIf set to 1, all variables that have ALL missing variables are dropped.\\n\\nIf set to 2, only variables with missing variables names AND all missing values will be dropped.\\n\\nIf set to 3, the same as setting to (1), but no data is being uploaded. So, when it is set to 3, the already uploaded files are treated accordingly.\\n\\nIf set to 4, the same as setting to (2), but no data is being uploaded. So, when it is set to 3, the already uploaded files are treated accordingly.\\n\\n### stringseq_2_cutout_from_fn (In Custom Step Version: \\\"Target Filename: Provide String that Should be Cut Out (sep by #)\\\")\\n\\nsuggested default value: empty/missing.\\n\\nProvide a sequence of characters strings that should be omitted in the target filename.This prevents the target table name of getting too long.\\n\\nThe sequence is separated by #\\n\\n### stringseq_2_cutout_from_vn (In Custom Step Version: \\\"Target Variablename: Provide String that Should be Cut Out (sep by #)\\\")\\n\\nsuggested default value: empty/missing.\\n\\nProvide a sequence of characters strings that should be omitted in the target variable name. This  prevents the variable table name of getting too long.\\n\\nThe sequence is separated by #.\\n\\n### prefix_4_suspicious_src_fl (In Custom Step Version: \\\"Provide Filename Prefix if source file is suspicious.\\\")\\n\\nsuggested default value: empty/missing.\\n\\nA string can be provided (max of length LEN as provided in parameter “wof2l_max_lgth_of_suspicious_str”), that will be added and replace the first LEN characters of the table name, if the content seems suspicious.\\n\\nThis would then suggest to check on the source file to understand what is going on.\\n\\nPossible causes for suspicion:\\n-\\tMissing variable names\\n-\\tDuplicate variable names\\n-\\tIf variables are completely missing.\\n\\n### max_lgth_of_suspicious_str (In Custom Step Version: \\\"Max allowed length for Prefix in Filename for suspicious filenames.\\\")\\n\\nsuggested default value: 4\\n\\nThis parameter determines the maximum length of an allowed prefix for suspicious files.\\n\\n### check_csv_4_num (In Custom Step Version: \\\"Check character fields in CSV Files for numeric?\\\")\\n\\nsuggested default value: 0\\n\\n0 (default): this means csv file is read in as-is \\n1: in cases when it is a \\\"quoted\\\" csv files (e.g. happens when come of the content contains the separator), then when this is turned on, the process will perform an additional check on the data that was read in to check of some of the variables that were read in as character actually should be numeric.\\n\\n### force_upload_of_all_files (In Custom Step Version: \\\"Force upload of all files, even if already uploaded?\\\")\\n\\nsuggested default value: 0\\n\\n0 (default): Files are only uploaded if they were updated since last upload\\n1: All files are uploaded no matter if they were uploaded before or not. No date check happening with this option.\\n\\n### diap_fnl_tblname_from_sheetonly (In Custom Step Version: \\\"For Multi Table Files (e.g. XLSX, XML, JSON), derive final dataset name from sheet only?\\\")\\n\\nsuggested default value: 0\\n\\n0 (default): The final dataset name is determined using the filename AND the sheetname (same principles are applied for XLSX, JSON and XML files).\\n1: The final dataset name is determined using ONLY the sheetname (same principles are applied for XLSX, JSON and XML files), ignoring the filename.\\n\\n### diap_create_unique_target_tblnm (In Custom Step Version: \\\"Create unique final dataset name for different source files/sheets with the same name (in different locations)?\\\")\\n\\nsuggested default value: 1\\n\\n0 : when creating the final dataset name, and the final dataset name ends up being the same for 2 or more source files, then DIAP will try to append all those different source files into one target dataset.\\n1 (default): when creating the final dataset name, and the final dataset name ends up being the same for 2 or more source files, then DIAP will add a unique counter to the final dataset name, so that the content of each source file is written in its own final dataset.\\n\\n### chck_4_spcl_char_in_vars (In Custom Step Version: \\\"Clean up variable name from weird characters?\\\")\\n\\nsuggested default value: 1\\n\\n0 : variable names are only checked for minimal \\\"weird\\\" characters (like: &, ', \\\", %, #, ','). With this, option validvarname =any has to be set when wanting to work/see dataset from SAS Studio.\\n1 (default): all weird characters are replace with underscore (_) to create a clean variable name.\\n\\n### fnl_ds_name_4_all_extfiles (In Custom Step Version: \\\"If string provided, all external files will be read into ONE table with the name of this string.\\\")\\n\\nsuggested default value: blank(keep empty)\\n\\nif this field is non blank, then the string provided with this macrovariables is used as the target table name and DIAP will try to combine all external files that are read in, into this one table. \\n\\nThis table will be created (or if existent already, all the new data appended) in the provided target libname. \\n\\nMaximum characters allowed are 32.\\n\\nIf a string/tablename is set here, the setting of diap_create_unique_target_tblnm is ignored.\\n\\n### ONLY AVAILABLE IN CUSTOM STEP: \\\"Select DIAP Execution Mode\\\"\\n\\nThere are 4 execution modes available:\\n- (1) Fully Automated\\n- (2) Guided Automated Execution via Explicit File List (using specific structured CSV file)\\n- (3) Create Guided Automation Control File Template\\n- (4) Create Fixed Width Control File Template\\n\\nIf (3) is selected: The name of the file created in the selected directory is: \\\"_DIAP_guided_execution.csv\\\".\\nIf (4) is selected: The name of the file created in the selected directory is: \\\"_DIAP_Special_File_Definition.csv\\\".\\n\\nWhen (3) or (4) is selected, as a next step please download the template csv files on your local machine for customized settings of the fields.\\n\\nThe provided content that is created in the template is merely an example and SHOULD be deleted and replaced with the settings needed to read in fixed with files or xml files (with defintion files).\\n\\nThen upload the customized CSV files to the server, so that DIAP can process them accordingly.\\n\\n### diap_guided_automation_fl_loc (In Custom Step Version: \\\"Select DIAP Execution Mode -> (2)\\\")\\n\\nsuggested default value: blank (keep empty)\\n\\nIf this parameter is NOT empty, DIAP will try to read instructions from this file and will ignore any settings in root_directory. \\n\\nThis path can point to a file under SAS Server or under SAS Content.\\nDepending on where it is located, the provided path has to look like the following:\\n - if located under SAS SERVER: sasserver:/specific/path/to/file/under/sasserver/guided_execution_instructions.csv\\n - if located under SAS CONTENT: sascontent:/specific/path/to/file/under/sascontent/guided_execution_instructions.csv\\n\\nThe specific structure of the CSV file is described here (or select (3) as execution mode to create a template dynamically): \\n[Structure of Guided Automated Execution CSV File](#testfile-overview---specifics). \\n\\n## Control Files Overview\\n### The Guided Execution: _DIAP_guided_execution.csv\\n\\nThis template file can be created by choosing the execution mode #3.\\nIt is a file that could be used to send ingesting instructions to DIAP on which files to read in how.\\n\\nAll files listed in here will be worked through by DIAP. This allows for a controlled automated ingestion process of external files.\\n\\nThis mode also allows to read in external files that are located in the \\\"SAS Content\\\" area(only delimited text files and XLSX files).\\n\\nPlease fill in the information for each column as follows:\\n\\n#### Column: full_file_name\\n\\nPlease provide the full pathname and filename here.\\nExample:\\nunder SAS Server: /mnt/myuserid/excel_files/my_excel_file.xlsx\\nunder SAS Content: /Public/My_Project/csv_files/my_csv_file_in_SAS_Content.csv\\n\\n#### Column: sheet_xml_json_tablename\\n\\nThis only applies Excel, XML or JSON files. Provide the explicit sheet name to read in.\\nE.g. in an Excel file, there could be many sheets to be available. Each sheet that needs to be ingested needs to be explicitly named, e.g. if there are 5 sheets to be read in from one Excel file, there needs to be one row for each sheet, e.g. a total of 5 rows with the same full_file_name.\\n\\n#### Column: is_in_SAS_Content_flag\\n\\nThis binary flag indicates if the path that is provided under the column full_file_name is located in the \\\"SAS Server\\\" area or the \\\"SAS Content\\\" area. \\n\\nIt is a binary indicator, hence 2 values are allowed: 1 or 0.\\n\\nSet this column to:\\n- 1: Setting this column to 1 means DIAP will look for the file provided in full_file_name in the \\\"SAS Content\\\" area of the VIYA installation.\\n- 0: Setting this column to 0 means DIAP will look for the file provided in full_file_name in the \\\"SAS Server\\\" area of the VIYA installation. (This is also the default value assumed if missing)\\n\\n#### Column: column_names_in_first_row\\n\\nThis binary indicator tells DIAP if the first row of a text file provides the column names. \\n\\nIt is recommended to set this value to 1 for all the entries in this file, and only set it to 0 for those entries where the data provided in text files starts in the first row.\\n\\nIf missing, DIAP assumes a value of 1.\\n\\n#### Column: delimiter_for_text_files\\n\\nThis column can be left empty if DIAP should determine the delimiter of a text file automatically. \\nAt this point DIAP determines one of the following delimiter automatically:\\n- comma\\n- semicolon\\n- tab\\n- pipe\\n- exclamation mark\\n- hash\\n- blank\\n\\nIf there are other delimiters it is recommended to provide the delimiter explicitly in this column.\\nThe following values are used as follows:\\n- blank: This sets the delimiter to be a space/blank: \\\" \\\"\\n- comma: This sets the delimiter to be a comma: \\\",\\\"\\n- semicolon: This sets the delimiter to be a semicolon: \\\";\\\"\\n- exclamation: This sets the delimiter to be a semicolon: \\\"!\\\"\\n- hash: This sets the delimiter to be a semicolon: \\\"#\\\"\\n- tab: This sets the delimiter to be a tab: '09'x\\n- pipe: This sets the delimiter to be a pipe: \\\"|\\\"\\nAny other entries than the 5 keywords above will be taken as the delimiter.\\n\\n#### Column: target_table_name\\n\\nThis column can be left empty. If empty, DIAP will automatically determine the table name according to the filename and sheetname if applicable.\\nOther conditions set in the other parameters (e.g. maximum table name length and substitute_string_seq) will be applied also to table names provided in this column.\\n\\n### Control File to Read In Fixed Width Files:_DIAP_Special_File_Definition.csv\\n\\nThis is a specific file that is used and looked for by DIAP as the first course of action.\\nIf this file \\\"_DIAP_Special_File_Definition.csv\\\" is found anywhere under the selected root directory, all the files in there are processed first according to the specific instructions as outlined in that file.\\n\\nThis file is used to specify specific external files like \\\"fixed width\\\" files or \\\"XML\\\" files. \\nAt this point it is not possible to discover the file definition automatically for those kind of files, but need to be provided via this file.\\n\\nThere are a few shortcuts that will be outlined in the following column definition. \\n\\nFor the fixed-width files, the specific definitions have to be manually provided as described in the following column descriptions.\\n\\nHence for a successful execution, this file needs to be adjusted before first usage. \\n\\n#### Column: directory\\n\\nPlease provide the directory information according to your installation where the test files were copied to.\\n \\nDIAP will choose the entries depending on the selected root directory.\\n\\n#### Column: filename\\n\\nProvide the full filename, or part of the filename.\\nIf only part of the filename is provided (e.g. if the directory contains the files \\\"fixed_file1.txt\\\" and \\\"fixed_file2.txt\\\", and only \\\"fixed\\\" (without the quotes) is put into that field), then all files that start out with \\\"fixed\\\" would be read in accordingly, so in the provided example, both files are read in the same way. \\n\\n#### Column: include_fn_in_table_output\\n\\nIf this is set to 1, there will be an additional variable created in the target table named \\\"_diap_gen_source_file_name\\\" that contains the original filename.\\nIf this is set to 0, no additional variable is created.\\n\\n#### Column: file_type\\n\\nAt this point there are 2 options:\\n\\n(1) fix: This tells DIAP that this entry is a fixed width file definition.\\n(2) xml: This tells DIAP that this entry is a xml file definition.\\n\\n#### Column: variable_name\\n\\nIf the file_type is fix, this can be any variable name for that specific entry.\\nIf the file_type is xml, this needs to match one of the entries in the corresponding xml file. \\n\\n#### Column: variable_label\\n\\nPlease provide any variable label for that entry.\\n\\n#### Column: variable_type\\n\\nPlease provide the variable type for that entry. \\nAllowed values are:\\n(1) char\\n(2) num \\n\\n#### Column: variable_length\\n\\nPlease provide the variable length for that specific entry.\\n\\n#### Column: variable_format\\n\\nPlease provide the SAS Format that should be used for that specific entry.\\n\\n#### Column: variable_informat\\n\\nPlease provide the SAS Informat that should be used for that specific entry.\\n\\n#### Column: variable_start_position\\n\\n(1) For the variable type \\\"fix\\\": This is the exact start position of that entry where DIAP will start reading in the value.\\n(2) For the variable type \\\"xml\\\": This is the order in how the variable occurs in the file. Most important is that the last variable that is defined within each block MUST have the highest order number.  \\n\\n#### Column: variable_end_position\\n\\n(1) For the variable type \\\"fix\\\": This is the exact end position of that entry where DIAP will start reading in the value.\\n(2) For the variable type \\\"xml\\\": This is the order in how the variable occurs in the file. Most important is that the last variable that is defined within each block MUST have the highest order number. This matches the entry of the column \\\"variable_start_position\\\".\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"diap_guided_auto_fl_loc_ui\": \"\",\n\t\t\"root_directory_ui\": \"\",\n\t\t\"controlfile_target_location_ui\": \"\",\n\t\t\"DIAP_mode_selection_ui\": {\n\t\t\t\"value\": \"1\",\n\t\t\t\"label\": \"1 - Fully Automated\"\n\t\t},\n\t\t\"Extension_ui\": {\n\t\t\t\"value\": \"*\"\n\t\t},\n\t\t\"target_libname_ui\": \"work\",\n\t\t\"root_directory_overwrite_ui\": \"\",\n\t\t\"diap_traverse_directories_ui\": {\n\t\t\t\"value\": \"1\"\n\t\t},\n\t\t\"make_imported_data_persistent_ui\": {\n\t\t\t\"value\": \"1\",\n\t\t\t\"label\": \"Yes\"\n\t\t},\n\t\t\"force_upload_of_all_files_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"chck_4_spcl_char_in_vars_ui\": {\n\t\t\t\"value\": \"1\",\n\t\t\t\"label\": \"Yes\"\n\t\t},\n\t\t\"prefix_4_suspicious_src_fl_ui\": \"\",\n\t\t\"skip_files_starting_with_seq_ui\": \"\",\n\t\t\"skip_files_ending_with_seq_ui\": \"\",\n\t\t\"csv_big_data_mode_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"check_csv_4_num_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"check_txt_file_4_special_chrctui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"special_chrctr_seq_2_chck_inhex2\": \"0A#0D\",\n\t\t\"spcl_chrctr_check_rplcmnt_inhex2\": \"00\",\n\t\t\"substitute_string_seq_ui\": \"aeioAEOI\",\n\t\t\"max_table_length_ui\": 27,\n\t\t\"drop_missing_vars_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"(0) Keep All\"\n\t\t},\n\t\t\"stringseq_2_cutout_from_fn_ui\": \"\",\n\t\t\"stringseq_2_cutout_from_vn_ui\": \"\",\n\t\t\"diap_create_unique_target_tblnm2\": {\n\t\t\t\"value\": \"1\",\n\t\t\t\"label\": \"Yes\"\n\t\t},\n\t\t\"fnl_ds_name_4_all_extfiles_ui\": \"\",\n\t\t\"diap_fnl_tblname_from_sheetonly2\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"meta_centralized_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"libname_meta_centralized_ui\": \"Public\",\n\t\t\"debug_mode_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"write_log_into_file_ui\": {\n\t\t\t\"value\": \"0\",\n\t\t\t\"label\": \"No\"\n\t\t},\n\t\t\"log_file_path_ui\": \"\",\n\t\t\"max_lgth_of_suspicious_str_ui\": 3,\n\t\t\"options_seq_ui\": \"\"\n\t},\n\t\"promptHierarchies\": []\n}","templates":{"SAS":"/******************************************************************************\n%adjust_option_setings_controlled\n________\nHelps to maintain option changes in a program flow.\n______________________________________________________________________________\n \nUSAGE:                         %adjust_option_setings_controlled(aosc_option_seq = ,\naosc_temp_option_storage_ds = ,\naosc_running_mode = ,\naosc_validvarname_setting =\n)\n______________________________________________________________________________\n \nDESCRIPTION:\n \nWhen option changes occur (only single word options allowed), then this macro\nhelps to maintain the original option setting, so at the end, the system can\nrevert back to the original settings.\n______________________________________________________________________________\n \nINPUT PARAMETERS AND KEYWORDS:\n \naosc_option_seq                    This can be a blank separated list of single word\nSAS options (e.g. like: source, notes, etc...).\nIf empty nothing happens in CHANGE mode.\naosc_temp_option_storage_ds     provide the full dataset name (e.g. work._aosc_setting_storage)\nwhere the original option values (of the ones that are\nprovided in AOSC_OPTION_SEQ) are stored.\naosc_running_mode                2 modes available:\nCHANGE: takes settings from AOSC_OPTION_SEQ and applies\nthose\nRESET: if AOSC_TEMP_OPTION_STORAGE_DS exists, this mode\nwill set options back according to content of\nthis dataset.\naosc_validvarname_setting         if not blank, validvarname will be set to the value\nas provided with this parameter\n_________________________________________________________________________\n \nCALLS: none.\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20220922  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro adjust_option_setings_controlled(\naosc_option_seq = ,\naosc_temp_option_storage_ds = work._aosc_temp_option_storage_ds,\naosc_running_mode = ,\naosc_validvarname_setting =\n);\n \n \n%if %upcase(\"&aosc_running_mode\") = \"CHANGE\" %then\n%do;\ndata &aosc_temp_option_storage_ds;\nlength\nnew_setting $24.\noriginal_setting $24.\nnew_single_setting_seq $256.\n;\nnew_setting = \"\";\noriginal_setting = \"\";\nnew_single_setting_seq = \"\";\nnumberofsettings = 0;\nadditional_option_setting = 0;\nif 0;\nrun;\n \n%if \"&aosc_option_seq\" ne \"\" or\n\"&aosc_validvarname_setting\" ne \"\" %then\n%do;\ndata &aosc_temp_option_storage_ds;\nlength\nnew_setting $24.\noriginal_setting $24.\nnew_single_setting_seq $256.\n;\nnew_single_setting_seq = strip(\"&aosc_option_seq\");\n%if \"&aosc_validvarname_setting\" ne \"\" %then\n%do;\noriginal_setting = getoption(\"validvarname\");\nadditional_option_setting = 1;\nnew_setting = \"&aosc_validvarname_setting\";\noutput;\ncall execute(\"option validvarname = \"||new_Setting||\";\");\n%end;\n%if \"&aosc_option_seq\" ne \"\" %then\n%do;\nnumberofsettings = kcountc(new_single_setting_seq, \" \") + 1;\nadditional_option_setting = 0;\ndo i = 1 to numberofsettings;\nnew_setting = \"\";\nnew_setting = kscan(new_single_setting_seq, i, \" \");\nif not missing(new_setting) then\ndo;\noriginal_setting = getoption(new_setting);\noutput;\ncall execute(\"option \"||new_Setting||\";\");\nend;\nend;\n%end;\nrun;\n%end;\n%end;\n \n%if %upcase(\"&aosc_running_mode\") = \"RESET\" %then\n%do;\n%if %sysfunc(exist(&aosc_temp_option_storage_ds)) %then\n%do;\ndata _null_;\nset &aosc_temp_option_storage_ds;\nif additional_option_setting = 1 then\ndo;\ncall execute(\"option validvarname = \"||original_setting||\";\");\nend; else\ndo;\ncall execute(\"option \"||original_setting||\";\");\nend;\nrun;\n%end;\n%end;\n%mend adjust_option_setings_controlled;\n \n/** FOR TESTING ***\noption nomprint nosource notes ;\n%let option_seq = mprint notes source;\n%let running_mode = CHANGE;\n%let validvarname_setting = any;\n \n%put PRECHANGE;\n%put VALIDVARNAME: %sysfunc(getoption(validvarname));\n%put SOURCE: %sysfunc(getoption(source));\n%put NOTES: %sysfunc(getoption(notes));\n%put MPRINT: %sysfunc(getoption(mprint));\n \n%adjust_option_setings_controlled(\naosc_option_seq = &option_seq,\naosc_running_mode = &running_mode,\naosc_validvarname_setting = &validvarname_setting\n);\n \n%put POSTCHANGE;\n%put VALIDVARNAME: %sysfunc(getoption(validvarname));\n%put SOURCE: %sysfunc(getoption(source));\n%put NOTES: %sysfunc(getoption(notes));\n%put MPRINT: %sysfunc(getoption(mprint));\n \n \n%let running_mode = RESET;\n \n%adjust_option_setings_controlled(\naosc_running_mode = &running_mode\n);\n \n%put POSTRESET;\n%put VALIDVARNAME: %sysfunc(getoption(validvarname));\n%put SOURCE: %sysfunc(getoption(source));\n%put NOTES: %sysfunc(getoption(notes));\n%put MPRINT: %sysfunc(getoption(mprint));\n \n \n \n*********************/\n \n/**\nstore current SAS options settings, so they can be reset\nat the end of processing\n**/\n \n%adjust_option_setings_controlled(\naosc_option_seq = &options_seq_ui,\naosc_running_mode = CHANGE,\naosc_validvarname_setting = any\n);\n \n%let diap_delimiter = ;\n%macro set_os_dependent_values(\nsodv_delimiter = diap_delimiter\n);\n%if %upcase(&SYSSCP) = WIN %then\n%do;\n%let &sodv_delimiter = \\;\n%end; %else\n%do;\n%let &sodv_delimiter = /;\n%end;\n%mend set_os_dependent_values;\n%set_os_dependent_values(\nsodv_delimiter = diap_delimiter\n);\n/******************************************************************************\n\t\t\t\t01_default_setting_wrapper_import_files_into_viya.sas\nDefault settings for\nwrapper_import_files_into_viya.sas\n________\n \n \nThis is part of DIAP.\n \n \n______________________________________________________________________________\n \n \nUSAGE:       Please follow DIAP usage guide.\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis contains all the default settings for DIAP.\n \n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nroot_directory:\n\t\tprovide the root directory to start checking for\nextension:\n\t\tuse wildcard for any files (*) or a specific one as outlined above\ntarget_libname:\n\t\tprovide SAS or CAS libname, needs to be preassigned, or assigned\n\t\twithin the session\n \n \n \n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt     \t20200406\tFirst officially Released Version\nStephan Weigandt     \t20200420\tadded functionality and fixes\nStephan Weigandt\t\t20210326\tcreate dynamic include statement depending on install location\n______________________________________________________________________________\n \n*******************************************************************************/\n/* option validvarname = any; */\n%let root_directory = /mnt/downloads/ZZ_Testing/top_folder/fixed_width/;\n%let extension = *;\n%let target_libname = ZZ_Tstng;\n%let target_libname = work;\n%let diap_traverse_directories = 1;\n/**\nwifiv_write_log_into_file:\n\tset to 1 if the log should be written out into a file.\n\tset to 0 if the log should go to the default output (e.g. log windows).\nwifiv_provide_default_log_path:\n\tleave empty, then the log is written to a file which is created in the provided top level directory.\n\tprovide a default path for all runs: as soon as a path is provided, this path is being used for ALL runs.\n**/\n \n%let provide_default_log_path = /mnt/downloads/production_code/Logs_of_Runs/;\n%let write_log_into_file = 1;\n \n/*****\nprofiling_execution_option:\nSelect between the following 3 options:\nNO: this is the default, in case the AUTOPROFILING component is not installed, or it is not desired\n\tto execute anything into the AUTOPROFILING section.\nDICT_ONLY:\n\tin this mode, all the uploaded table are only loaded into the profiling dictionary, ready to be p\n\tprofiled, but no profliling is executed.\nPROFILE:\n\tthis option creates some default dictionary entries and also creates the corresponding profiles.\n \nprfl_dict_lctn_in_content_area:\n\tIMPORTANT: LEAVE EMPTY IF CDQM(Data Quality Management System) IS NOT INSTALLED. Then DIAP will\n\t\t\tignore \"profiling_execution_option\" parameter.\n\tIf installed: provide path to dictionary area (must be in SAS CONTENT area, otherwise please\n\tcontact DIAP developement team)\nprfl_cd_lctn_in_content_area\n\tIf CDQM is installed, provide path to code/program area (must be in SAS CONTENT area, otherwise please\n\tcontact DIAP developement team)\n*****/\n \n%let profiling_execution_option = No;\n%let prfl_cd_lctn_in_content_area = /Public/DM_Assets/SAS_DQ_AUTOPROFILE/Programs;\n%let prfl_dict_lctn_in_content_area = /Public/DM_Assets/SAS_DQ_AUTOPROFILE/Imports;\n%let prfl_cd_lctn_in_content_area = ;\n%let prfl_dict_lctn_in_content_area = ;\n \n/******\npath_2_python_shape_script\n\t\tif missing, the app uses the SAS way to read in SHAPE files, otherwise this\n\t\tis the full file path to the python script (which would also include setting up the\n\t\tpython environment).\n******/\n \n%let path_2_python_shape_script = /mnt/viyashare/tools/run_shapeshift.sh;\n%let path_2_python_shape_script = ;\n \n/****\nmax_table_name_length:\nthis determines the maximum allowed table name length.\nE.g. in the case of uploading XLSX files to SAS94, the final table name\nis built by concatenating Excel-filename and Sheetname.\nSo this can easily lead to a datasetname that is too long.\nAlso take into consideration that the concatenated name for multiple tables could\npotentially the same in the abbreviated form.\nThe system checks for that and adds a counter to the table name.\nSo leave at least 2 characters for a counter.\n****/\n \n%let max_table_name_length = 27;\n \n \n/****\ncheck_txt_file_4_special_chrct\ndefault value: 0\n\t0: read text files in as-is\n\t1: before reading in, check text files for special characters within quotes as provided in special_chrctr_seq_2_chck_in_hex and replace\n\t\twith character as provided in spcl_chrctr_check_rplcmnt_in_hex\n \nspecial_chrctr_seq_2_chck_in_hex\ndefault value: 0A#0D\nthis is only used when parameter check_txt_file_4_special_chrct is set to 1\nPlease provide special character in a #-delimited sequence in hex format.\nExample:\n0A#0D: checks for new line feed (0A) and carriage return (0D)\nsee asciitable.com\n \nspcl_chrctr_check_rplcmnt_in_hex\ndefault value: 00\nPlease provide the characters that should be used to replace the special characters as defined in special_chrctr_seq_2_chck_in_hex\nThe characters value is provided in hex format.\n****/\n \n%let check_txt_file_4_special_chrct = 0;\n%let special_chrctr_seq_2_chck_in_hex = 0A#0D;\n%let spcl_chrctr_check_rplcmnt_in_hex = 00;\n \n \n/****\nskip_files_starting_with_seq\ndefault value:\n\tif not missing, DIAP will skip all the files that start out with the sequence of string snippets\n\tseparated by #.\nE.g. if set to:\nfilebeginning1#filebeginning2\nAll files that start out with either filebeginning1 or filebeginning2 will NOT be ingested.\n \nskip_files_ending_with_seq\n\tif not missing, DIAP will skip all the files that end out with the sequence of string snippets\n\tseparated by #.\nE.g. if set to:\nfile_ending1#file_ending2#csv\nAll files that end with either file_ending1 or file_ending2 or csv will NOT be ingested.\nE.g. in this example all csv files will be skipped.\n \n****/\n \n%let skip_files_starting_with_seq = _DIAP_Special_File_Definition.csv;\n%let skip_files_ending_with_seq = ;\n \n/****\nsubstitute_string_seq:\nIf the target table name is too long, this string determines which\ncharacters are taken out from the targeet name to shorten the name further,\nbefore the truncation process kicks in.\nE.g. when substitute_string_seq = aeAEoO\nthen a table name of\n\"ThisIsAVeryLongTableNameThatIsTooLong\" and a\nmax_table_name_length = 29\nwould be first changed to the following:\n\"ThisIsVryLngTblNmThtIsTLng\" which would be short enough\n****/\n \n%let substitute_string_seq = aeiouAEIOU;\n \n%let meta_centralized = 1;\n%let libname_meta_centralized = DM_DtMrt;\n%let libname_meta_centralized = Public;\n \n%let debug_mode = 1;\n \n/**************\nPlease change all parameters above this section as needed.\nSee the meaning of the keywords in the headersection.\nDon't change anything below this section!!\nSet below values to missing if DIAP is executed in 94 environment\n***************/\n \n%let shp_enrich_with_zip = 0;\n \n%let _DIAP_CASHOST_ = controller.viya.sas;\n%let _DIAP_CASPORT_ = 5570;\n%let DIAP_viyaversion = 35;\n%let _DIAP_CASPORT_ = ;\n%let _DIAP_CASHOST_ = ;\n%let DIAP_viyaversion = ;\n \n \n/*****\ncsv_big_data_mode\n\t0: read in with default mode (normal proc import stuff)\n\t1: in big data mode, for anticipated number of variables greater than 2000+, depending of the vector gets bigger than 32k\n*****/\n \n%let csv_big_data_mode = 0;\n \n \n/*****\nmake_imported_data_persistent\n\t0: imported data is only written to memory (promoted)\n\t1: imported data is written to memory (promoted) and also written to disk (persistent)\n*****/\n \n%let make_imported_data_persistent = 1;\n \n/****\ndrop_missing_vars:\n\t0: Don't Drop Missing Variables.\n\t1: Drop ALL Variables with ALL missing values.\n\t2: Drop only vars with miss. varnames AND all miss. values.\n\t3: Same as (1), without uploading data.\n\t4: Same as (2), without uploading data.\n*****/\n \n%let drop_missing_vars = 0;\n \n/****\nstringseq_2_cutout_from_fn\nstringseq_2_cutout_from_vn\n\tfor both parameters: provide a sequence of characters strings that should be either\n\tomitted in the target filename, or the target variable name.\n\tThe sequence is separated by #\n*****/\n \n%let stringseq_2_cutout_from_fn = ;\n%let stringseq_2_cutout_from_vn = ;\n \n/********\n\tprefix_4_suspicious_src_fl\n\t\there a string can be provided (max of length LEN as provided in parameter wof2l_max_lgth_of_suspicious_str), that will be added and replace\n\t\tthe first LEN characters of the table name, is the content seems suspicious and suggests to check on the source file\n\tmax_lgth_of_suspicious_str\n\t\tthe max length is set to 4 by default\n \n*********/\n \n%let prefix_4_suspicious_src_fl=;\n%let max_lgth_of_suspicious_str=4;\n \n/******\n\tcheck_csv_4_num\n\t\t0 (default): this means csv file is read in as-is\n\t\t1: in cases when it is a \"quoted\" csv files (e.g. happens when come of the content contains the separator), then when this is\n\t\t\tturned on, the process will perform an andditional check on the data that was read in to check of some of the variables that\n\t\t\twere read in as character actually should be numeric.\n*****/\n \n%let check_csv_4_num = 0;\n \n/******\n\tforce_upload_of_all_files\n\t\t0 (default): Files are only uploaded if they were updated since last upload\n\t\t1: All files are uploaded independent if they were uploaded before or not. No date check happening with this option.\n*****/\n \n%let force_upload_of_all_files = 0;\n \n/******\n\tdiap_fnl_tblname_from_sheetonly\n\t\t0 (default): The final dataset name is determined using the filename AND the sheetname (same principles are applied for\n\t\t\t\t\tXLSX, JSON and XML files).\n\t\t1: The final dataset name is determined using ONLY the sheetname (same principles are applied for\n\t\t\t\t\tXLSX, JSON and XML files), ignoring the filename.\n*****/\n \n%let diap_fnl_tblname_from_sheetonly = 0;\n \n/******\n\tdiap_create_unique_target_tblnm\n\t\t0 : when creating the final dataset name, and the final dataset name ends up being the same for 2 or more source files,\n\t\t\tthen DIAP will try to append all those different source files into one target dataset.\n\t\t1 (default): when creating the final dataset name, and the final dataset name ends up being the same for 2 or more source files,\n\t\t\tthen DIAP will add a unique counter to the final dataset name, so that the content of each source file is written in its\n\t\t\town final dataset.\n*****/\n \n%let diap_create_unique_target_tblnm = 1;\n \n/******\n\tchck_4_spcl_char_in_vars\n\t\t0 : variable names are only checked for minimal \"weird\" characters (like: &, ', \", %, #, ','). With this, option validvarname =any has to be set\n\t\t\twhen wanting to work/see dataset from SAS Studio.\n\t\t1 (default): all weird characters are replace with underscore (_) to create a clean variable name.\n*****/\n \n%let chck_4_spcl_char_in_vars = 1;\n \n/******\n\tfnl_ds_name_4_all_extfiles\n\t\tif this field is non blank, then the string provided with this macrovariables is used as the target table name and DIAP will try to\n\t\tcombine all external files that are read in, into this one table.\n\t\tThis table will be created (or if existent already, all the new data appended) in the provided target libname.\n\t\tMaximum characters allowed are 32.\n\t\n\t\tIf a string/tablename is set here, the setting of diap_create_unique_target_tblnm is ignored.\n*****/\n \n%let fnl_ds_name_4_all_extfiles = ;\n \n \n/******\n\tdiap_guided_automation_fl_loc\n\t\tif this field is blank files that need to be uploaded are discovered automatically by traversing through all the directories\n\t\tthat can be found under the root directory.\n\t\n\t\tOtherwise please provide the full path starting out either with \"SASSERVER:\" if the file is located on the sasserver, or with\n\t\t\"SASCONTENT:\" if the file is located in SAS Content.\n*****/\n \n%let diap_guided_automation_fl_loc = ;\n/******************************************************************************\n \n%list_all_files\n________\n \n \ncreates a list of files, based on the provided extensions, that are available\nwithin a root directory. It automatically also checks all subdirectories.\n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro creates a SAS dataset that lists all files that can be found within a\nroot directory and all subdirectories under the provided root directory.\nThis can be applied to all available files (by choosing \"*\" as extension),\nor for specific extensions.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nlaf_root_dir                provide the top level directory from\nwhere to search for files.\nlaf_extenstion_to_check     can be the wildcard \"*\" or\nany extension, e.g. \"CSV\", \"XLM\" etc\n(provide without quotes)\nlaf_output_ds_file_overview       provide SAS datasets providing\nLIBNAME and SAS Dataset name\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\nStephan Weigandt    20220610  expanded functionality to also cover\nSAS Content objects\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro list_all_files(\nlaf_root_dir,\nlaf_extenstion_to_check,\nlaf_output_ds_file_overview,\nlaf_debug_mode = 0,\nlaf_directory_separator = /,\nlaf_traverse_directories = 1,\nlaf_is_sas_content_directory = 0,\nlaf_iteration_number = 0_0,\nlaf_include_directories = 0\n);\n%local\nfilrf\nrc\ndid\nmemcnt\nname\nlal_append_flag\nlal_length\ntot_obs\ntable_append_seq\nlaf_full_file_name\ni\nlaf_debug_text_\n;\n \n%let laf_debug_text_skipping = INFORMATION: Skipping due to extension:;\n%let laf_debug_text_scanning = INFORMATION: Scanning next directory:;\n%let lal_length = %length(&laf_root_dir);\n%if \"%substr(%trim(%left(&laf_root_dir)), &lal_length, 1)\" ne\n\"%trim(%left(&laf_directory_separator))\" %then\n%do;\n%let laf_root_dir = %trim(%left(&laf_root_dir))&laf_directory_separator;\n%end;\n%if &laf_iteration_number = 0_0 %then\n%do;\nproc datasets lib= work;\ndelete _LAF_spcl_list_files_:;\nquit;\n%end;\n%let laf_do_processing = 1;\n%if &laf_is_sas_content_directory = 0 %then\n%do;\nfilename f&laf_iteration_number \"&laf_root_dir\";\n%end; %else\n%do;\n%let laf_rc = 1;\ndata _null_;\nlength fref $ 8 folderPath $ 1024;\nfolderPath = \"&laf_root_dir\";\nfref=\"__isdir\";\nrcf = filename(fref, ,\n\"filesrvc\",\ncats('folderpath=',quote(strip(folderPath)))\n);\nput rcf;\ncall symput (\"laf_rc\", strip(rcf));\nrun;\n \n%if &laf_rc = 0 %then\n%do;\nfilename f&laf_iteration_number filesrvc folderpath=\"&laf_root_dir\";\n%end; %else\n%do;\n%let laf_do_processing = 0;\n%end;\n%end;\n%let laf_next_iteration = %eval(%scan(&laf_iteration_number, 1, '_') + 1);\n%let lal_append_flag = 0;\n%if %sysfunc(exist(work._LAF_spcl_list_files_&laf_iteration_number)) %then\n%do;\ndata work._LAF_spcl_list_files_&laf_iteration_number._inter;\nset work._LAF_spcl_list_files_&laf_iteration_number\n%if %sysfunc(exist(\nwork._LAF_spcl_list_files_&laf_iteration_number._inter\n)) %then\n%do;\nwork._LAF_spcl_list_files_&laf_iteration_number._inter\n%end;\n;\nrun;\n%let lal_append_flag = 1;\n%end;\ndata work._LAF_spcl_list_files_&laf_iteration_number ;\nkeep\ndirectory_path\nfull_file_name\nfile_name\nis_in_SAS_Content_flag\n%if &laf_include_directories = 1 %then\n%do;\nobject_type\n%end;\n;\nlength\ndirectory_path $768\nfile_name $256\nfull_file_name $1024\n%if &laf_include_directories = 1 %then\n%do;\nobject_type $12\n%end;\n;\nis_in_SAS_Content_flag = &laf_is_sas_content_directory;\ndirectory_path = symget(\"laf_root_dir\");\n%if &laf_do_processing = 1 %then\n%do;\ndid = dopen(\"f&laf_iteration_number\");\nmcount = dnum(did);\n/**\ncheck if directory exists or the correct area is chosen.\nif not set to 0 to prevent error message\n**/\nif missing(mcount) then\nmcount = 0;\ndo i=1 to mcount;\nfile_name = dread(did, i);\nfid = mopen(did, file_name);\nfileext = kfind(file_name,'.');\nextension = kscan(file_name, -1, '.');\n/* fid=0 means directory in most cases */\nfull_file_name = STRIP(directory_path)||STRIP(file_name);\nif fid > 0 or fileext then\ndo;\nif \"&laf_extenstion_to_check\" = \"*\" or\nkupcase(extension) = %upcase(\"&laf_extenstion_to_check\") then\ndo;\n%if &laf_debug_mode %then\n%do;\nput \"INFORMATION: Found following file:\" full_file_name;\n%end;\n%if &laf_include_directories = 1 %then\n%do;\nobject_type = \"file\";\n%end;\noutput;\nend;\n%if &laf_debug_mode %then\n%do;\nelse\ndo;\nput \"&laf_debug_text_skipping\" full_file_name;\nend;\n%end;\nend;\n%if &laf_traverse_directories = 1 %then\n%do;\nelse\ndo;\n%if &laf_debug_mode %then\n%do;\nput \"&laf_debug_text_scanning\" full_file_name;\n%end;\n%if &laf_include_directories = 1 %then\n%do;\nobject_type = \"folder\";\noutput;\n%end;\narg1 = cats('%nrstr(%list_all_files(',\nfull_file_name,\n\", &laf_extenstion_to_check,\"\n);\narg2 = cats(\"&laf_output_ds_file_overview,\nlaf_debug_mode = &laf_debug_mode,\"\n);\narg3 = cats(\"laf_directory_separator =\n&laf_directory_separator,\nlaf_traverse_directories =\n&laf_traverse_directories,\"\n);\narg3b = cats(\"laf_include_directories =\n&laf_include_directories, \"\n);\narg4 = cats(\"laf_is_sas_content_directory =\n&laf_is_sas_content_directory,\nlaf_iteration_number =\n&laf_next_iteration._\",i,\"))\"\n);\ncall execute(strip(arg1)||\nstrip(arg2)||\nstrip(arg3)||\nstrip(arg3b)||\nstrip(arg4)\n);\nend;\n%end;\nend;\nrc = dclose(did);\n%end;\n%else\n%do;\nfull_file_name = STRIP(ksubstr(directory_path,\n1,\nklength(directory_path)-1)\n);\n%if &laf_include_directories = 1 %then\n%do;\nobject_type = \"file\";\n%end;\n \noutput;\n%end;\nrun;\n \n \n%let tot_obs = 0;\nproc sql noprint;\nselect nobs into :tot_obs\nfrom dictionary.tables\nwhere kupcase(libname)='WORK' and\nkupcase(memname)=\"_LAF_SPCL_LIST_FILES_&laf_iteration_number\";\nquit;\n%put total records = &tot_obs.;\n%if &tot_obs = 0 %then\n%do;\nproc datasets lib= work;\ndelete _LAF_SPCL_LIST_FILES_&laf_iteration_number;\nquit;\n%if lal_append_flag = 1 %then\n%do;\ndata work._LAF_spcl_list_files_&laf_iteration_number.;\nset work._LAF_spcl_list_files_&laf_iteration_number._inter;\nrun;\nproc datasets lib= work;\ndelete _LAF_spcl_list_files_&laf_iteration_number._inter;\nquit;\n%end;\n%end; %else\n%do;\n%if lal_append_flag = 1 %then\n%do;\ndata work._LAF_spcl_list_files_&laf_iteration_number.;\nset work._LAF_spcl_list_files_&laf_iteration_number.\nwork._LAF_spcl_list_files_&laf_iteration_number._inter;\nrun;\nproc datasets lib= work;\ndelete _LAF_spcl_list_files_&laf_iteration_number._inter;\nquit;\n%end;\n%end;\n \n%if &laf_iteration_number = 0_0 %then\n%do;\n%let table_append_seq = ;\nproc sql noprint;\nselect memname into :table_append_seq separated by \" \"\nfrom dictionary.tables\nwhere kupcase(libname)='WORK' and\nkupcase(memname)contains\"_LAF_SPCL_LIST_FILES_\";\nquit;\n%if \"&table_append_seq\" ne \"\" %then\n%do;\ndata work._laf_file_overview_sort;\nset &table_append_seq;\nrun;\nproc sort data =work._laf_file_overview_sort;\nby full_file_name\n%if &laf_include_directories = 1 %then\n%do;\ndescending object_type\n%end;\n;\nquit;\n \ndata &laf_output_ds_file_overview;\nset work._laf_file_overview_sort;\nby full_file_name;\n%if &laf_include_directories = 1 %then\n%do;\nif first.full_file_name ne last.full_file_name  then\ndo;\nobject_type = \"file\";\nend;\n%end;\nif first.full_file_name;\nrun;\n%end;\n \n \n%end;\n \n%if &laf_do_processing = 1 %then\n%do;\nfilename f&laf_iteration_number clear;\n%end;\n%mend list_all_files;\n/** FOR TESTING ***\n \n \noption mprint source notes;\n%let root_directory = /Users/<<MYUSERID>>/My Folder/SAS Videos;\n%let is_content_dir = 0;\n%let delimiter = /;\n%let delimiter = \\;\n%let include_directories = 1;\n%let extension = *;\n%let overview_ds = work.file_overview;\n%let traverse_directories = 1;\n%list_all_files(\n&root_directory,\n&extension,\n&overview_ds,\nlaf_traverse_directories = &traverse_directories,\nlaf_debug_mode = 1,\nlaf_directory_separator = /,\nlaf_is_sas_content_directory = &is_content_dir,\nlaf_include_directories = &include_directories\n);\n \n*********************/\n/******************************************************************************\n \n%write_out_files_2_libname\n________\n \n \nuploads a list of files that are listed in a\n\"#\"-separated sequence (without quotes).\n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro uploads all files that are listed in a #-separated\nmacro sequence into CAS.\nIt takes care of the following formats:\n- CSV\n- JMP\n- XLSX.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nwof2l_full_filename_path_seq:\nThis is a # separated sequence of filenames with full path information.\nSo the sequence is like: path1/filename1 # path2/filename2 # and so on.\nwof2l_cas_target_libname:\nprovide a SAS or CAS libname where the files that are found\nin the directory should be uploaded to.\nThe system can handle SAS or CAS libnames.\nwof2l_fn_as_in_fxd_wdth_def_seq:\nIt is either blank, or a sequence of filenames separated by # as found\nin the special definition file\nwof2l_directory_path_seq:\nThis is a # separated sequence of path that corresponds\nto wof2l_full_filename_path_seq parameter.\nSo the sequence is like: path1 # path2 # and so on...\nwof2l_guessing_row:\ndefault set to 5000,\nthis number is used to determine how many rows are used\nfor the text files to determine the type of the columns\nthat need to be read in.\nwof2l_target_environment:\ndefault set to  AUTO,\nit is recommended to let it set to AUTO, otherwise it\nhas to correspond to the type of the provided target library\nwof2l_upload_activation:\ndefault set to 1,\nThis parameter should only be changed when the program\nis used to test certain functionality that would not need\nto trigger the actual upload process.\nSet to 0 otherwise.\nwof2l_max_name_length:\nmax allowed length of the table name, default value set to 29.\nIn case table name are the same because of truncation,\nand automated counter is inserted.\nwof2l_debug_mode:\ndefault: 0\n1: writes out additional detail information about\nthe process to the log window.\n0: no additional information is written out.\nwof2l_upload_log_ds:\ndefault is set to work._Upload_log\nThis determines the dataset (full dataset name including\nthe library) where the metadata of the process is being\nstored with regards to uploaded files.\nwof2l_shp_enrich_with_zip:\ndefault: 0\n0: Shape files are read in as is.\n1: additional zip information is merged into the SHAPE files\nassuming that they contain lattitude and longitude information.\nIt also needs a specific lookup table\nfor the process to be available.\nwof2l_variable_dict_dataset:\ndefault is set to work._Variable_Dictionary\nThis determines the dataset (full dataset name\nincluding the library) where the metadata of the process is being\nstored with regards to specifically variable names.\nwof2l_substitute_string_seq:\ndefault: aeiouAEIOU\nThis sequence of characters determine which characters will be\nomitted if the target file name or variable name needs to be truncated.\nwof2l_fixed_file_definition_ds:\ncontains the full dataset name, that reflects the special file\ndefinitions as outlined in the csv file(s) within the subdirectory(s).\nwof2l_do_profiling:\ndefault: NO\nNO: no additional processing is done for profiling purposes. This is\nautomatically chosen if the underlying parameters are not set that\nare needed for the processing of profiling.\nDICT_ONLY:  only fills in the default dictionary entries needed for the\nAUTOPROFILING app. The actual profiling needs to be\ntriggered separatedly.\nPROFILE:    This option fills in the default dictionary entries AND also\ntriggers the execution of creating the actual profiles.\nPROFILE_ONLY_NO_UPLOAD:    This option fills in the default dictionary\nentries AND also triggers the execution of creating\nthe actual profiles.\nAnd it will skip the upload process, it will only profile the tables\nthat it can find in the provided libname.\nThe last 2 options require the \"Autoprofiling\" application to be\nincluded with DIAP.    For details check the installation instructions.\nwof2l_profile_dict_location:\nThis parameter is NOT used at this point.\nwof2l_path_2_gis2zip_dataset4shp\ndefault: /mnt/downloads/production_data/metadata\nthis is the path that points to the dataset containing GIS to ZIP data.\nThe name of that dataset has to be: GIS_2_ZCTA\nand contains the following 3 columns:\nx: longitude\ny: latitude\nzip_zcta: zipcode\nwof2l_path_2_python_shape_script\nif missing, the app uses the SAS way to read in SHAPE files,\notherwise this is the full file path to the python script\n(which would also include setting up the python environment).\nwof2l_drop_missing_vars\n0 (default): don't drop missing variables based on missing values\n1: drop all the variables that contain only missing values\n2: drop only the variables that have only missing values AND\ncontain \"ZZ_MISSING_VARNAME_\" in their variable name\nwof2l_stringseq_2_cutout_from_fn\nhere a sequence of strings can be provided (separated by #),\nthat will be cut out when the target TABLE name is created.\nwof2l_stringseq_2_cutout_from_vn\nhere a sequence of strings can be provided (separated by #),\nthat will be cut out when the target VARIABLE name is created.\nwof2l_prefix_4_suspicious_src_fl\nhere a string can be provided (max of length LEN as provided in\nparameter wof2l_max_lgth_of_suspicious_str), that will be added and\nreplace the first LEN characters of the table name, is the content\nseems suspicious and suggests to check on the source file\nwof2l_max_lgth_of_suspicious_str\nthe max length is set to 4 by default\nwof2l_check_csv_4_num\n0 (default): this means csv file is read in as-is\n1: in cases when it is a \"quoted\" csv files (e.g. happens when come\nof the content contains the separator), then when this is turned on,\nthe process will perform an andditional check on the data that was\nread in to check of some of the variables that\nwere read in as character actually should be numeric.\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro write_out_files_2_libname(\nwof2l_full_filename_path_seq,\nwof2l_cas_target_libname,\nwof2l_fn_as_in_fxd_wdth_def_seq,\nwof2l_directory_path_seq = ,\nwof2l_guessing_row = 50000,\nwof2l_target_environment = AUTO,\nwof2l_upload_activation = 1,\nwof2l_max_name_length = 29,\nwof2l_debug_mode = 0,\nwof2l_upload_log_ds = work._Upload_log,\nwof2l_shp_enrich_with_zip = 1,\nwof2l_variable_dict_dataset = work._VARIABLE_DICTIONARY,\nwof2l_substitute_string_seq = aeiouAEIOU,\nwof2l_fixed_file_definition_ds = ,\nwof2l_do_profiling = NO,\nwof2l_profile_dict_location = ,\nwof2l_path_2_gis2zip_dataset4shp = /mnt/downloads/production_data/metadata,\nwof2l_path_2_python_shape_script = ,\nwof2l_csv_big_data_mode = 0,\nwof2l_drop_missing_vars = 0,\nwof2l_stringseq_2_cutout_from_fn = ,\nwof2l_stringseq_2_cutout_from_vn = ,\nwof2l_prefix_4_suspicious_src_fl = CHK,\nwof2l_max_lgth_of_suspicious_str = 4,\nwof2l_check_csv_4_num = 0,\nwof2l_viyaversion = 35,\nwof2l_chck_txt_fl_4_spcl_chrct = 0,\nwof2l_spcl_chrctr_sq2chck_in_hex = 0A#0D,\nwof2l_spcl_chrct_chck_rplcmnt_hx = 00,\nwof2l_make_imported_data_prsstnt = 1,\nwof2l_force_upload_of_all_files = 0,\nwof2l_skip_files_start_with_seq =  ,\nwof2l_skip_files_end_with_seq = ,\nwof2l_fnl_tblname_from_sheetonly = 1,\nwof2l_create_unique_target_tblnm = 0,\nwof2l_delimiter = /,\nwof2l_chck_4_spcl_char_in_vars = 1,\nwof2l_fnl_ds_name_4_all_extfiles = ,\nwof2l_diap_guided_automation = 0,\nwof2l_gddauto_upd_fls_del_seq = ,\nwof2l_gddauto_upd_fls_sht_seq = ,\nwof2l_gddauto_upd_fls_cntt_flg =,\nwof2l_gddauto_upd_fls_hdr_seq = ,\nwof2l_gddauto_upd_fls_tgt_seq =\n);\n \n \n \n \n%local\nwo2c_full_file_name\nwo2c_file_extension\nwof2l_filename\nwof2l_table_name\nwof2l_excel_table_seq\nwof2l_xlsx_table_count\nwof2l_full_table_name\nwof2l_first_char\nwof2l_full_fname_path_2_load_seq\nwof2l_extension_2_load_seq\nwof2l_target_table_name_seq\nwof2l_sheet_name_seq\nwof2l_table_to_process_check\nwof2l_xlsx_varname_seq\nwof2l_file_delimiter\nwof2l_has_header\nwof2l_delimiter_seq\nwof2l_has_header_seq\nwof2l_lrec_length\nvariable_count\nvariable_counter\nwof2l_special_file_type\nfwf_directory_seq\nfwf_filename_seq\nfwf_incl_fn_in_table_out_seq\nfwf_file_type_seq\nfwf_variable_name_seq\nfwf_variable_label_seq\nfwf_variable_type_seq\nfwf_variable_length_seq\nfwf_variable_format_seq\nfwf_variable_informat_seq\nfwf_variable_start_position_seq\nfwf_variable_end_position_seq\nwof2l_skip_mssng_vrnm_in_xls\nwof2l_ds_2_profile_seq\nwof2l_caslib_temp\nwof2l_castable_temp\nwof2l_final_ds_name\nwof2l_chk_strng_in_var_4_missing\nwof2l_output_dataset_name\nwof2l_string_seq_cut_count\nwof2l_string_seq_cut_counter\nwof2l_path_for_sas_content_seq\nwof2l_file_header_flag_seq\nwof2l_header_flag_guided\nwof2l_filepath_for_sas_content\nwof2l_file_delimiter_guided\nwof2l_file_delimiter_seq\n;\n/*********\nFirst determining if the libname points to a Viya or 94 environment.\nthis determines how the tables are uploaded in detail.\n*********/\n \n%let wof2l_string_seq_cut_count = 0;\n%let wof2l_string_seq_cut_count = %wordcnt(&wof2l_stringseq_2_cutout_from_vn,\n\"#\");\n \n%let wof2l_lrec_length = 32760;\n%let wof2l_max_var_name_length_target = 28;\n%if %upcase(&wof2l_target_environment) = AUTO %then\n%do;\nproc sql noprint;\nselect distinct(engine)\ninto :wof2l_target_environment\nfrom dictionary.libnames\nwhere kupcase(libname) = \"%upcase(&wof2l_cas_target_libname)\"\n;\nquit;\n%end;\n \n/*****\nCheck here if only profiling is desired withouth any upload activity,\nif so we jump to the end.\n******/\n \n%let wof2l_ds_2_profile_seq = ;\n%let wof2l_chk_strng_in_var_4_missing = ZZ_MISSING_VARNAME_;\n%if \"%upcase(&wof2l_do_profiling)\" = \"PROFILE_ONLY_NO_UPLOAD\" or\n&wof2l_drop_missing_vars gt 2 %then\n%do;\nproc sql;\nselect\ncat(trim(left(library)),\".\",trim(left(adjusted_table_name)))\ninto\n:wof2l_ds_2_profile_seq    separated by \" #\"\nfrom\n&wof2l_upload_log_ds\nwhere\nkupcase(library) =  \"%upcase(&wof2l_cas_target_libname)\" and\nnot missing(load_date);\nquit;\n%let wof2l_table_count_4_profiling = %wordcnt(&wof2l_ds_2_profile_seq, '#');\n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: There are &wof2l_table_count_4_profiling tables that will be profiled only:.;\n%put INFORMATION: &=wof2l_ds_2_profile_seq ;\n%end;\n%if \"%upcase(&wof2l_do_profiling)\" = \"PROFILE_ONLY_NO_UPLOAD\" %then\n%let wof2l_do_profiling = PROFILE;\n \n%if &wof2l_drop_missing_vars gt 2 %then\n%do;\n%if &wof2l_drop_missing_vars eq 3 %then\n%let wof2l_drop_missing_vars = 1; %else\n%if &wof2l_drop_missing_vars eq 4 %then\n%let wof2l_drop_missing_vars = 2;\n%end;\n \n%if &wof2l_drop_missing_vars ne 0 %then\n%do;\n%let wof2l_ds2_prfl_seq_count = %wordcnt(&wof2l_ds_2_profile_seq, '#');\n%do wof2l_ds2_prfl_seq_counter = 1 %to &wof2l_ds2_prfl_seq_count;\n%let wof2l_ds_to_process = %scan(&wof2l_ds_2_profile_seq,\n&wof2l_ds2_prfl_seq_counter,\n'#'\n);\n%let wof2l_final_table_name = %scan(&wof2l_ds_to_process,\n2,\n'.'\n);\n%let wof2l_cas_target_libname = %scan(&wof2l_ds_to_process,\n1,\n'.'\n);\ndata work.&wof2l_final_table_name;\nset &wof2l_ds_to_process;\nrun;\n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\"\nincaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\"\nincaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\n%end;\n%DIAP_handling_missings_vars(\ndhm_missing_handling_option = &wof2l_drop_missing_vars,\ndhm_dataset_2_check = work.&wof2l_final_table_name,\ndhm_dataset_2_check_output = &wof2l_ds_to_process,\ndhm_dataset_2_write_out_results =\n_DIAP_only_missing_analysis_&wof2l_ds2_prfl_seq_counter,\ndhm_stg_2_chk_var_b4_drop = &wof2l_chk_strng_in_var_4_missing\n);\n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\"\nincaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\"\ncasout=\"&wof2l_final_table_name\";\n%if &wof2l_make_imported_data_prsstnt = 1 %then\n%do;\nsave casdata=\"&wof2l_final_table_name\"\nincaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\"\ncasout=\"&wof2l_final_table_name\" replace;\n%end;\nquit;\n%end;\n%end;\n%end;\n \n \n \n%if \"%upcase(&wof2l_do_profiling)\" ne \"NO\" %then\n%do;\n%automated_profiling_4_DIAP(\nap4d_table_2_prep_4_prof_seq = &wof2l_ds_2_profile_seq,\nap4d_dict_source_file_path = &wof2l_profile_dict_location,\nap4d_prof_execution_option = &wof2l_do_profiling,\nap4d_libname_4_dictionaries = %scan(&wof2l_upload_log_ds, 1, '.'),\nap4d_viyaversion = &wof2l_viyaversion\n);\n%end;\n%end; %else\n%do;\n \n%if &wof2l_shp_enrich_with_zip = 1 %then\n%do;\nlibname _meta_94 \"&wof2l_path_2_gis2zip_dataset4shp\";\n%end;\n/*********\nNow go through all the files that need to be read in.\none by one going through the list...\n*********/\n \n%let wof2l_variable_length_max = 256;\n/***\nwof2l_skip_mssng_vrnm_in_xls\nif set to 1, columns with missing varnames\nin EXCEL files will be dropped in the target table\n***/\n%let wof2l_skip_mssng_vrnm_in_xls = 1;\n%let wp2c_file_count = %wordcnt(&wof2l_full_filename_path_seq, '#');\n%put INFORMATION: There are &wp2c_file_count files to be examined to be read in!;\n/*********************************************\n**********************************************\n \nNow at first prepare the upload log dataset and determine\nwhich files need to be uploaded.\n \n**********************************************\n*********************************************/\n \n%let wof2l_full_fname_path_2_load_seq = ;\n%let wof2l_extension_2_load_seq = ;\n%let wof2l_target_table_name_seq = ;\n%let wof2l_sheet_name_seq = ;\n%let wof2l_original_filename_seq = ;\n \n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Just before log_dataset_4_upload_maintenance() macro with following inflow:;\n%put INFORMATION: &=wof2l_upload_log_ds;\n%put INFORMATION: &=wof2l_full_filename_path_seq;\n%put INFORMATION: &=wof2l_directory_path_seq;\n%put INFORMATION: &=wof2l_fnl_ds_name_4_all_extfiles;\n%put INFORMATION: &=wof2l_diap_guided_automation;\n%put INFORMATION: &=wof2l_gddauto_upd_fls_del_seq;\n%put INFORMATION: &=wof2l_gddauto_upd_fls_sht_seq;\n%put INFORMATION: &=wof2l_gddauto_upd_fls_cntt_flg;\n%put INFORMATION: &=wof2l_gddauto_upd_fls_tgt_seq;\n%put INFORMATION: &=wof2l_gddauto_upd_fls_hdr_seq;\n%end;\n \n \n \n%log_dataset_4_upload_maintenance(\n&wof2l_upload_log_ds,\n&wof2l_full_filename_path_seq,\nld4um_directory_path_seq = &wof2l_directory_path_seq,\nld4um_debug_mode = &wof2l_debug_mode,\nld4um_fn_in_fxd_wdth_def_fl_seq = &wof2l_fn_as_in_fxd_wdth_def_seq,\nld4um_substitute_string_seq = &wof2l_substitute_string_seq,\nld4um_max_name_length = &wof2l_max_name_length,\nld4um_stringseq_2_cutout_from_fn = &wof2l_stringseq_2_cutout_from_fn,\nld4um_force_upload_of_all_files = &wof2l_force_upload_of_all_files,\nld4um_fnl_tblname_from_sheetonly = &wof2l_fnl_tblname_from_sheetonly,\nld4um_create_unique_target_tblnm = &wof2l_create_unique_target_tblnm,\nld4um_delimiter = &wof2l_delimiter,\nld4um_fnl_ds_name_4_all_extfiles = &wof2l_fnl_ds_name_4_all_extfiles,\nld4um_diap_guided_automation = &wof2l_diap_guided_automation,\nld4um_gddauto_upd_fls_del_seq = &wof2l_gddauto_upd_fls_del_seq,\nld4um_gddauto_upd_fls_sht_seq = &wof2l_gddauto_upd_fls_sht_seq,\nld4um_gddauto_upd_fls_cntt_flg = &wof2l_gddauto_upd_fls_cntt_flg,\nld4um_gddauto_upd_fls_hdr_seq = &wof2l_gddauto_upd_fls_hdr_seq,\nld4um_gddauto_upd_fls_tgt_seq = &wof2l_gddauto_upd_fls_tgt_seq\n);\n \n/*****************\nsort descending by sheetname to have them loaded first\nand to prevent to have missing sheentname in the sequence first\n*****************/\ndata work._DIAP_working_upload_log_ds;\nset &wof2l_upload_log_ds.;\nrun;\n \n%if \"&wof2l_skip_files_start_with_seq\" ne \"\" or\n\"&wof2l_skip_files_end_with_seq\" ne \"\" %then\n%do;\n%let wof2l_skip_files_start_count =\n%wordcnt(&wof2l_skip_files_start_with_seq, \"#\");\n%let wof2l_skip_files_end_count =\n%wordcnt(&wof2l_skip_files_end_with_seq, \"#\");\n \ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nlength_name = klength(original_sheetname);\ndrop length_name;\n%do wof2l_skip_counter = 1 %to &wof2l_skip_files_start_count;\n%let wof2l_skip_files_start_with = %scan(&wof2l_skip_files_start_with_seq,\n&wof2l_skip_counter,\n\"#\"\n);\n%let wof2l_skip_files_start_length =\n%length(&wof2l_skip_files_start_with);\nif length_name >= &wof2l_skip_files_start_length then\ndo;\nif kupcase(ksubstr(original_sheetname,\n1,\n&wof2l_skip_files_start_length)) =\n%upcase(\"&wof2l_skip_files_start_with\") then delete;\nend;\n%end;\n%do wof2l_skip_counter = 1 %to &wof2l_skip_files_end_count;\n%let wof2l_skip_files_end_with = %scan(&wof2l_skip_files_end_with_seq,\n&wof2l_skip_counter,\n\"#\"\n);\n%let wof2l_skip_files_end_length =\n%length(&wof2l_skip_files_end_with);\nif length_name >= &wof2l_skip_files_end_length then\ndo;\nif kupcase(ksubstr(original_sheetname,\nlength_name - &wof2l_skip_files_end_length + 1,\n&wof2l_skip_files_end_length)) =\n%upcase(\"&wof2l_skip_files_end_with\") then delete;\nend;\n%end;\nrun;\n%end;\nproc sort\ndata=work._DIAP_working_upload_log_ds;\nby load_date descending original_sheetname;\nquit;\n \n/*********************************************\nAll the files where the load date is missing\nneed to be read in.\n*********************************************/\n \n \nproc sql noprint;\nselect\nfile_path_full_name,\nadjusted_table_name,\ndirectory_path,\n%if \"&wof2l_fixed_file_definition_ds\" ne \"\" %then\n%do;\nfilename_asin_fxd_wdth_def_fl,\noriginal_filename,\n%end;\noriginal_sheetname,\nfile_delimiter,\nfilepath_is_for_sas_content,\nvariable_name_is_in_header,\nextension\ninto\n:wof2l_full_fname_path_2_load_seq separated by \" #\",\n:wof2l_target_table_name_seq separated by \" #\",\n:wof2l_directory_path_seq separated by \" #\",\n%if \"&wof2l_fixed_file_definition_ds\" ne \"\" %then\n%do;\n:wof2l_fn_as_in_fxd_wdth_def_seq separated by \" #\",\n:wof2l_original_filename_seq separated by \" #\",\n%end;\n:wof2l_sheet_name_seq separated by \" #\",\n:wof2l_file_delimiter_seq separated by \" #\",\n:wof2l_path_for_sas_content_seq separated by \" #\",\n:wof2l_file_header_flag_seq separated by \" #\",\n:wof2l_extension_2_load_seq separated by \" #\"\nfrom\nwork._DIAP_working_upload_log_ds\nwhere\nmissing(load_date);\nquit;\n \n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: This is the original files to be uploaded:;\n%put &=wof2l_full_fname_path_2_load_seq;\n%put INFORMATION: This is the corresponding target table sequence to be uploaded: ;\n%put &=wof2l_target_table_name_seq;\n%put INFORMATION: This is the corresponding sheet name sequence to be uploaded:;\n%put &=wof2l_sheet_name_seq;\n%put INFORMATION: This is the corresponding extension sequence to be uploaded:;\n%put &=wof2l_extension_2_load_seq;\n%put INFORMATION: This is the special file definition sequence if existent to be uploaded:;\n%put &=wof2l_fn_as_in_fxd_wdth_def_seq;\n%put INFORMATION: This is the directory path sequence belonging to special defined files sequence if existent to be uploaded:;\n%put &=wof2l_directory_path_seq;\n%put INFORMATION: This is the provided delimiter sequence showing the suggested delimiter for file to be uploaded:;\n%put &=wof2l_file_delimiter_seq;\n%put INFORMATION: This is the sas content flag indicator sequence showing if file to be uploaded is located in SAS Content area:;\n%put &=wof2l_path_for_sas_content_seq;\n%put INFORMATION: This is the original filename sequence sequence if existent to be uploaded:;\n%put &=wof2l_original_filename_seq;\n%put INFORMATION: This is the flag sequence to indicate if variable name is in header if existent to be uploaded:;\n%put &=wof2l_file_header_flag_seq;\n%end;\n \n%let wp2c_file_count = %wordcnt(&wof2l_full_fname_path_2_load_seq, '#');\n%put INFORMATION: There are &wp2c_file_count files to be examined to be read in!;\n%if &wp2c_file_count = 0 %then\n%do;\n%put INFORMATION GENERAL: No data uploaded since either no updates to the existing uploaded data;\n%put INFORMATION GENERAL: or no files in directory structure;\n%put INFORMATION GENERAL: Check Load Dates in Upload log and compare with modified date of files to be uploaded;\n%end; %else\n%do;\n%do wo2c_file_counter = 1 %to &wp2c_file_count;\n \n/*********\nFirst check the length of the filename and such,\nsince that will become the table name.\nExcel will be treated separately, since one XLS file\ncan contain multiple sheets.\n*********/\n \n%let wof2l_directory_path = %scan(&wof2l_directory_path_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wo2c_full_file_name = %scan(&wof2l_full_fname_path_2_load_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wo2c_file_extension = %scan(&wof2l_extension_2_load_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_sheet_name = %scan(&wof2l_sheet_name_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_final_table_name = %scan(&wof2l_target_table_name_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_filepath_for_sas_content = %scan(&wof2l_path_for_sas_content_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_file_delimiter_guided = %scan(&wof2l_file_delimiter_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_header_flag_guided = %scan(&wof2l_file_header_flag_seq,\n&wo2c_file_counter,\n'#'\n);\n \n%if &wof2l_filepath_for_sas_content = 0 %then\n%do;\nfilename inf&wo2c_file_counter \"&wo2c_full_file_name\";\n%end; %else\n%do;\n%let wof2l_temp_filename_only = %scan(&wo2c_full_file_name,\n-1,\n\"&wof2l_delimiter\"\n);\nfilename inf&wo2c_file_counter\nfilesrvc\nfolderpath     = \"&wof2l_directory_path\"\nfilename    = \"&wof2l_temp_filename_only\";\n%end;\n \n%local wof2l_check_source_fl_flag_&wo2c_file_counter;\n%let wof2l_check_source_fl_flag_&wo2c_file_counter = 0;\n \n/*********************************************\nwe are double checking the load time which is needed\nin case we have special definitions that are processed first.\nafter they are processed, they don't need to be processed again\nwhen reading in the \"normal\" files.\n*********************************************/\n \n \n%let wof2l_table_to_process_check = .;\n \nproc sql;\nselect load_date\ninto :wof2l_table_to_process_check\nfrom work._DIAP_working_upload_log_ds\nwhere\nkupcase(file_path_full_name)=\"%upcase(&wo2c_full_file_name)\" and\nkupcase(adjusted_table_name)=\"%upcase(&wof2l_final_table_name)\"\n;\nquit;\n \n \n \n%if &wof2l_table_to_process_check = . %then\n%do;\n/*            filename REFFILE DISK \"&wo2c_full_file_name.\";*/\n \n/******\n*******\nIn the following section the variable names\nare checked and made SAS compliant.\n*******\n*******/\n \n%let wof2l_max_varnumber_&wo2c_file_counter = ;\n%if &wof2l_debug_mode %then\n%put INFORMATION: Using &wof2l_guessing_row rows to guess column details.;\n \n/*********************************************\nFirst check if this is the run to read in the files\nthat are defined via the special definition file.\n*********************************************/\n \n \n%if \"&wof2l_fixed_file_definition_ds\" ne \"\" %then\n%do;\n%let wof2l_fm_from_def_ds = %scan(&wof2l_fn_as_in_fxd_wdth_def_seq,\n&wo2c_file_counter,\n'#'\n);\n%let wof2l_orig_fn = %scan(&wof2l_original_filename_seq,\n&wo2c_file_counter,\n'#'\n);\n%let fwf_directory_seq = ;\n%let fwf_filename_seq = ;\n%let fwf_incl_fn_in_table_out_seq = ;\n%let fwf_file_type_seq = ;\n%let fwf_variable_name_seq = ;\n%let fwf_variable_label_seq = ;\n%let fwf_variable_type_seq = ;\n%let fwf_variable_length_seq = ;\n%let fwf_variable_format_seq = ;\n%let fwf_variable_informat_seq = ;\n%let fwf_variable_start_position_seq = ;\n%let fwf_variable_end_position_seq = ;\n%let wof2l_max_start_pos_value = ;\n/*********************************************\nreading in the definition from the special definition file\n \n*********************************************/\n \nproc sql;\nselect\ndirectory,\nfilename,\ninclude_fn_in_table_output,\nfile_type,\nvariable_name,\nvariable_label,\nvariable_type,\nvariable_length,\nvariable_format,\nvariable_informat,\nvariable_start_position,\nvariable_end_position,\nmax(variable_start_position)\ninto\n:fwf_directory_seq separated by ' #',\n:fwf_filename_seq separated by ' #',\n:fwf_incl_fn_in_table_out_seq separated by ' #',\n:fwf_file_type_seq separated by ' #',\n:fwf_variable_name_seq separated by ' #',\n:fwf_variable_label_seq separated by ' #',\n:fwf_variable_type_seq separated by ' #',\n:fwf_variable_length_seq separated by ' #',\n:fwf_variable_format_seq separated by ' #',\n:fwf_variable_informat_seq separated by ' #',\n:fwf_variable_start_position_seq separated by ' #',\n:fwf_variable_end_position_seq separated by ' #',\n:wof2l_max_start_pos_value\nfrom\n&wof2l_fixed_file_definition_ds\nwhere\nfilename = \"&wof2l_fm_from_def_ds\" and\ndirectory = \"&wof2l_directory_path\"\n;\nquit;\n \n%put &=fwf_directory_seq;\n%put &=fwf_filename_seq;\n%put &=fwf_incl_fn_in_table_out_seq;\n%put &=fwf_file_type_seq;\n%put &=fwf_variable_name_seq;\n%put &=fwf_variable_label_seq;\n%put &=fwf_variable_type_seq;\n%put &=fwf_variable_length_seq;\n%put &=fwf_variable_format_seq;\n%put &=fwf_variable_informat_seq;\n%put &=fwf_variable_start_position_seq;\n%put &=fwf_variable_end_position_seq;\n%put &=wof2l_max_start_pos_value;\n \n/*********************************************\ndepending on the type the information is read in.\nSee the different cases, e.g. FIX or XML...\nhere the variable names are provided via the definition file.\n*********************************************/\n \n%let wof2l_input_file_&wo2c_file_counter=inf&wo2c_file_counter;\n%if &wof2l_chck_txt_fl_4_spcl_chrct = 1 %then\n%do;\nfilename cf&wo2c_file_counter temp;\n%let wof2l_count_of_chrct_2_chk =\n%wordcnt(&wof2l_spcl_chrctr_sq2chck_in_hex, '#');\n%let wof2l_hex_chrct_2_chck =\n%trim(%left(%scan(&wof2l_spcl_chrctr_sq2chck_in_hex,\n1,\n'#'\n)));\n/* MAGIC preprocessing step */\ndata _null_;\ninfile &&wof2l_input_file_&wo2c_file_counter recfm=n;\nfile cf&wo2c_file_counter recfm=n;\ninput a $char1.;\nretain open 0;\nif a='\"' then\nopen = not open;\nif (\na=\"&wof2l_hex_chrct_2_chck\"x\n%do wof2l_counter_of_chrct_2_chk =\n2 %to &wof2l_count_of_chrct_2_chk;\n%let wof2l_hex_chrct_2_chck =\n%trim(%left(\n%scan(&wof2l_spcl_chrctr_sq2chck_in_hex,\n&wof2l_counter_of_chrct_2_chk,\n'#'\n)));\nor a=\"&wof2l_hex_chrct_2_chck\"x\n%end;\n)\nand open then\nput \"%trim(%left(&wof2l_spcl_chrct_chck_rplcmnt_hx))\"x @;\nelse\nput a $char1. @;\nrun;\n%let wof2l_input_file_&wo2c_file_counter =\ncf&wo2c_file_counter;\n%end;\n%let variable_count =\n%wordcnt(&fwf_variable_name_seq, '#');\n%let wof2l_special_file_type =\n%scan(&fwf_file_type_seq, 1, '#');\n/***\nfile_type variable is also used to determine from which row the data\ninformation starts (e.g. if first row is variable name, then data\nwould start with row 2.\nso in this case, file_type would contain fix-2 as a value.\nDefault is starting from row 1. (e.g. if this information is missing.)\n****/\n%let wof2l_special_file_data_strt =\n%scan(&wof2l_special_file_type, 2, '-');\n%let wof2l_special_file_type =\n%scan(&wof2l_special_file_type, 1, '-');\n \n%if %upcase(%trim(%left(&wof2l_special_file_type))) = FIX %then\n%do;\ndata get_table_info_&wo2c_file_counter;\ninfile &&wof2l_input_file_&wo2c_file_counter\ntruncover\nDSD\nlrecl=&wof2l_lrec_length;\ninput @1\n%let fwf_fn_include_indicator = 0;\n%do variable_counter = 1 %to &variable_count;\n%let variable_name =\n%scan(&fwf_variable_name_seq,\n&variable_counter,\n'#'\n);\n%let fwf_include_fn_in_output =\n%scan(&fwf_incl_fn_in_table_out_seq,\n&variable_counter,\n'#'\n);\n%let variable_type =\n%scan(&fwf_variable_type_seq,\n&variable_counter,\n'#');\n%if \"&fwf_include_fn_in_output\" = \"1\" %then\n%let fwf_fn_include_indicator =  1;\n%put &=variable_type;\n%let variable_start_pos =\n%scan(&fwf_variable_start_position_seq,\n&variable_counter,\n'#'\n);\n%let variable_end_pos =\n%scan(&fwf_variable_end_position_seq,\n&variable_counter,\n'#'\n);\nvar_&wo2c_file_counter._&variable_counter\n%if \"%upcase(&variable_type)\" = \"CHAR\" %then\n%do;\n$\n%end;\n&variable_start_pos. - &variable_end_pos.\n%end;\n;\n%if &fwf_fn_include_indicator = 1 %then\n%do;\n%let variable_counter = %eval(&variable_count + 1);\nlength var_&wo2c_file_counter._&variable_counter\n$100.;\nvar_&wo2c_file_counter._&variable_counter =\n\"&wof2l_orig_fn\";\n%end;\n%if \"&wof2l_special_file_data_strt\" ne \"\" %then\n%do;\nif _n_ >= &wof2l_special_file_data_strt;\n%end;\nrun;\n%end;\n%if %upcase(%trim(%left(&wof2l_special_file_type))) = XML %then\n%do;\ndata get_table_info_&wo2c_file_counter;\nretain\n%do variable_counter = 1 %to &variable_count;\nvar_&wo2c_file_counter._&variable_counter\n%end;\n;\nlength\nwhole_line $ 32000\n%do variable_counter = 1 %to &variable_count;\n%let variable_length =\n%scan(&fwf_variable_length_seq,\n&variable_counter,\n'#'\n);\n%let fwf_include_fn_in_output =\n%scan(&fwf_incl_fn_in_table_out_seq,\n&variable_counter,\n'#'\n);\n%let variable_type =\n%scan(&fwf_variable_type_seq,\n&variable_counter,\n'#'\n);\n%if \"&fwf_include_fn_in_output\" = \"1\" %then\n%let fwf_fn_include_indicator =  1;\n%let variable_start_pos =\n%scan(&fwf_variable_start_position_seq,\n&variable_counter,\n'#'\n);\n%let variable_end_pos =\n%scan(&fwf_variable_end_position_seq,\n&variable_counter,\n'#'\n);\nvar_&wo2c_file_counter._&variable_counter\n%if \"%upcase(&variable_type)\" = \"CHAR\" %then\n%do;\n$\n%end;\n&variable_length\n%end;\n;\ninfile &&wof2l_input_file_&wo2c_file_counter\ntruncover\nDSD\nlrecl=&wof2l_lrec_length;\ninput @1 whole_line;\noutput_ok = 0;\ndrop\nwhole_line\nexist\nposition_start\nposition_end\ndifference\noutput_ok\n;\n%let fwf_fn_include_indicator = 0;\n%do variable_counter = 1 %to &variable_count;\n%let variable_name =\n%scan(&fwf_variable_name_seq,\n&variable_counter,\n'#'\n);\n%let fwf_include_fn_in_output =\n%scan(&fwf_incl_fn_in_table_out_seq,\n&variable_counter,\n'#'\n);\n%let variable_type =\n%scan(&fwf_variable_type_seq,\n&variable_counter,\n'#'\n);\n%if \"&fwf_include_fn_in_output\" = \"1\" %then\n%let fwf_fn_include_indicator =  1;\n%put &=variable_type;\n%let variable_start_pos =\n%scan(&fwf_variable_start_position_seq,\n&variable_counter,\n'#'\n);\n%let variable_end_pos =\n%scan(&fwf_variable_end_position_seq,\n&variable_counter,\n'#'\n);\nexist = kindex(kupcase(whole_line),\n\"%upcase(&variable_name)\");\nif exist then\ndo;\nposition_start = kindex(whole_line, \">\");\nposition_end = kindex(whole_line, \"</\");\ndifference = position_end - position_start - 1;\nvar_&wo2c_file_counter._&variable_counter =\nksubstr(whole_line,\nposition_start+1,\ndifference\n);\n%if &variable_start_pos =\n&wof2l_max_start_pos_value %then\n%do;\noutput_ok = 1;\n%end;\nend;\n%end;\n%if &fwf_fn_include_indicator = 1 %then\n%do;\n%let variable_counter = %eval(&variable_count + 1);\nlength var_&wo2c_file_counter._&variable_counter\n$100.;\nvar_&wo2c_file_counter._&variable_counter =\n\"&wof2l_orig_fn\";\n%end;\nif output_ok then\noutput;\nrun;\n%end;\n \n%if &wof2l_debug_mode %then\n%do;\ndata get_table_info_fwf_&wo2c_file_counter;\nset get_table_info_&wo2c_file_counter;\nrun;\n%end;\n \n%end;\n%else\n%do;\n/*********************************************\notherwise read in the \"normal\" cases..\n*********************************************/\n \n%if &wo2c_file_extension eq CSV or\n&wo2c_file_extension eq TXT or\n((\"&wof2l_file_delimiter_guided\" ne \"\" and\n%upcase(\"&wof2l_file_delimiter_guided\") ne \"_DIAP_NA_\") and\n&wof2l_diap_guided_automation = 1) %then\n%do;\noptions obs = &wof2l_guessing_row;\n%let wof2l_file_delimiter = ;\n%let wof2l_has_header = 1;\n/*********************************************\nbased on the first row, the delimiter is determined.\nMaximum occurence wins.\n \nFor the blank separator there is a separate rule applied:\nif there is any other separator present than blank, then that\nseparator \"wins\", otherwise blank becomes the separator.\n \nAnother test is performed for the header row.\nif the very first character is a number, then it is assumed\nthat there is no header row.\n*********************************************/\n%let wof2l_input_file_&wo2c_file_counter =\ninf&wo2c_file_counter;\n%if &wof2l_chck_txt_fl_4_spcl_chrct = 1 %then\n%do;\nfilename cf&wo2c_file_counter temp;\n%let wof2l_count_of_chrct_2_chk =\n%wordcnt(&wof2l_spcl_chrctr_sq2chck_in_hex,\n'#'\n);\n%let wof2l_hex_chrct_2_chck =\n%trim(%left(\n%scan(&wof2l_spcl_chrctr_sq2chck_in_hex,\n1,\n'#'\n)));\n/* MAGIC preprocessing step */\ndata _null_;\ninfile &&wof2l_input_file_&wo2c_file_counter\nrecfm=n;\nfile cf&wo2c_file_counter recfm=n;\ninput a $char1.;\nretain open 0;\nif a='\"' then\nopen = not open;\nif (\na=\"&wof2l_hex_chrct_2_chck\"x\n%do wof2l_counter_of_chrct_2_chk =\n2 %to &wof2l_count_of_chrct_2_chk;\n%let wof2l_hex_chrct_2_chck =\n%trim(%left(\n%scan(&wof2l_spcl_chrctr_sq2chck_in_hex,\n&wof2l_counter_of_chrct_2_chk,\n'#'\n)));\nor a=\"&wof2l_hex_chrct_2_chck\"x\n%end;\n)\nand open then\nput \"%trim(%left(&wof2l_spcl_chrct_chck_rplcmnt_hx))\"x @;\nelse\nput a $char1. @;\nrun;\n%let wof2l_input_file_&wo2c_file_counter =\ncf&wo2c_file_counter;\n%end;\n \ndata _null_;\ninfile &&wof2l_input_file_&wo2c_file_counter\ndsd\ntruncover\nLRECL=&wof2l_lrec_length\nobs = 1;\ninput line $&wof2l_lrec_length..;\nif _n_ = 1;\ncount_comma = kcountc(line,',');\ncount_exclamation = kcountc(line,'!');\ncount_hash = kcountc(line,'#');\ncount_semikolon = kcountc(line, ';');\ncount_blank = kcountc(strip(line),' ');\ncount_tab = kcountc(line, '09'X);\ncount_pipe = kcountc(line, '|');\nhas_no_headerrow = anydigit(ksubstr(line, 1,1));\nif has_no_headerrow then\ncall symput('wof2l_has_header', 0);\nmax_count = max(count_comma,\ncount_semikolon,\ncount_tab,\ncount_hash,\ncount_exclamation,\ncount_pipe,\ncount_blank\n);\nmax_count_wo_blank = max(count_comma,\ncount_semikolon,\ncount_tab,\ncount_hash,\ncount_exclamation,\ncount_pipe\n);\nif max_count = count_comma then\ncall symput('wof2l_file_delimiter', ','); else\nif max_count = count_semikolon then\ncall symput('wof2l_file_delimiter', ';'); else\nif max_count = count_tab then\ncall symput('wof2l_file_delimiter', \"TAB\"); else\nif max_count = count_pipe then\ncall symput('wof2l_file_delimiter', '|');  else\nif max_count = count_hash then\ncall symput('wof2l_file_delimiter', '#'); else\nif max_count = count_exclamation then\ncall symput('wof2l_file_delimiter', '!'); else\nif max_count = count_blank and\nmax_count_wo_blank > 0 then\ndo;\nif max_count_wo_blank = count_comma then\ncall symput('wof2l_file_delimiter', ','); else\nif max_count_wo_blank = count_hash then\ncall symput('wof2l_file_delimiter', '#'); else\nif max_count_wo_blank = count_exclamation then\ncall symput('wof2l_file_delimiter', '!'); else\nif max_count_wo_blank = count_semikolon then\ncall symput('wof2l_file_delimiter', ';'); else\nif max_count_wo_blank = count_tab then\ncall symput('wof2l_file_delimiter', \"TAB\"); else\nif max_count_wo_blank = count_pipe then\ncall symput('wof2l_file_delimiter', '|');\nend; else\nif max_count = count_blank then\ncall symput('wof2l_file_delimiter', 'BLANK');\nrun;\n%let wof2l_source_fl_nmbr_rows_&wo2c_file_counter = 0;\ndata _null_;\ninfile &&wof2l_input_file_&wo2c_file_counter end=eof;\ninput;\nif eof then\ncall symput(\n\"wof2l_source_fl_nmbr_rows_&wo2c_file_counter\",\n_n_\n);\nrun;\n \n%let wof2l_source_fl_nmbr_rows_&wo2c_file_counter =\n%trim(\n%left(\n&&wof2l_source_fl_nmbr_rows_&wo2c_file_counter\n)\n);\n \n%local\nwof2l_delimiter_file_no_&wo2c_file_counter\nwof2l_has_header_file_no_&wo2c_file_counter\n;\n%if \"&wof2l_file_delimiter_guided\" ne \"\" and\n\"&wof2l_file_delimiter_guided\" ne \"_DIAP_NA_\" %then\n%do;\n%let wof2l_file_delimiter =\n&wof2l_file_delimiter_guided;\n%end;\n%let wof2l_delimiter_file_no_&wo2c_file_counter =\n&wof2l_file_delimiter;\n%if \"&wof2l_header_flag_guided\" ne \"\" %then\n%do;\n%let wof2l_has_header = &wof2l_header_flag_guided;\n%end;\n%let wof2l_has_header_file_no_&wo2c_file_counter =\n&wof2l_has_header;\n%put INFORMATION GENERAL: For file &wo2c_full_file_name the delimiter is: \"&wof2l_file_delimiter\";\n%put INFORMATION GENERAL: There are &&wof2l_source_fl_nmbr_rows_&wo2c_file_counter rows to read in.;\n \n%if &wof2l_csv_big_data_mode = 0 %then\n%do;\nproc import\ndatafile=&&wof2l_input_file_&wo2c_file_counter\nout=get_table_info_&wo2c_file_counter\ndbms=dlm replace;\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' ' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ',' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|' ;\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\" ;\n%end;\n%if &&wof2l_has_header_file_no_&wo2c_file_counter\nand\n&&wof2l_source_fl_nmbr_rows_&wo2c_file_counter gt 1 %then\n%do;\ndatarow = 2;\n%end;\n%else\n%do;\ndatarow = 1;\n%end;\nguessingrows = &wof2l_guessing_row;\ngetnames=no;\nrun;\n \n \n%let wof2l_char_seq = ;\n%let wof2l_char_seq_total = ;\n%if &wof2l_check_csv_4_num = 1 %then\n%do;\nproc sql;\nselect\nname\ninto\n:wof2l_char_seq separated by \" \"\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) = \"%upcase(get_table_info_&wo2c_file_counter)\" and\nkupcase(type) contains \"CHAR\"\n;\nselect\nname\ninto\n:wof2l_char_seq_total separated by \" \"\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) = \"%upcase(get_table_info_&wo2c_file_counter)\"\n;\nquit;\n \n%let wof2l_var_count_temp = %wordcnt(&wof2l_char_seq, ' ');\n%let wof2l_var_count_total_temp = %wordcnt(&wof2l_char_seq_total, ' ');\n%do wof2l_var_counter_temp = 1 %to &wof2l_var_count_temp;\n%let wof2l_num_flag_varnumber_&wof2l_var_counter_temp = 1;\n%end;\ndata get_table_info_&wo2c_file_counter ;\nset get_table_info_&wo2c_file_counter ;\ndrop\nDIAP_temp_val\nDIAP_temp_dotcount\nDIAP_temp_dashcount\nDIAP_temp_dash_position\n;\n%do wof2l_var_counter_temp = 1 %to &wof2l_var_count_temp;\n%let varname = %scan(&wof2l_char_seq, &wof2l_var_counter_temp, ' ');\nDIAP_temp_val = kcompress(&varname, \".-\", 'd');\nDIAP_temp_dotcount = kcountc(&varname, \".\");\nDIAP_temp_dashcount = kcountc(&varname, \"-\");\nDIAP_temp_dash_position = kindex(&varname, \"-\");\nif lengthn(DIAP_temp_val) ne 0 or\nDIAP_temp_dotcount > 1 or\nDIAP_temp_dashcount > 1 or\nDIAP_temp_dash_position > 1 then\ndo;\ncall symput(\"wof2l_num_flag_varnumber_&wof2l_var_counter_temp\",  0);\nend;\n%end;\nrun;\n \n%let wof2l_temp_varnum_counter = 0;\ndata get_table_info_&wo2c_file_counter ;\nset get_table_info_&wo2c_file_counter;\n%do wof2l_var_counter_temp = 1 %to &wof2l_var_count_temp;\n%let varname = %scan(&wof2l_char_seq, &wof2l_var_counter_temp, ' ');\n%if &&wof2l_num_flag_varnumber_&wof2l_var_counter_temp = 1 %then\n%do;\n_&varname = &varname * 1;\ndrop &varname;\n%let wof2l_temp_varnum_counter = 1;\n%end;\n%end;\nrun;\n%if &wof2l_temp_varnum_counter = 1 %then\n%do;\nproc datasets library=work nolist;\nmodify get_table_info_&wo2c_file_counter;\nrename\n%do wof2l_var_counter_temp = 1 %to &wof2l_var_count_temp;\n%let varname = %scan(&wof2l_char_seq, &wof2l_var_counter_temp, ' ');\n%if &&wof2l_num_flag_varnumber_&wof2l_var_counter_temp = 1 %then\n%do;\n_&varname = &varname\n%end;\n%end;\n;\nquit;\n \ndata get_table_info_&wo2c_file_counter;\nretain\n%do wof2l_var_counter_temp = 1 %to &wof2l_var_count_total_temp;\n%let varname = %scan(&wof2l_char_seq_total, &wof2l_var_counter_temp, ' ');\n&varname\n%end;\n;\nset get_table_info_&wo2c_file_counter;\nrun;\n%end;\n%end;\n%end;\n \noptions obs = max;\n%if &wof2l_csv_big_data_mode = 1 %then\n%do;\n \n \ndata _DIAP_csv_big_data_names_&wo2c_file_counter ;\ninfile  &&wof2l_input_file_&wo2c_file_counter lrecl=5000000  dsd\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' '\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ','\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';'\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|'\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\"\n%end;\n \nobs=1 ;\ndrop varnum;\ndo varnum=1 by 1 ;\nlength name $32 ;\ninput name @;\noutput;\nend;\nrun;\n%let wof2l_max_varnumber_&wo2c_file_counter = ;\nproc sql noprint;\nselect\nnobs into :wof2l_max_varnumber_&wo2c_file_counter\nfrom dictionary.tables\nwhere\nkupcase(libname) = 'WORK' and\nkupcase(memname) = \"%upcase(_DIAP_csv_big_data_names_&wo2c_file_counter)\";\nquit;\n%let wof2l_max_varnumber_&wo2c_file_counter = %trim(%left(&&wof2l_max_varnumber_&wo2c_file_counter));\n \n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%let wof2l_num_flag_varnumber_&wof2l_var_counter = 1;\n%local wof2l_num_flag_varnumber_&wof2l_var_counter ;\n%end;\n \ndata get_table_info_&wo2c_file_counter ;\ninfile  &&wof2l_input_file_&wo2c_file_counter lrecl=5000000  dsd\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' '\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ','\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';'\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|'\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\"\n%end;\n \n%if &&wof2l_has_header_file_no_&wo2c_file_counter and\n&&wof2l_source_fl_nmbr_rows_&wo2c_file_counter gt 1 %then\n%do;\nfirstobs = 2;\n%end;\n%else\n%do;\nfirstobs = 1;\n%end;\n \nformat\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&wof2l_var_counter $64.\n%end;\n;\ninformat\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&wof2l_var_counter $64.\n%end;\n;\narray varplaceholder{&&wof2l_max_varnumber_&wo2c_file_counter} $ &wof2l_variable_length_max var1-var&&wof2l_max_varnumber_&wo2c_file_counter;\nlength name  $ &wof2l_variable_length_max ;\ndrop\nname\nrow_counter\nvarnum\ntemp_val\ntemp_dotcount\n;\ndo varnum=1 by 1 ;\ninput name @;\nrow_counter = mod(varnum, &&wof2l_max_varnumber_&wo2c_file_counter);\nif row_counter = 0 then\ndo;\nrow_counter = &&wof2l_max_varnumber_&wo2c_file_counter;\nend;\nvarplaceholder{row_counter}= name;\ntemp_val = kcompress(name, \"-.\", 'd');\ntemp_dotcount = kcountc(name, \".\");\nif lengthn(temp_val) ne 0 or\ntemp_dotcount > 1 then\ndo;\ncall symput(cats(\"wof2l_num_flag_varnumber_\", row_counter), 0);\nend;\nif row_counter = &&wof2l_max_varnumber_&wo2c_file_counter then\ndo;\noutput;\nend;\nend;\nrun;\n%let wof2l_temp_varnum_counter = 0;\ndata get_table_info_&wo2c_file_counter ;\nset get_table_info_&wo2c_file_counter;\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if &&wof2l_num_flag_varnumber_&wof2l_var_counter = 1 %then\n%do;\n_var&wof2l_var_counter = var&wof2l_var_counter * 1;\ndrop var&wof2l_var_counter;\n%let wof2l_temp_varnum_counter = 1;\n%end;\n%end;\nrun;\n%if &wof2l_temp_varnum_counter = 1 %then\n%do;\nproc datasets library=work nolist;\nmodify get_table_info_&wo2c_file_counter;\nrename\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if &&wof2l_num_flag_varnumber_&wof2l_var_counter = 1 %then\n%do;\n_var&wof2l_var_counter = var&wof2l_var_counter\n%end;\n%end;\n;\nquit;\n%end;\n%end;\n%if &&wof2l_source_fl_nmbr_rows_&wo2c_file_counter = 1 and\n&&wof2l_has_header_file_no_&wo2c_file_counter %then\n%do;\ndata get_table_info_&wo2c_file_counter;\nset get_table_info_&wo2c_file_counter;\nif 0;\nrun;\n%end;\n%end; %else\n%if &wo2c_file_extension eq XLSX or\n(&wo2c_file_extension eq XLS and &wof2l_diap_guided_automation = 1) %then\n%do;\nproc import\ndatafile=inf&wo2c_file_counter\nout=get_table_info_&wo2c_file_counter\ndbms=&wo2c_file_extension replace;\ndatarow = 2;\nsheet = \"&wof2l_sheet_name\";\ngetnames=no;\nrun;\n%end;%else\n%if &wo2c_file_extension eq XML %then\n%do;\nfilename  tpxmllib \"&wo2c_full_file_name.\";\nfilename  tpxmlmap \"%substr(&wo2c_full_file_name, 1, %eval(%length(&wo2c_full_file_name) - 3))map\";\nlibname tpxmllib xmlv2 xmlmap=tpxmlmap access=READONLY;\n%let wo2c_temp_filename_only = %scan(%scan(&wo2c_full_file_name, -1, \"&wof2l_delimiter\"), 1, '.');\ndata get_table_info_&wo2c_file_counter;\nset tpxmllib.&wof2l_sheet_name;\nlength _diap_generated_filename_id $64.;\n_diap_generated_filename_id = \"&wo2c_temp_filename_only\";\nrun;\n \n%end;%else\n%if &wo2c_file_extension eq JMP %then\n%do;\nproc import\ndatafile=inf&wo2c_file_counter\nout= get_table_info_&wo2c_file_counter\ndbms=JMP replace;\nrun;\n%end;%else\n%if &wo2c_file_extension eq JSON %then\n%do;\nlibname _json json \"&wo2c_full_file_name\";\ndata get_table_info_&wo2c_file_counter;\nset _json.&wof2l_sheet_name;\nrun;\n%end; %else\n%if &wo2c_file_extension eq SHP %then\n%do;\n%if &wof2l_viyaversion = 41 %then\n%do;\n \n%end; %else\n%if \"&wof2l_path_2_python_shape_script\" ne \"\" %then\n%do;\n%let wof2l_length_dir = %length(&wof2l_directory_path);\n%let wof2l_adjusted_dir_name = %substr(&wof2l_directory_path, 1, %eval(&wof2l_length_dir - 1));\n%put INFORMATION GENERAL: Processing Shape file # &wo2c_file_counter &wo2c_full_file_name with Python script;\nx %unquote(%bquote(')&wof2l_path_2_python_shape_script -g\n-i \"&wo2c_full_file_name\"\n-C \"&wof2l_adjusted_dir_name\"\n-l \"&wof2l_directory_path._wof2l_temp_shapeshift.log\"%bquote('));\n%let wof2l_temp_log_filename = ;\n \ndata work.wof2l_temp_storage_logname;\nlength\nfilename_target $512\nfilename_source $512;\ninfile \"&wof2l_directory_path._wof2l_temp_shapeshift.log\"\ndelimiter = \",\" MISSOVER firstobs=1 dsd lrecl=32000;\ninput\nfilename_source $\nfilename_target $;\ncall symput(\"wof2l_temp_log_filename\", filename_target);\nrun;\n%let wof2l_temp_log_filename = %trim(%left(&wof2l_temp_log_filename));\nproc import\ndatafile=\"&wof2l_temp_log_filename\"\nout=get_table_info_&wo2c_file_counter\ndbms=dlm replace;\ndelimiter = \",\" ;\ndatarow = 2;\nguessingrows = &wof2l_guessing_row;\ngetnames=yes;\nrun;\n \nx %unquote(%bquote(')rm \"&wof2l_directory_path._wof2l_temp_shapeshift.log\"%bquote('));\nx %unquote(%bquote(')rm \"&wof2l_temp_log_filename\"%bquote('));\n%end; %else\n%do;\n%put INFORMATION GENERAL: Processing Shape file # &wo2c_file_counter &wo2c_full_file_name with SAS procedure script;\nproc mapimport\ndatafile=inf&wo2c_file_counter\nout=get_table_info_&wo2c_file_counter;\nrun;\nproc datasets lib=work nolist;\nmodify get_table_info_&wo2c_file_counter;\nrename segment = segment_org;\nquit;\n%end;\n%if &wof2l_shp_enrich_with_zip = 1 %then\n%do;\nproc ginside\ndata = get_table_info_&wo2c_file_counter\nmap=_meta_94.gis_2_zcta out = get_table_info_&wo2c_file_counter;\nid zip_zcta;\nquit;\n%end;\n%end;\n%end;\n/**********\nwriting that meta information out into macro variables for processing down the road.\nhere the variable names are captured\n**********/\n%let wof2l_max_varnumber_&wo2c_file_counter = 0;\n%if %sysfunc(exist(get_table_info_&wo2c_file_counter)) %then\n%do;\nproc sql noprint;\ncreate table columns_&wo2c_file_counter as\nselect\nlibname,\nmemname,\nname,\nlength,\ntype,\nvarnum,\nformat,\ninformat\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) = \"GET_TABLE_INFO_&wo2c_file_counter\"\n;\nquit;\n \ndata columns_&wo2c_file_counter;\nset columns_&wo2c_file_counter;\nif missing(format) and\nmissing(informat) then\ndo;\nif trim(left(kupcase(type))) = \"NUM\" then\ndo;\ninformat = \"best12.\";\nformat = \"best12.\";\nend; else\ndo;\ninformat = \"$32.\";\nformat = \"$32.\";\nend;\nend; else\ndo;\nif missing(format) then format = informat;\nif missing(informat) then informat = format;\nend;\nrun;\n \n%let wof2l_max_varnumber_&wo2c_file_counter = ;\nproc sql noprint;\nselect\nnobs into :wof2l_max_varnumber_&wo2c_file_counter\nfrom dictionary.tables\nwhere\nlibname = 'WORK' and\nmemname = \"COLUMNS_&wo2c_file_counter\";\nquit;\n%let wof2l_max_varnumber_&wo2c_file_counter = %trim(%left(&&wof2l_max_varnumber_&wo2c_file_counter));\n \n/*****\nDoing the next step to align the manual chosen variable names by DIAP\nwith the automatic provided ones.\n*****/\n%if &wo2c_file_extension eq CSV or\n&wo2c_file_extension eq TXT or\n((\"&wof2l_file_delimiter_guided\" ne \"\" and %upcase(\"&wof2l_file_delimiter_guided\") ne \"_DIAP_NA_\") and\n&wof2l_diap_guided_automation = 1) %then\n%do;\n \nproc datasets library=work nolist;\nmodify get_table_info_&wo2c_file_counter;\nrename\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&wof2c_variable_counter = var_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\nquit;\nproc sql noprint;\ncreate table columns_&wo2c_file_counter as\nselect\nlibname,\nmemname,\nname,\nlength,\ntype,\nvarnum,\nformat,\ninformat\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) = \"GET_TABLE_INFO_&wo2c_file_counter\"\n;\nquit;\ndata columns_&wo2c_file_counter;\nset columns_&wo2c_file_counter;\nif missing(format) and\nmissing(informat) then\ndo;\nif trim(left(kupcase(type))) = \"NUM\" then\ndo;\ninformat = \"best12.\";\nformat = \"best12.\";\nend; else\ndo;\ninformat = \"$32.\";\nformat = \"$32.\";\nend;\nend; else\ndo;\nif missing(format) then format = informat;\nif missing(informat) then informat = format;\nend;\nrun;\n \n%end;\n \n%if &wof2l_debug_mode %then\n%put INFORMATION: The number of columns of table # &wo2c_file_counter to read in is: &&wof2l_max_varnumber_&wo2c_file_counter;\n \n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%local\nwof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter\nwof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter\nwof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter\nwof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter\nwof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter\nwof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter\n;\n%let wof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let wof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let wof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let wof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let wof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let wof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%end;\ndata _null_;\nset columns_&wo2c_file_counter;\nsuffix = put(_n_, 6.);\ncall symput(cats(\"wof2l_varname_seq_&wo2c_file_counter._\", suffix), name);\ncall symput(cats(\"wof2l_varnum_seq_&wo2c_file_counter._\", suffix), varnum);\ncall symput(cats(\"wof2l_format_seq_&wo2c_file_counter._\", suffix), format);\ncall symput(cats(\"wof2l_informat_seq_&wo2c_file_counter._\", suffix), informat);\ncall symput(cats(\"wof2l_length_seq_&wo2c_file_counter._\", suffix), length);\ncall symput(cats(\"wof2l_type_seq_&wo2c_file_counter._\", suffix), type);\nrun;\n \n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%let wof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let wof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let wof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let wof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let wof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let wof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&wof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter));\n%end;\n \n \n%let wof2l_varname_seq_count = &&wof2l_max_varnumber_&wo2c_file_counter;\n%if &wof2l_debug_mode %then\n%do;\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%put INFORMATION: wof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_varname_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: wof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_varnum_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: wof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_format_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: wof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_informat_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: wof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_length_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: wof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter = &&wof2l_type_seq_&wo2c_file_counter._&wof2l_var_counter;\n%end;\n%end;\n%end;\n \n/*********************************************\nprocess special definition cases...\n*********************************************/\n \n%if \"&wof2l_fixed_file_definition_ds\" ne \"\" %then\n%do;\n%if %upcase(%trim(%left(&wof2l_special_file_type))) = FIX or\n%upcase(%trim(%left(&wof2l_special_file_type))) = XML %then\n%do;\n \ndata work.varnames_&wo2c_file_counter._2  ;\nlength\n%do wof2c_variable_counter = 1 %to &variable_count;\nvar_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n%if &fwf_fn_include_indicator = 1 %then\n%do;\n%let wof2c_variable_counter = %eval(&variable_count + 1);\nvar_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n;\n%do wof2c_variable_counter = 1 %to &variable_count;\n%let original_varname_fwf = %trim(%left(%scan(&fwf_variable_name_seq, &wof2c_variable_counter, '#')));\n \nvar_&wo2c_file_counter._&wof2c_variable_counter = \"&original_varname_fwf\";\n%end;\n%if &fwf_fn_include_indicator = 1 %then\n%do;\n%let wof2c_variable_counter = %eval(&variable_count + 1);\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"_diap_gen_source_file_name\";\n%end;\n \nrun;\n%end;\ndata work.varnames_&wo2c_file_counter._2 ;\n \nset work.varnames_&wo2c_file_counter._2 ;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nif missing(var_&wo2c_file_counter._&wof2c_variable_counter) or\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"_\" then\ndo;\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"ZZ_MISSING_VARNAME_&wof2c_variable_counter._FILE_&&wo2c_file_counter.\";\ncall symput(\"wof2l_check_source_fl_flag_&wo2c_file_counter\", 1);\nend;\n%end;\nrun;\n%if &wof2l_debug_mode %then\n%do;\ndata work.varnames_fwf_&wo2c_file_counter._2 ;\nset work.varnames_&wo2c_file_counter._2 ;\nrun;\n%end;\n \n%end;\n%else\n%do;\n \n/*********************************************\nnow process the variable names for all the other cases...\n*********************************************/\n \n%if &wo2c_file_extension eq CSV or\n&wo2c_file_extension eq TXT or\n((\"&wof2l_file_delimiter_guided\" ne \"\" and %upcase(\"&wof2l_file_delimiter_guided\") ne \"_DIAP_NA_\") and\n&wof2l_diap_guided_automation = 1) %then\n%do;\n%if &&wof2l_has_header_file_no_&wo2c_file_counter %then\n%do;\n%if &wof2l_csv_big_data_mode = 0 %then\n%do;\ndata work.varnames_&wo2c_file_counter._2  ;\n%let _EFIERR_ = 0;\ninfile &&wof2l_input_file_&wo2c_file_counter\n \n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' '\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ','\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';'\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|'\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\"\n%end;\n \nMISSOVER DSD lrecl=&wof2l_lrec_length obs = 1;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n;\ninput\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar_&wo2c_file_counter._&wof2c_variable_counter $\n%end;\n;\nrun;\n%end;\n%if &wof2l_csv_big_data_mode = 1 %then\n%do;\ndata work.varnames_&wo2c_file_counter._2 ;\ninfile  &&wof2l_input_file_&wo2c_file_counter lrecl=5000000  dsd\n \n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' '\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ','\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';'\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|'\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\"\n%end;\nobs = 1;\narray varplaceholder{&&wof2l_max_varnumber_&wo2c_file_counter} $ &wof2l_variable_length_max var_&wo2c_file_counter._1-var_&wo2c_file_counter._&&wof2l_max_varnumber_&wo2c_file_counter;\nlength name  $ &wof2l_variable_length_max ;\ndrop name row_counter varnum;\ndo varnum=1 by 1 ;\ninput name @;\nrow_counter = mod(varnum, &&wof2l_max_varnumber_&wo2c_file_counter);\nif row_counter = 0 then\ndo;\nrow_counter = &&wof2l_max_varnumber_&wo2c_file_counter;\nend;\nvarplaceholder{row_counter}= name;\nif row_counter = &&wof2l_max_varnumber_&wo2c_file_counter then\ndo;\noutput;\nend;\nend;\nrun;\n%end;\n%end; %else\n%do;\ndata work.varnames_&wo2c_file_counter._2  ;\n%let _EFIERR_ = 0;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"DIAP_varname_gnrtd_&wof2c_variable_counter._FILE_&&wo2c_file_counter.\";\n%end;\nrun;\n%let wof2l_check_source_fl_flag_&wo2c_file_counter = 2;\n%end;\ndata work.varnames_&wo2c_file_counter._2 ;\n \nset work.varnames_&wo2c_file_counter._2 ;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nif missing(var_&wo2c_file_counter._&wof2c_variable_counter) or\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"_\" then\ndo;\nvar_&wo2c_file_counter._&wof2c_variable_counter = \"ZZ_MISSING_VARNAME_&wof2c_variable_counter._FILE_&&wo2c_file_counter.\";\ncall symput(\"wof2l_check_source_fl_flag_&wo2c_file_counter\", 1);\nend;\n \n%end;\nrun;\n%end; %else\n%if &wo2c_file_extension eq XLSX  or\n(&wo2c_file_extension eq XLS and &wof2l_diap_guided_automation = 1) %then\n%do;\n%let wof2l_final_column_name = ;\n%let wof2l_xlsx_varname_seq = ;\nproc sql noprint;\nselect\nname\ninto\n:wof2l_final_column_name\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) = \"%upcase(get_table_info_&wo2c_file_counter)\" and\nvarnum = &&wof2l_max_varnumber_&wo2c_file_counter;\nquit;\nproc import\ndatafile=inf&wo2c_file_counter\nout=work.varnames_&wo2c_file_counter._2\ndbms=&wo2c_file_extension replace;\ndatarow = 1;\nrange=\"&wof2l_sheet_name$A1:%trim(%left(&wof2l_final_column_name.))1\";\ngetnames=no;\nrun;\n \ndata work.varnames_&wo2c_file_counter._2 ;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n_&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n;\nset work.varnames_&wo2c_file_counter._2 ;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\ndrop &&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\n_&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter = &&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\nif missing(_&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter) or\n_&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter = \"_\" then\ndo;\n_&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter = \"ZZ_MISSING_VARNAME_&wof2c_variable_counter._FILE_&&wo2c_file_counter.\";\ncall symput(\"wof2l_check_source_fl_flag_&wo2c_file_counter\", 1);\nend;\n%end;\nrun;\ndata work.varnames_&wo2c_file_counter._2 ;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter $ &wof2l_variable_length_max\n%end;\n;\nset work.varnames_&wo2c_file_counter._2 ;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\ndrop _&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter = _&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nrun;\n%end; %else\n%if &wo2c_file_extension eq JMP or\n&wo2c_file_extension eq SHP or\n&wo2c_file_extension eq JSON or\n&wo2c_file_extension eq XML %then\n%do;\ndata work.varnames_&wo2c_file_counter._2;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter $256.\n%end;\n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\";\nif missing(var&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter) or\nvar&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter = \"_\" then\ndo;\nvar&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter = \"ZZ_MISSING_VARNAME_&wof2c_variable_counter._FILE_&&wo2c_file_counter.\";\ncall symput(\"wof2l_check_source_fl_flag_&wo2c_file_counter\", 1);\nend;\n%end;\nrun;\n/****\nthe next step is just there to align the jump case with the other cases.\nAnd also, just in case if the variable name needs to get changed, this would take care of it.\n****/\ndata get_table_info_&wo2c_file_counter;\nset get_table_info_&wo2c_file_counter;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar&&wof2l_varnum_seq_&wo2c_file_counter._&wof2c_variable_counter = &&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nrun;\n%let wof2l_max_var_name_length_target = 29;\n%end;\n%end;\n \n%if &wof2l_debug_mode %then\n%put INFORMATION: File &wo2c_full_file_name contains &&wof2l_max_varnumber_&wo2c_file_counter variables;\n/**********\ntransposing to get all the variable names into one column\n**********/\n%if %sysfunc(exist(work.varnames_&wo2c_file_counter._2)) %then\n%do;\nproc transpose\ndata = work.varnames_&wo2c_file_counter._2\nout = varnames_transposed_&wo2c_file_counter;\nvar _all_;\nrun;\n/**********\nadjusting the variable name and in one first step replacing the \"&\" to reduce headaches\ndownstream\n**********/\n \ndata work.varnames_transposed_&wo2c_file_counter._exp;\nlength\nvarname_first_29char $32.\nnew_varname $32.\ncurrent_varname $32.\noriginal_varname $256.\nfilename_1st_occurence $256.\nformat_value $32.\ninformat_value $32.\n;\ndrop\n_name_\n%if &wof2l_string_seq_cut_count eq 0 %then\n%do;\ncol1\n%end;\n;\nset varnames_transposed_&wo2c_file_counter;\noriginal_order = _n_;\noriginal_varname = kupcase(col1);\nnew_varname = \"\";\ncurrent_varname = _name_;\n%if &wof2l_string_seq_cut_count eq 0 %then\n%do;\nif notalpha(ksubstr(col1, 1, 1)) then col1 = \"V\"||col1;\n%end;\nvarname_first_29char = ksubstr(kupcase(col1), 1, &wof2l_max_var_name_length_target);\nfilename_1st_occurence = \"&wo2c_full_file_name\";\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nif kupcase(trim(left(current_varname))) = \"%trim(%left(%upcase(&&wof2l_varname_seq_&wo2c_file_counter._&wof2c_variable_counter)))\" then\ndo;\nformat_value = \"%trim(%left(&&wof2l_format_seq_&wo2c_file_counter._&wof2c_variable_counter))\";\ninformat_value = \"%trim(%left(&&wof2l_informat_seq_&wo2c_file_counter._&wof2c_variable_counter))\";\nend;\n%end;\nrun;\n \n/******\nthe next segment cuts out unwanted characters strings from the variable names\n*******/\n \n%if &wof2l_string_seq_cut_count ne 0 %then\n%do;\n%do wof2l_string_seq_cut_counter = 1 %to &wof2l_string_seq_cut_count;\n%let wof2l_string_2_cut = %scan(&wof2l_stringseq_2_cutout_from_vn, &wof2l_string_seq_cut_counter, \"#\");\n \ndata work.varnames_transposed_&wo2c_file_counter._exp;\nset work.varnames_transposed_&wo2c_file_counter._exp;\ndrop\nwof2l_string_2_cut\nposition\nlength_chk\nlength_org\n;\nwof2l_string_2_cut = \"&wof2l_string_2_cut\";\nlength_chk = klength(wof2l_string_2_cut);\nlength_org = klength(col1);\nposition = 0;\nposition = kindex(kupcase(col1), kupcase(wof2l_string_2_cut));\nif position ne 0 then\ndo;\nif position = 1 and length_chk ne length_org then\ncol1 = trim(left(ksubstr(col1, position + length_chk)));\nelse if position = 1 and length_chk eq length_org then\ncol1 = \"\";\nelse\ncol1 = trim(left(trim(left(ksubstr(col1, 1, position - 1)))||trim(left(ksubstr(col1, position + length_chk)))));\nend;\nif notalpha(ksubstr(col1, 1, 1)) then col1 = \"V\"||trim(left(col1));\nif missing(col1) then col1 = \"ZZ_Check_cutout_strng_4_VN_&wo2c_file_counter\";\nvarname_first_29char = ksubstr(kupcase(col1), 1, &wof2l_max_var_name_length_target);\nrun;\n%end;\ndata work.varnames_transposed_&wo2c_file_counter._exp;\nset work.varnames_transposed_&wo2c_file_counter._exp;\ndrop\ncol1\n;\nrun;\n%end;\n \n \nproc sort\ndata = work.varnames_transposed_&wo2c_file_counter._exp;\nby    original_varname;\nquit;\n%end; /* end if exist */ %else\n%do;\ndata work.varnames_transposed_&wo2c_file_counter._exp;\nlength\nvarname_first_29char $32.\nnew_varname $32.\ncurrent_varname $32.\noriginal_varname $256.\nfilename_1st_occurence $256.\nformat_value $32.\ninformat_value $32.\noriginal_order 8\n;\nif 0;\nrun;\n%end;\n%end; %else\n%do;\n/*******\ncreate empty dataset so the whole process can run through smoothly.\n*******/\ndata work.varnames_transposed_&wo2c_file_counter._exp;\nlength\nvarname_first_29char $32.\nnew_varname $32.\ncurrent_varname $32.\noriginal_varname $256.\nfilename_1st_occurence $256.\nformat_value $32.\ninformat_value $32.\noriginal_order 8\n;\nif 0;\nrun;\n \n%end;\n%end;\n \n/**********\nnow, processing the metadata, we are bringing all the files together from the previous loop into one file\n**********/\n \ndata work.varnames_all_in_one;\nset\n%do wo2c_file_counter = 1 %to &wp2c_file_count;\nwork.varnames_transposed_&wo2c_file_counter._exp\n%end;\n;\nrun;\n/**********\ndeduping the variable names by the ORIGINAL variable name to prepare for the variable name creation\nthat adheres to the SAS variable names rules.\n**********/\n \nproc sort\ndata = work.varnames_all_in_one\nout = varnames_all_in_one_deduped ;\nby original_varname format_value;\nquit;\n \ndata varnames_all_in_one_deduped;\nset varnames_all_in_one_deduped;\nby original_varname ;\nif first.original_varname;\nrun;\n \n/*************************\ncheck if table exists in CAS , but it not loaded yet\n**************************/\n%let wof2l_log_target_environment = ;\n%let wof2l_caslib_temp = %trim(%left(%scan(&wof2l_variable_dict_dataset, 1, '.')));\nproc sql noprint;\nselect distinct(engine)\ninto :wof2l_log_target_environment\nfrom dictionary.libnames\nwhere kupcase(libname) = \"%upcase(&wof2l_caslib_temp)\"\n;\nquit;\n \n \n%if %sysfunc(exist(&wof2l_variable_dict_dataset)) = 0 and\n&wof2l_log_target_environment eq CAS %then\n%do;\n%let wof2l_castable_temp = %trim(%left(%scan(&wof2l_variable_dict_dataset, 2, '.')));\nproc cas;\ntable.caslibinfo\nresult=sss/caslib=\"&wof2l_caslib_temp\"  ;\ndescribe sss;\nprint sss;\nsaveresult sss\ndataout=work._temp_path_data;\nrun;\n%let wof2l_temp_lib_path = ;\nproc sql;\nselect path\ninto:wof2l_temp_lib_path\nfrom work._temp_path_data;\nquit;\n \n%if %sysfunc(fileexist(%trim(%left(&wof2l_temp_lib_path))&wof2l_castable_temp..sashdat)) %then\n%do;\nproc casutil\nincaslib=\"&wof2l_caslib_temp\" outcaslib = \"&wof2l_caslib_temp\";\nload casdata=\"&wof2l_castable_temp..sashdat\" casout=\"&wof2l_castable_temp\" promote;\nquit;\n%end;\n%end;\n \n \n%if %sysfunc(exist(&wof2l_variable_dict_dataset)) %then\n%do;\ndata work.original_var_overview_ds;\nset &wof2l_variable_dict_dataset;\nrun;\nproc sort\ndata = work.original_var_overview_ds;\nby original_varname;\nquit;\ndata work.overview_new_var_upload_list;\nmerge\nwork.varnames_all_in_one_deduped (in = update)\nwork.original_var_overview_ds (in = original)\n;\nby     original_varname;\nrun;\ndata work.varnames_all_in_one_deduped;\nset overview_new_var_upload_list;\nrun;\n%end;\n \n/**********\nnow preparing the sort order so we can find out if we have duplicates when we\nshorten the variable name to 29 characters\n**********/\n \nproc sort\ndata = work.varnames_all_in_one_deduped;\nby     varname_first_29char\ndescending new_varname;\nquit;\n \n/**********\nthis datastep deals with duplicates and if there are, we are appending a counter to\nthe newly created variable name to make them unique.\nwe also replace characters in the newly variable name that we don't like for SAS variable names.\nThen we are writing out the dataset so it is available for reference later on.\n**********/\n \ndata &wof2l_variable_dict_dataset;\nretain\noriginal_varname\nnew_varname\nfilename_1st_occurence\nvarname_first_29char\nformat_value\ninformat_value\n;\nlength new_varname $32.;\nset work.varnames_all_in_one_deduped;\nby varname_first_29char;\nkeep new_varname\noriginal_varname\nvarname_first_29char\nfilename_1st_occurence\nformat_value\ninformat_value\n;\nretain counter 0;\nif first.varname_first_29char then\ncounter = 0;\ncounter = counter + 1;\nif (first.varname_first_29char ne last.varname_first_29char) or\n(not first.varname_first_29char and not last.varname_first_29char) then\ndo;\nif missing(new_varname) then\ndo;\nnew_varname = trim(left(varname_first_29char)) || \"_\" || strip(put(counter, z2.));\n%if &wof2l_chck_4_spcl_char_in_vars = 1 %then\n%do;\nnew_varname = tranwrd(strip(new_varname), ' ', \"_\");\nnew_varname = tranwrd(new_varname, '@', \"_\");\nnew_varname = tranwrd(new_varname, ':', \"_\");\nnew_varname = tranwrd(new_varname, '/', \"_\");\nnew_varname = tranwrd(new_varname, '\\', \"_\");\nnew_varname = tranwrd(new_varname, '|', \"_\");\nnew_varname = tranwrd(new_varname, ';', \"_\");\nnew_varname = tranwrd(new_varname, '$', \"_\");\nnew_varname = tranwrd(new_varname, '>', \"_\");\nnew_varname = tranwrd(new_varname, '<', \"_\");\nnew_varname = tranwrd(new_varname, '^', \"_\");\nnew_varname = tranwrd(new_varname, '~', \"_\");\nnew_varname = tranwrd(new_varname, '*', \"_\");\nnew_varname = tranwrd(new_varname, '(', \"_\");\nnew_varname = tranwrd(new_varname, '[', \"_\");\nnew_varname = tranwrd(new_varname, ']', \"_\");\nnew_varname = tranwrd(new_varname, '{', \"_\");\nnew_varname = tranwrd(new_varname, '}', \"_\");\nnew_varname = tranwrd(new_varname, ')', \"_\");\nnew_varname = tranwrd(new_varname, '!', \"_\");\nnew_varname = tranwrd(new_varname, '+', \"_\");\nnew_varname = tranwrd(new_varname, '=', \"_\");\nnew_varname = tranwrd(new_varname, '?', \"_\");\nnew_varname = tranwrd(new_varname, '.', \"_\");\nnew_varname = tranwrd(new_varname, '-', \"_\");\nnew_varname = tranwrd(trim(left(new_varname)), ' ', \"_\");\n%end;\nend;\nend; else\nif missing(new_varname) then\ndo;\nnew_varname = varname_first_29char;\n%if &wof2l_chck_4_spcl_char_in_vars = 1 %then\n%do;\nnew_varname = tranwrd(trim(left(new_varname)), ' ', \"_\");\nnew_varname = tranwrd(new_varname, '@', \"_\");\nnew_varname = tranwrd(new_varname, ':', \"_\");\nnew_varname = tranwrd(new_varname, '/', \"_\");\nnew_varname = tranwrd(new_varname, '\\', \"_\");\nnew_varname = tranwrd(new_varname, '|', \"_\");\nnew_varname = tranwrd(new_varname, ';', \"_\");\nnew_varname = tranwrd(new_varname, '$', \"_\");\nnew_varname = tranwrd(new_varname, '>', \"_\");\nnew_varname = tranwrd(new_varname, '<', \"_\");\nnew_varname = tranwrd(new_varname, '^', \"_\");\nnew_varname = tranwrd(new_varname, '~', \"_\");\nnew_varname = tranwrd(new_varname, '*', \"_\");\nnew_varname = tranwrd(new_varname, '(', \"_\");\nnew_varname = tranwrd(new_varname, '[', \"_\");\nnew_varname = tranwrd(new_varname, ']', \"_\");\nnew_varname = tranwrd(new_varname, '{', \"_\");\nnew_varname = tranwrd(new_varname, '}', \"_\");\nnew_varname = tranwrd(new_varname, ')', \"_\");\nnew_varname = tranwrd(new_varname, '!', \"_\");\nnew_varname = tranwrd(new_varname, '+', \"_\");\nnew_varname = tranwrd(new_varname, '=', \"_\");\nnew_varname = tranwrd(new_varname, '?', \"_\");\nnew_varname = tranwrd(new_varname, '.', \"_\");\nnew_varname = tranwrd(new_varname, '-', \"_\");\nnew_varname = tranwrd(trim(left(new_varname)), ' ', \"_\");\n%end;\nend;\nnew_varname = tranwrd(new_varname, '&', \"_\");\nnew_varname = tranwrd(new_varname, '#', \"_\");\nnew_varname = tranwrd(new_varname, ',', \"_\");\nnew_varname = tranwrd(new_varname, '%', \"_\");\nnew_varname = tranwrd(new_varname, '\"', \"_\");\nnew_varname = tranwrd(new_varname, \"'\", \"_\");\nrun;\n \n/***\nsort into work dataset, just incase if variable dictionary libnamae is a CAS lib.\n***/\ndata work._temp_variable_dict_ds_sorted;\nset &wof2l_variable_dict_dataset;\nrun;\nproc sort\ndata=work._temp_variable_dict_ds_sorted;\nby original_varname;\nquit;\ndata &wof2l_variable_dict_dataset;\nset work._temp_variable_dict_ds_sorted;\nrun;\n \n/**********\nafter we determined the new variable names, we now have to read in the actual files from CSV into SAS.\nWhen doing that, we are now using the new variable names, and we put the original variable names\ninto the label.\n**********/\n \n%do wo2c_file_counter = 1 %to &wp2c_file_count;\n/**********\nlooping again through all the provided files, this time to read in the actual data.\n**********/\n \n%let wo2c_full_file_name = %scan(&wof2l_full_fname_path_2_load_seq, &wo2c_file_counter, '#');\n%let wo2c_file_extension = %scan(&wof2l_extension_2_load_seq, &wo2c_file_counter, '#');\n%let wof2l_sheet_name = %scan(&wof2l_sheet_name_seq, &wo2c_file_counter, '#');\n%let wof2l_final_table_name = %scan(&wof2l_target_table_name_seq, &wo2c_file_counter, '#');\n%let wof2l_filepath_for_sas_content = %scan(&wof2l_path_for_sas_content_seq, &wo2c_file_counter, '#');\n%let wof2l_file_delimiter_guided = %scan(&wof2l_file_delimiter_seq, &wo2c_file_counter, '#');\n%let wof2l_header_flag_guided = %scan(&wof2l_file_header_flag_seq, &wo2c_file_counter, '#');\n \n%let wof2l_table_to_process_check = .;\n \nproc sql;\nselect load_date\ninto :wof2l_table_to_process_check\nfrom work._DIAP_working_upload_log_ds\nwhere\nkupcase(file_path_full_name) = \"%upcase(&wo2c_full_file_name)\" and\nkupcase(adjusted_table_name) = \"%upcase(&wof2l_final_table_name)\"\n;\nquit;\n \n%put GENERAL INFORMATION: File # &wo2c_file_counter &wo2c_full_file_name with sheet &wof2l_sheet_name ;\n%put GENERAL INFORMATION: wof2l_table_to_process_check &wof2l_table_to_process_check for final tablename &wof2l_final_table_name ;\n \n%if &wof2l_table_to_process_check = . %then\n%do;\n \n \ndata work.varnames_transposed_&wo2c_file_counter._exp;\nmerge     work.varnames_transposed_&wo2c_file_counter._exp (in = infile)\nwork._temp_variable_dict_ds_sorted (drop = format_value informat_value);\nby    original_varname;\nif infile;\noriginal_varname = tranwrd(original_varname, '&', \"_\");\noriginal_varname = tranwrd(original_varname, '#', \"_\");\noriginal_varname = tranwrd(original_varname, ',', \"_\");\noriginal_varname = tranwrd(original_varname, '%', \"_\");\noriginal_varname = tranwrd(original_varname, '\"', \"_\");\noriginal_varname = tranwrd(original_varname, \"'\", \"_\");\nrun;\ndata work.varnames_transposed_&wo2c_file_counter._exp;\nset work.varnames_transposed_&wo2c_file_counter._exp;\nif missing(new_varname) then\ndo;\nnew_varname = kcompress(\"CHECK_SOURCEFILE_4_DUP_VARNAME\"||_n_);\ncall symput(\"wof2l_check_source_fl_flag_&wo2c_file_counter\", 1);\nend;\nrun;\n%let new_variable_name_seq = ;\n%let original_varname_seq = ;\n%let current_variable_name_seq = ;\n%let format_value_seq = ;\n%let informat_value_seq = ;\n \n%local\nnew_variable_name_seq\noriginal_varname_seq\ncurrent_variable_name_seq\nformat_value_seq\ninformat_value_seq\n;\n/**********\nso above we are merging back in the newly created variable name for the current file\nand writing those out into macro variables below for easier processing later and looping...\n**********/\n \n/***\nsort it first so that missing informat values come last.\n**/\nproc sort\ndata = varnames_transposed_&wo2c_file_counter._exp;\nby original_order;\nquit;\n \n \n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%let new_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let curr_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let orig_varname_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let format_value_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%let informat_value_seq_&wo2c_file_counter._&wof2l_var_counter = ;\n%end;\ndata _null_;\nset varnames_transposed_&wo2c_file_counter._exp;\nsuffix = put(_n_, 6.);\ncall symput(cats(\"new_var_name_seq_&wo2c_file_counter._\", suffix), new_varname);\ncall symput(cats(\"curr_var_name_seq_&wo2c_file_counter._\", suffix), current_varname);\ncall symput(cats(\"orig_varname_seq_&wo2c_file_counter._\", suffix), original_varname);\ncall symput(cats(\"format_value_seq_&wo2c_file_counter._\", suffix), format_value);\ncall symput(cats(\"informat_value_seq_&wo2c_file_counter._\", suffix), informat_value);\nrun;\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%let new_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = \"%trim(%left(&&new_var_name_seq_&wo2c_file_counter._&wof2l_var_counter))\"n;\n%let curr_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&curr_var_name_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let orig_varname_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&orig_varname_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let format_value_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&format_value_seq_&wo2c_file_counter._&wof2l_var_counter));\n%let informat_value_seq_&wo2c_file_counter._&wof2l_var_counter = %trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2l_var_counter));\n%end;\n \n \n \n%if &wof2l_debug_mode %then\n%do;\n%do wof2l_var_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%put INFORMATION: new_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = &&new_var_name_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: curr_var_name_seq_&wo2c_file_counter._&wof2l_var_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: orig_varname_seq_&wo2c_file_counter._&wof2l_var_counter = &&orig_varname_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: format_value_seq_&wo2c_file_counter._&wof2l_var_counter = &&format_value_seq_&wo2c_file_counter._&wof2l_var_counter;\n%put INFORMATION: informat_value_seq_&wo2c_file_counter._&wof2l_var_counter = &&informat_value_seq_&wo2c_file_counter._&wof2l_var_counter;\n%end;\n%end;\n/**********\nnow reading in the complete dataset and setting all the variable characteristics as determined in above\nsteps.\n**********/\n \n \n/****\nCheck for variable counter to be different from zero ,so that a valid table is created\n*****/\n \n%if &&wof2l_max_varnumber_&wo2c_file_counter gt 0 %then\n%do;\n/****\nhave to check for fixed delimited file first, since they might have a CSV or TXT extension.\n****/\n%let wof2l_check_source_file_flag = &&wof2l_check_source_fl_flag_&wo2c_file_counter;\n \n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\n%let wof2l_length_prefix_fn_str = %length(&wof2l_prefix_4_suspicious_src_fl);\n%if &wof2l_max_lgth_of_suspicious_str < &wof2l_length_prefix_fn_str %then\n%do;\n%let &wof2l_length_prefix_fn_str = &wof2l_max_lgth_of_suspicious_str;\n%let wof2l_prefix_4_suspicious_src_fl = %substr(&wof2l_prefix_4_suspicious_src_fl, 1, &wof2l_length_prefix_fn_str);\n%end;\n%let wof2l_final_table_name = &wof2l_prefix_4_suspicious_src_fl%trim(%left(%substr(&wof2l_final_table_name, %eval(&wof2l_length_prefix_fn_str + 1))));\n%end;\n \n%if \"&wof2l_fixed_file_definition_ds\" ne \"\" %then\n%do;\n \n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Loading FIXED/Width delimited file #&wo2c_file_counter. &wo2c_full_file_name;\n%put INFORMATION: Target libname is: &wof2l_cas_target_libname;\n%put INFORMATION: Target Table name is: &wof2l_final_table_name;\n%end;\n \n%if &wof2l_upload_activation = 1 %then\n%do;\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(&wof2l_cas_target_libname..&wof2l_final_table_name)) %then\n%do;\ndata work.&wof2l_fnl_ds_name_4_all_extfiles;\nset &wof2l_cas_target_libname..&wof2l_final_table_name;\nrun;\n%end;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\n%end;\ndata &wof2l_cas_target_libname..&wof2l_final_table_name;\nset\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work.&wof2l_fnl_ds_name_4_all_extfiles)) %then\n%do;\nwork.&wof2l_fnl_ds_name_4_all_extfiles\n%end;\nwork.get_table_info_&wo2c_file_counter\n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\ninformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"%trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter))\" = \"\" %then\n%let informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter = &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\nlabel\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&orig_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\"\n%end;\n;\nrun;\ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif file_path_full_name = \"&wo2c_full_file_name\" then\ndo;\n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = \"&wof2l_final_table_name\";\n%end;\ncheck_source_file_flag = &wof2l_check_source_file_flag;\nload_date = today();\nload_time = time();\nlibrary = \"%upcase(&wof2l_cas_target_libname)\";\nend;\nrun;\n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\";\n%if &wof2l_make_imported_data_prsstnt = 1 %then\n%do;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\n%end;\nquit;\n%end;\n%let wof2l_ds_2_profile_seq = &wof2l_ds_2_profile_seq.# &wof2l_cas_target_libname..&wof2l_final_table_name;\n%end; %else %put INFORMATION ALERT: Upload is set to be NOT active!!!;\n%end;\n%else\n%do;\n%let wof2l_final_ds_name = &wof2l_cas_target_libname..&wof2l_final_table_name;\n%if &wof2l_drop_missing_vars ne 0 %then\n%do;\n%let wof2l_output_dataset_name = work.&wof2l_final_table_name;\n%end; %else\n%do;\n%let wof2l_output_dataset_name = &wof2l_final_ds_name;\n%end;\n \n \n%if &wo2c_file_extension eq CSV or\n&wo2c_file_extension eq TXT or\n((\"&wof2l_file_delimiter_guided\" ne \"\" and %upcase(\"&wof2l_file_delimiter_guided\") ne \"_DIAP_NA_\") and\n&wof2l_diap_guided_automation = 1) %then\n%do;\n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Loading file #&wo2c_file_counter. &wo2c_full_file_name;\n%put INFORMATION: Target libname is: &wof2l_cas_target_libname;\n%put INFORMATION: Target Table name is: &wof2l_final_table_name;\n%end;\n%if &wof2l_upload_activation = 1 %then\n%do;\n \n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(&wof2l_output_dataset_name)) %then\n%do;\ndata work.&wof2l_fnl_ds_name_4_all_extfiles;\nset &wof2l_output_dataset_name;\nrun;\n%end;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\n%end;\n \n%let wof2l_input_file_&wo2c_file_counter = inf&wo2c_file_counter;\n%if &wof2l_chck_txt_fl_4_spcl_chrct = 1 %then\n%do;\nfilename cf&wo2c_file_counter temp;\n%let wof2l_count_of_chrct_2_chk = %wordcnt(&wof2l_spcl_chrctr_sq2chck_in_hex, '#');\n%let wof2l_hex_chrct_2_chck = %trim(%left(%scan(&wof2l_spcl_chrctr_sq2chck_in_hex, 1, '#')));\n/* MAGIC preprocessing step */\ndata _null_;\ninfile &&wof2l_input_file_&wo2c_file_counter recfm=n;\nfile cf&wo2c_file_counter recfm=n;\ninput a $char1.;\nretain open 0;\nif a='\"' then\nopen = not open;\nif (\na=\"&wof2l_hex_chrct_2_chck\"x\n%do wof2l_counter_of_chrct_2_chk = 2 %to &wof2l_count_of_chrct_2_chk;\n%let wof2l_hex_chrct_2_chck = %trim(%left(%scan(&wof2l_spcl_chrctr_sq2chck_in_hex, &wof2l_counter_of_chrct_2_chk, '#')));\nor a=\"&wof2l_hex_chrct_2_chck\"x\n%end;\n)\nand open then\nput \"%trim(%left(&wof2l_spcl_chrct_chck_rplcmnt_hx))\"x @;\nelse\nput a $char1. @;\nrun;\n%let wof2l_input_file_&wo2c_file_counter = cf&wo2c_file_counter;\n%end;\n \n%if &wof2l_csv_big_data_mode = 0 %then\n%do;\ndata\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work.&wof2l_fnl_ds_name_4_all_extfiles)) %then\n%do;\nwork._wof2l_output_dataset_name\n%end; %else\n%do;\n&wof2l_output_dataset_name\n%end;\n;\n%let _EFIERR_ = 0;\ninfile &&wof2l_input_file_&wo2c_file_counter\n \n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"TAB\" %then\n%do;\ndelimiter = '09'x\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"HASH\" %then\n%do;\ndelimiter = '#' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"EXCLAMATION\" %then\n%do;\ndelimiter = '!' ;\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"BLANK\" %then\n%do;\ndelimiter = ' '\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"COMMA\" %then\n%do;\ndelimiter = ','\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"SEMICOLON\" %then\n%do;\ndelimiter = ';'\n%end; %else\n%if %upcase(\"&&wof2l_delimiter_file_no_&wo2c_file_counter\") eq \"PIPE\" %then\n%do;\ndelimiter = '|'\n%end; %else\n%do;\ndelimiter = \"&&wof2l_delimiter_file_no_&wo2c_file_counter\"\n%end;\n \nMISSOVER DSD\nlrecl=&wof2l_lrec_length\n%if &&wof2l_has_header_file_no_&wo2c_file_counter %then\n%do;\nfirstobs = 2;\n%end;\n%else\n%do;\nfirstobs = 1;\n%end;\nlength\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"&&wof2l_length_seq_&wo2c_file_counter._&wof2c_variable_counter\" eq \"\" %then\n%let wof2l_length_seq_&wo2c_file_counter._&wof2c_variable_counter = 3;\nvar_&wo2c_file_counter._&wof2c_variable_counter\n%if \"%upcase(&&wof2l_type_seq_&wo2c_file_counter._&wof2c_variable_counter)\" = \"CHAR\" %then\n%do;\n$\n%end; &&wof2l_length_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\n \n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"&&wof2l_format_seq_&wo2c_file_counter._&wof2c_variable_counter\" eq \"\" %then\n%let wof2l_format_seq_&wo2c_file_counter._&wof2c_variable_counter = best12.;\nformat var_&wo2c_file_counter._&wof2c_variable_counter &&wof2l_format_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"&&wof2l_informat_seq_&wo2c_file_counter._&wof2c_variable_counter\" eq \"\" %then\n%let wof2l_informat_seq_&wo2c_file_counter._&wof2c_variable_counter = best32.;\ninformat var_&wo2c_file_counter._&wof2c_variable_counter &&wof2l_informat_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nlabel\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&orig_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\"\n%end;\n;\ninput\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\nvar_&wo2c_file_counter._&wof2c_variable_counter\n%if \"%upcase(&&wof2l_type_seq_&wo2c_file_counter._&wof2c_variable_counter)\" = \"CHAR\" %then\n%do;\n$\n%end;\n%end;\n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\ninformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"%trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter))\" = \"\" %then\n%let informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter = &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\nrun;\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work.&wof2l_fnl_ds_name_4_all_extfiles)) %then\n%do;\ndata &wof2l_output_dataset_name;\nset work.&wof2l_fnl_ds_name_4_all_extfiles\nwork._wof2l_output_dataset_name;\nrun;\n%end;\n%end;\n%if &wof2l_csv_big_data_mode = 1 %then\n%do;\ndata &wof2l_output_dataset_name;\nset\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work.&wof2l_fnl_ds_name_4_all_extfiles)) %then\n%do;\nwork.&wof2l_fnl_ds_name_4_all_extfiles\n%end;\nwork.get_table_info_&wo2c_file_counter\n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nlabel\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&orig_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\"\n%end;\n;\nformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\ninformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"%trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter))\" = \"\" %then\n%let informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter = &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\nrun;\n \n%end;\n%if &wof2l_debug_mode %then\n%put INFORMATION PROGRESS: Updating Loaddate of &wo2c_full_file_name;\n \n%if &wof2l_drop_missing_vars ne 0 %then\n%do;\n%DIAP_handling_missings_vars(\ndhm_missing_handling_option = &wof2l_drop_missing_vars,\ndhm_dataset_2_check = &wof2l_output_dataset_name,\ndhm_dataset_2_check_output = &wof2l_final_ds_name,\ndhm_dataset_2_write_out_results = _DIAP_missing_analysis_&wo2c_file_counter,\ndhm_stg_2_chk_var_b4_drop = &wof2l_chk_strng_in_var_4_missing\n);\n \n%end;\ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif file_path_full_name = \"&wo2c_full_file_name\" then\ndo;\n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = \"&wof2l_final_table_name\";\n%end;\ncheck_source_file_flag = &wof2l_check_source_file_flag;\nload_date = today();\nload_time = time();\nlibrary = \"%upcase(&wof2l_cas_target_libname)\";\nend;\nrun;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\";\n%if &wof2l_make_imported_data_prsstnt = 1 %then\n%do;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\n%end;\nquit;\n%end;\n%let wof2l_ds_2_profile_seq = &wof2l_ds_2_profile_seq.# &wof2l_cas_target_libname..&wof2l_final_table_name;\n%end; %else %put INFORMATION ALERT: Upload is set to be NOT active!!!;\n%end; %else\n%if &wo2c_file_extension eq XLSX  or\n(&wo2c_file_extension eq XLS and &wof2l_diap_guided_automation = 1) %then\n%do;\n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Loading EXCEL file #&wo2c_file_counter. &wo2c_full_file_name;\n%put INFORMATION: SHEET  &wof2l_sheet_name;\n%put INFORMATION: Target libname is: &wof2l_cas_target_libname;\n%put INFORMATION: Target Table name is: &wof2l_final_table_name;\n%end;\n \n%if &wof2l_upload_activation = 1 %then\n%do;\n \n \n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(&wof2l_output_dataset_name)) %then\n%do;\ndata work.&wof2l_fnl_ds_name_4_all_extfiles;\nset &wof2l_output_dataset_name;\nrun;\n%end;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\n%end;\ndata &wof2l_output_dataset_name;\nset\n%if \"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work.&wof2l_fnl_ds_name_4_all_extfiles)) %then\n%do;\nwork.&wof2l_fnl_ds_name_4_all_extfiles\n%end;\nwork.get_table_info_&wo2c_file_counter;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nlabel\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&orig_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\"\n%end;\n;\nformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\ninformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"%trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter))\" = \"\" %then\n%let informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter = &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\n%if &wof2l_skip_mssng_vrnm_in_xls = 1 %then\n%do;\nZZ_MISSING_VARNAME_2_AVOID_WNG = 0;\ndrop ZZ_MISSING_VARNAME_:;\n%end;\nrun;\n%if &wof2l_drop_missing_vars ne 0 %then\n%do;\n%DIAP_handling_missings_vars(\ndhm_missing_handling_option = &wof2l_drop_missing_vars,\ndhm_dataset_2_check = &wof2l_output_dataset_name,\ndhm_dataset_2_check_output = &wof2l_final_ds_name,\ndhm_dataset_2_write_out_results = _DIAP_missing_analysis_&wo2c_file_counter,\ndhm_stg_2_chk_var_b4_drop = &wof2l_chk_strng_in_var_4_missing\n);\n%end;\ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif file_path_full_name = \"&wo2c_full_file_name\" and\noriginal_sheetname = \"&wof2l_sheet_name\" then\ndo;\n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = \"&wof2l_final_table_name\";\n%end;\ncheck_source_file_flag = &wof2l_check_source_file_flag;\nload_date = today();\nload_time = time();\nlibrary = \"%upcase(&wof2l_cas_target_libname)\";\nend;\nrun;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\";\n%if &wof2l_make_imported_data_prsstnt = 1 %then\n%do;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\n%end;\nquit;\n%end;\n%let wof2l_ds_2_profile_seq = &wof2l_ds_2_profile_seq.# &wof2l_cas_target_libname..&wof2l_final_table_name;\n%end; %else %put INFORMATION ALERT: Upload is set to be NOT active!!!;\n%end; %else\n%if &wo2c_file_extension eq JMP or\n&wo2c_file_extension eq SHP or\n&wo2c_file_extension eq JSON or\n&wo2c_file_extension eq XML %then\n%do;\n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Loading JUMP/SHP file #&wo2c_file_counter. &wo2c_full_file_name;\n%put INFORMATION: Target libname is: &wof2l_cas_target_libname;\n%put INFORMATION: Target Table name is: &wof2l_final_table_name;\n%end;\n \n%if &wof2l_upload_activation = 1 %then\n%do;\nproc datasets lib= work;\ndelete _DIAP_xml_temp_storage;\nquit;\n%if (&wo2c_file_extension eq XML and\n%sysfunc(exist(&wof2l_output_dataset_name))) or\n(\"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(&wof2l_output_dataset_name)) ) %then\n%do;\ndata work._DIAP_xml_temp_storage;\nset &wof2l_output_dataset_name;\nrun;\n%end;\n \n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\n%end;\ndata\n%if (&wo2c_file_extension eq XML and\n%sysfunc(exist(work._DIAP_xml_temp_storage))) or\n(\"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work._DIAP_xml_temp_storage)) ) %then\n%do;\nwork._DIAP_XML_Temp_storage_new;\n%end; %else\n%do;\n&wof2l_output_dataset_name;\n%end;\nset work.get_table_info_&wo2c_file_counter\n \n;\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\ndrop &&curr_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter;\n%end;\nlabel\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter = \"&&orig_varname_seq_&wo2c_file_counter._&wof2c_variable_counter\"\n%end;\n;\nformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\ninformat\n%do wof2c_variable_counter = 1 %to &&wof2l_max_varnumber_&wo2c_file_counter;\n%if \"%trim(%left(&&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter))\" = \"\" %then\n%let informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter = &&format_value_seq_&wo2c_file_counter._&wof2c_variable_counter;\n&&new_var_name_seq_&wo2c_file_counter._&wof2c_variable_counter &&informat_value_seq_&wo2c_file_counter._&wof2c_variable_counter\n%end;\n;\nrun;\n \n%if (&wo2c_file_extension eq XML and\n%sysfunc(exist(work._DIAP_xml_temp_storage))) or\n(\"&wof2l_fnl_ds_name_4_all_extfiles\" ne \"\" and\n%sysfunc(exist(work._DIAP_xml_temp_storage)) )%then\n%do;\ndata &wof2l_output_dataset_name;\nset work._DIAP_xml_temp_storage\nwork._DIAP_XML_Temp_storage_new;\nrun;\nproc datasets lib = work;\ndelete _DIAP_xml_temp_storage\n_DIAP_XML_Temp_storage_new;\nquit;\n%end;\n%if &wof2l_drop_missing_vars ne 0 %then\n%do;\n%DIAP_handling_missings_vars(\ndhm_missing_handling_option = &wof2l_drop_missing_vars,\ndhm_dataset_2_check = &wof2l_output_dataset_name,\ndhm_dataset_2_check_output = &wof2l_final_ds_name,\ndhm_dataset_2_write_out_results = _DIAP_missing_analysis_&wo2c_file_counter,\ndhm_stg_2_chk_var_b4_drop = &wof2l_chk_strng_in_var_4_missing\n);\n%end;\ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif file_path_full_name = \"&wo2c_full_file_name\"\n%if &wo2c_file_extension eq JSON or\n&wo2c_file_extension eq XML %then\n%do;\nand\noriginal_sheetname = \"&wof2l_sheet_name\"\n%end;\nthen\ndo;\n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = \"&wof2l_final_table_name\";\n%end;\ncheck_source_file_flag = &wof2l_check_source_file_flag;\nload_date = today();\nload_time = time();\nlibrary = \"%upcase(&wof2l_cas_target_libname)\";\nend;\nrun;\n%if &wof2l_target_environment eq CAS %then\n%do;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\";\n%if &wof2l_make_imported_data_prsstnt = 1 %then\n%do;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\n%end;\nquit;\n%end;\n%let wof2l_ds_2_profile_seq = &wof2l_ds_2_profile_seq.# &wof2l_cas_target_libname..&wof2l_final_table_name;\n%end; %else %put INFORMATION ALERT: Upload is set to be NOT active!!!;\n%end; %else\n%if &wo2c_file_extension eq NEF %then\n%do;\n%if &wof2l_debug_mode %then\n%do;\n%put INFORMATION: Copying NEF file #&wo2c_file_counter. &wo2c_full_file_name;\n%put INFORMATION: Target libname is: &wof2l_cas_target_libname;\n%put INFORMATION: Target Table name is: &wof2l_final_table_name;\n%end;\n%if &wof2l_upload_activation = 1 %then\n%do;\n%let wof2l_libname_path = ;\n%if &wof2l_target_environment eq CAS %then\n%do;\nproc cas;\ntable.caslibinfo result=sss/caslib=\"&wof2l_cas_target_libname\"  ;\ndescribe sss;\nprint sss;\nsaveresult sss  dataout=work.xdata;\nrun;\n \nproc sql;\nselect path into:wof2l_libname_path\nfrom work.xdata;\nquit;\n%end; %else\n%do;\n%let wof2l_libname_path = %trim(%left(%sysfunc(pathname(&wof2l_cas_target_libname))))&wof2l_delimiter.;\n%end;\ndata work._DIAP_working_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif file_path_full_name = \"&wo2c_full_file_name\" then\ndo;\n%if &wof2l_check_source_file_flag = 1 and\n\"&wof2l_prefix_4_suspicious_src_fl\" ne \"\" and\n\"&wof2l_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = \"&wof2l_final_table_name\";\n%end;\ncheck_source_file_flag = &wof2l_check_source_file_flag;\nload_date = today();\nload_time = time();\nlibrary = \"%upcase(&wof2l_cas_target_libname)\";\nend;\nrun;\n%if &wof2l_debug_mode %then\n%put INFORMATION GENERAL: This file is copied into this path: wof2l_libname_path = &wof2l_libname_path;\nx \"scp &wo2c_full_file_name &wof2l_libname_path.&wof2l_final_table_name..NEF\";\n \n%end; %else %put INFORMATION ALERT: Upload is set to be NOT active!!!;\n%end; %else\n%put INFORMATION ALERT: Extension &wo2c_file_extension is unknown!;\n%end; /* end of fixed width file ELSE*/\n \n%end; /*end of check for varnumber gt 0 */ %else\n%do;\n%put INFORMATION: File #&wo2c_file_counter. &wo2c_full_file_name not uploaded no variable in source file!;\n%end;\n \n%end; %else\n%do;\n%put INFORMATION: File #&wo2c_file_counter. &wo2c_full_file_name not uploaded since no new version available!!;\n%end;\n \nfilename inf&wo2c_file_counter clear;\n%end; /* end file counter */\n \n%if &wof2l_target_environment eq CAS %then\n%do;\ndata wof2l_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif missing(library) then delete;\nrun;\n%let wof2l_final_table_name = %scan(&wof2l_upload_log_ds, 2, '.');\n%let wof2l_cas_target_libname = %scan(&wof2l_upload_log_ds, 1, '.');\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\ndata &wof2l_cas_target_libname..&wof2l_final_table_name;\nset wof2l_upload_log_ds;\nrun;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" ;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\nquit;\n \ndata wof2l_variable_dict_dataset;\nset &wof2l_variable_dict_dataset;\nrun;\n%let wof2l_final_table_name = %scan(&wof2l_variable_dict_dataset, 2, '.');\n%let wof2l_cas_target_libname = %scan(&wof2l_variable_dict_dataset, 1, '.');\nproc casutil;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\ndroptable casdata = \"&wof2l_final_table_name\" incaslib = \"&wof2l_cas_target_libname\" quiet;\nquit;\ndata &wof2l_cas_target_libname..&wof2l_final_table_name;\nset wof2l_variable_dict_dataset;\nrun;\nproc casutil;\npromote casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" ;\nsave casdata=\"&wof2l_final_table_name\" incaslib=\"&wof2l_cas_target_libname\"\noutcaslib=\"&wof2l_cas_target_libname\" casout=\"&wof2l_final_table_name\" replace;\nquit;\n%put &=wof2l_ds_2_profile_seq;\n%if \"%upcase(&wof2l_do_profiling)\" = \"DICT_ONLY\" or\n\"%upcase(&wof2l_do_profiling)\" = \"PROFILE\" %then\n%do;\n%automated_profiling_4_DIAP(\nap4d_table_2_prep_4_prof_seq = &wof2l_ds_2_profile_seq,\nap4d_dict_source_file_path = &wof2l_profile_dict_location,\nap4d_prof_execution_option = &wof2l_do_profiling,\nap4d_libname_4_dictionaries = %scan(&wof2l_upload_log_ds, 1, '.'),\nap4d_viyaversion = &wof2l_viyaversion\n);\n%end;\n \n%end; /* if CAS */ %else\n%do;\ndata &wof2l_upload_log_ds;\nset work._DIAP_working_upload_log_ds;\nif missing(library) then delete;\nrun;\n \n%end; /* file loop */\n%end; /*   zero files check */\n%end; /* check for doing only profiling */\n%mend write_out_files_2_libname;\n \n/** FOR TESTING ***\noption mprint source notes;\n%let full_filename_path_seq = ;\nproc sql noprint;\nselect\nfull_file_name\ninto\n:full_filename_path_seq separated by \" #\"\nfrom\n&overview_ds;\nquit;\n%put &=full_filename_path_seq;\n \n%write_out_files_2_libname(\n&wo2c_full_file_name_seq,\n&target_libname,\n&overview_ds\n);\n \n \n*********************/\n/******************************************************************************\n%wordcnt\n________\nCounts the words in a list\n______________________________________________________________________________\n \nUSAGE:                         %wordcnt(list,delim)\n______________________________________________________________________________\n \nDESCRIPTION:\n \nFinds the number of words/tokens in a string.  The user specifies a\ndelimiter e.g. # to identify what separates the words.  The macro should be\ncalled in the following way:\ne.g. %let x=%wordcnt(item1#item2 item2a#item3, '#').\nAfter running the macro x will be assigned the value of wordcnt.\n______________________________________________________________________________\n \nINPUT PARAMETERS AND KEYWORDS:\n \nlist            the name of the string.\ndelim           the delimiter e.g. '#'.\n_________________________________________________________________________\n \nCALLS: none.\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n%macro wordcnt(\nlist,\ndelim\n)\n;\n%local\nword\nwc_count;\n%let wc_count = 0;\n%if %quote(&list) ne %then\n%do;\n%let word = %scan(%quote(&list), 1, &delim);\n%let word = %quote(&word);\n%do %while (&word ne);\n%let wc_count = %eval(&wc_count + 1);\n%let word = %scan(%quote(&list), &wc_count+1, &delim);\n%let word = %quote(&word);\n%end;\n%end;\n&wc_count\n%mend wordcnt;\n/** FOR TESTING ***\noption mprint source notes ;\n%let item_seq = a b c#d$f g #h#i$j;\n%let separator = '$' ;\n%let separator = '#' ;\n%let separator = ' ' ;\n%let number_of_items = %wordcnt(&item_seq, &separator);\n%put &=number_of_items;\n \n*********************/\n/******************************************************************************\n \n%log_dataset_4_upload_maintenance\n________\n \n \nuploads a list of files that are listed in a \"#\"-separated sequence (without quotes).\nSpecifically this macro maintains the upload log dataset and preparess the upload log dataset\nso it can be used by \"write_out_files_2_libname.sas\" to read in the files that need\nto be read in.\n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro uploads all files that are listed in a #-separated macro sequence into CAS.\nIt takes care of the following formats:\n- CSV\n- JMP\n- XLSX.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nld4um_upload_log_ds_name:\nname and place of the dataset that keeps track of all the uploaded files.\nld4um_upload_new_seq_of_files:\nlist of files separated by # that need to be uploaded to SAS/CAS.\nld4um_directory_path_seq:\nlist of directories of files that need to be uploaded separated by #\nld4um_substitute_string_seq:\nif the filename or variable names need to be truncated, one way to get there\nis to omit certain characters im the target table name/variable name.\nld4um_fn_in_fxd_wdth_def_fl_seq:\nif the macro is called based on \"special definition\" file, this will\nreference which table name was provided in that dictionary\nld4um_max_name_length:\nthe total filename has to be less than 32, this process adds at least 2 characters\nto the target table name in case when the truncated table name from 2 or more\nsource files end up to be the same name.\nSo this number indicates how many characters are used in case the table name\nhas to be truncated. it is recommneded to use a number less or equal than 30.\nld4um_debug_mode:\n1: writes out additional information to the log.\n0 (default): no additional information is written out to the log.\nld4um_check_modify_date:\n1 (default): process checks for the modified date of the file to be uploaded and compares\nto the load date of that file in case the same file was uploaded in the past.\n0: modified date is ignored and all files are uploaded no matter what.\nld4um_stringseq_2_cutout_from_fn\na string sequence separated by # can be provided, which will be cut out of the filename\n \n \n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro log_dataset_4_upload_maintenance(\nld4um_upload_log_ds_name,\nld4um_upload_new_seq_of_files,\nld4um_directory_path_seq = ,\nld4um_substitute_string_seq = ,\nld4um_fn_in_fxd_wdth_def_fl_seq = ,\nld4um_max_name_length = 29,\nld4um_debug_mode = 0,\nld4um_check_modify_date = 1,\nld4um_stringseq_2_cutout_from_fn = ,\nld4um_force_upload_of_all_files = 0,\nld4um_fnl_tblname_from_sheetonly = 1,\nld4um_create_unique_target_tblnm = 0,\nld4um_delimiter = /,\nld4um_fnl_ds_name_4_all_extfiles = ,\nld4um_diap_guided_automation = 0,\nld4um_gddauto_upd_fls_del_seq = ,\nld4um_gddauto_upd_fls_sht_seq = ,\nld4um_gddauto_upd_fls_cntt_flg = ,\nld4um_gddauto_upd_fls_tgt_seq = ,\nld4um_gddauto_upd_fls_hdr_seq =\n \n);\n \n \n%local\nld4um_file_count\nld4um_file_counter\nld4um_full_file_name\nld4um_file_extension\nld4um_filename\nld4um_full_file_name_length\nld4um_table_name\nld4um_excel_table_seq\nld4um_xlsx_table_count\nld4um_xlsx_table_counter\nld4um_first_char\nld4um_original_table_name\nld4um_final_table_name\nld4um_sheet_name\nld4um_file_name_length\nld4um_full_table_name\nld4um_original_sheet_name\nld4um_sheet_name_length\nld4um_onefile\nld4um_string_seq_cut_count\nld4um_string_seq_cut_counter\nld4um_gddauto_upd_fls_del\nld4um_gddauto_upd_fls_sht\nld4um_gddauto_upd_fls_ct_flag\nld4um_gddauto_upd_fls_tgt\nld4um_gddauto_upd_fls_hdr_flg\n;\n \n \n%let ld4um_gddauto_upd_fls_del = ;\n \n%let ld4um_half_of_max_name_length = %eval(&ld4um_max_name_length / 2);\n%let ld4um_file_count = %wordcnt(&ld4um_upload_new_seq_of_files, '#');\n%let ld4um_string_seq_cut_count = 0;\n%let ld4um_string_seq_cut_count = %wordcnt(&ld4um_stringseq_2_cutout_from_fn, \"#\");\n \nproc datasets lib = work;\ndelete _file_list_complete_info_:;\nquit;\n \n%do ld4um_file_counter = 1 %to &ld4um_file_count;\n/*********\nFirst check the length of the filename and such, since that will become the table name.\nExcel will be treated separately, since one XLS file can contain multiple sheets.\n*********/\n%let ld4um_full_file_name = %scan(&ld4um_upload_new_seq_of_files, &ld4um_file_counter, '#');\n%let ld4um_file_extension = %upcase(%trim(%left(%scan(&ld4um_full_file_name, -1))));\n \n%if \"&ld4um_gddauto_upd_fls_cntt_flg\" ne \"\" %then\n%let ld4um_gddauto_upd_fls_ct_flag = %scan(&ld4um_gddauto_upd_fls_cntt_flg, &ld4um_file_counter, '#');\n \n%if \"&ld4um_gddauto_upd_fls_ct_flag\" eq \"\" %then\n%let ld4um_gddauto_upd_fls_ct_flag = 0;\n \n%if &ld4um_diap_guided_automation = 1 %then\n%do;\n%if \"&ld4um_gddauto_upd_fls_del_seq\" ne \"\" %then\n%do;\n%let ld4um_gddauto_upd_fls_del = %scan(&ld4um_gddauto_upd_fls_del_seq, &ld4um_file_counter, '#');\n%end; %else\n%do;\n%let ld4um_gddauto_upd_fls_del = ;\n%end;\n \n%if \"&ld4um_gddauto_upd_fls_hdr_seq\" ne \"\" %then\n%do;\n%let ld4um_gddauto_upd_fls_hdr_flg = %scan(&ld4um_gddauto_upd_fls_hdr_seq, &ld4um_file_counter, '#');\n%end; %else\n%do;\n%let ld4um_gddauto_upd_fls_hdr_flg = ;\n%end;\n \n%let ld4um_gddauto_upd_fls_sht = %scan(&ld4um_gddauto_upd_fls_sht_seq, &ld4um_file_counter, '#');\n%if %upcase(\"&ld4um_gddauto_upd_fls_sht\") eq \"_DIAP_NA_\" %then\n%let ld4um_gddauto_upd_fls_sht = ;\n%if \"&ld4um_gddauto_upd_fls_tgt_seq\" ne \"\" %then\n%do;\n%let ld4um_gddauto_upd_fls_tgt = %scan(&ld4um_gddauto_upd_fls_tgt_seq, &ld4um_file_counter, '#');\n%if %upcase(\"&ld4um_gddauto_upd_fls_tgt\") eq \"_DIAP_NA_\" %then\n%let ld4um_gddauto_upd_fls_tgt = ;\n%end; %else\n%do;\n%let ld4um_gddauto_upd_fls_tgt = ;\n%end;\n%end;\n \n \n%if \"&ld4um_fn_in_fxd_wdth_def_fl_seq\" ne \"\" %then\n%do;\n%let ld4um_fn_in_fxd_wdth_def_fl = %scan(&ld4um_fn_in_fxd_wdth_def_fl_seq, &ld4um_file_counter, '#');\n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Working on  &=ld4um_fn_in_fxd_wdth_def_fl;\n%put INFORMATION: General: Working on  &=ld4um_full_file_name;\n%end;\n%end;\n%let ld4um_filename = %scan(&ld4um_full_file_name, -1, \"&ld4um_delimiter\");\n%let ld4um_original_table_name = %scan(&ld4um_filename, 1, '.');\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\n%let ld4um_directory_path = %scan(&ld4um_directory_path_seq, &ld4um_file_counter, '#');\n%end; %else\n%do;\n%let ld4um_full_file_name_length = %length(&ld4um_full_file_name);\n%let ld4um_file_name_length = %length(&ld4um_filename);\n%let ld4um_directory_path = %substr(&ld4um_full_file_name, 1, %eval(&ld4um_full_file_name_length - &ld4um_file_name_length));\n%end;\n%let ld4um_onefile = _DIAP_DT;\n \n%if &ld4um_gddauto_upd_fls_ct_flag = 0 %then\n%do;\nfilename _DIAP_DT \"&ld4um_full_file_name\";\n%end; %else\n%do;\nfilename _DIAP_DT filesrvc folderpath= \"&ld4um_directory_path\" filename=\"&ld4um_filename\";\n%end;\n \n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Working on  &=ld4um_filename;\n%put INFORMATION: General: Working on  &=ld4um_directory_path;\n%end;\n%let ld4um_file_modified_date = ;\n%if &ld4um_check_modify_date = 1\n/*        and*/\n/*        &ld4um_gddauto_upd_fls_ct_flag = 0 */\n%then\n%do;\n%let ld4um_fid=%sysfunc(fopen(&ld4um_onefile));\n%let ld4um_Modify_Datetime = %qsysfunc(finfo(&ld4um_fid,Last Modified));\n%let ld4um_file_modified_date = %substr(&ld4um_Modify_Datetime, 1, 9);\n%let ld4um_file_modified_time = %substr(&ld4um_Modify_Datetime, 11, 8);\n%let ld4um_fid=%sysfunc(fclose(&ld4um_fid));\n%end;\n%if \"&ld4um_file_modified_date\" eq \"\" %then\n%do;\n%let ld4um_file_modified_date = 10Jan2199;\n%let ld4um_file_modified_time = 00:00:01;\n%end;\n \n%if &ld4um_string_seq_cut_count ne 0 %then\n%do;\n%do ld4um_string_seq_cut_counter = 1 %to &ld4um_string_seq_cut_count;\n%let ld4um_string_2_cut = %scan(&ld4um_stringseq_2_cutout_from_fn, &ld4um_string_seq_cut_counter, \"#\");\n \n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Omitting character string from File: &ld4um_original_table_name;\n%end;\n \ndata _null_;\nld4um_original_table_name = \"&ld4um_original_table_name\";\nld4um_string_2_cut = \"&ld4um_string_2_cut\";\nlength_chk = klength(ld4um_string_2_cut);\nlength_org = klength(ld4um_original_table_name);\nposition = 0;\nposition = kindex(kupcase(ld4um_original_table_name), kupcase(ld4um_string_2_cut));\nif position ne 0 then\ndo;\nif position = 1 and length_chk ne length_org then\nld4um_original_table_name = trim(left(ksubstr(ld4um_original_table_name, position + length_chk)));\nelse if position = 1 and length_chk eq length_org then\nld4um_original_table_name = \"\";\nelse\nld4um_original_table_name = trim(left(trim(left(ksubstr(ld4um_original_table_name, 1, position - 1)))||trim(left(ksubstr(ld4um_original_table_name, position + length_chk)))));\nend;\nif missing(ld4um_original_table_name) then ld4um_original_table_name = \"ZZ_Check_out_cut_out_string_4_FN_&ld4um_file_counter\";\ncall symput(\"ld4um_original_table_name\", ld4um_original_table_name);\nrun;\n%let ld4um_original_table_name = %trim(%left(&ld4um_original_table_name));\n \n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: To New Filename: &ld4um_original_table_name;\n%end;\n \n%end;\n%end;\n \n%if \"&ld4um_gddauto_upd_fls_tgt\" ne \"\" %then\n%let ld4um_original_table_name = &ld4um_gddauto_upd_fls_tgt;\n \n%let ld4um_first_char = %substr(&ld4um_original_table_name, 1, 1);\n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Working on  &=ld4um_first_char;\n%put INFORMATION: General: Working on  &=ld4um_file_modified_date;\n%end;\ndata _null_;\nif kcompress(\"&ld4um_first_char\",\"1234567890(-@*+{[}])\") = \"\" then\ncall symput(\"ld4um_first_char\", 1);\nrun;\n%if &ld4um_first_char = 1 %then\n%let ld4um_table_name = T&ld4um_original_table_name;\n%else\n%let ld4um_table_name = &ld4um_original_table_name;\n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Working on  &=ld4um_table_name;\n%end;\n \n/*********\nbefore checking table name length, reduce characters that need to be dropped\nmandatorily.\n*********/\n%let ld4um_table_name = %upcase(%sysfunc(kcompress(%superQ(ld4um_table_name),%(%))));\n%if %length(&ld4um_table_name) gt &ld4um_max_name_length %then\n%do;\n%let ld4um_table_name = %sysfunc(kcompress(%superQ(ld4um_table_name),&ld4um_substitute_string_seq.));\n%if %length(&ld4um_table_name) gt &ld4um_max_name_length %then\n%let ld4um_table_name = %substr(&ld4um_table_name, 1, &ld4um_max_name_length);\n%end;\n%let ld4um_original_sheet_name = ;\n%let ld4um_xlsx_table_counter = 1;\n/*********\nFor Excel this is an attempt to come up with some intelligent way to determine the opimal\nlength of file name and sheet name(s) per Excel file for the target table name.\n*********/\n%if ((&ld4um_file_extension eq XLSX or\n&ld4um_file_extension eq JSON or\n&ld4um_file_extension eq XML) or\n(&ld4um_file_extension eq XLS and &ld4um_diap_guided_automation = 1) ) and\n(\"&ld4um_fn_in_fxd_wdth_def_fl_seq\" eq \"\") %then\n%do;\n%if &ld4um_file_extension eq XML and\n&ld4um_diap_guided_automation ne 1 %then\n%do;\nfilename  tempxlsx \"&ld4um_full_file_name.\";\nfilename  tpxmlmap \"%substr(&ld4um_full_file_name, 1, %eval(%length(&ld4um_full_file_name) - 3))map\";\nlibname tempxlsx xmlv2 automap=replace xmlmap=tpxmlmap;\nlibname tempxlsx xmlv2 xmlmap=tpxmlmap access=READONLY;\n \n%end; %else\n%if &ld4um_diap_guided_automation ne 1 %then\n%do;\nlibname tempxlsx &ld4um_file_extension \"&ld4um_full_file_name.\";\n%end;\n%let ld4um_excel_table_seq = ;\n%if &ld4um_fnl_tblname_from_sheetonly = 1 %then\n%do;\n%let ld4um_table_name = ;\n%end;\n%let ld4um_org_excel_table_name = &ld4um_table_name;\n%if &ld4um_diap_guided_automation ne 1 %then\n%do;\nproc sql noprint;\nselect\nmemname\ninto\n:ld4um_excel_table_seq separated by \"#\"\nfrom\ndictionary.tables\nwhere\nkupcase(libname) = \"TEMPXLSX\";\nquit;\n%end; %else\n%do;\n%let ld4um_excel_table_seq = &ld4um_gddauto_upd_fls_sht;\n%end;\n%let ld4um_xlsx_table_count = %wordcnt(&ld4um_excel_table_seq, '#');\n%let ld4um_table_name_length = %length(&ld4um_table_name);\n%if &ld4um_debug_mode %then\n%put INFORMATION: General: Working on  &ld4um_org_excel_table_name;\n%do ld4um_xlsx_table_counter = 1 %to &ld4um_xlsx_table_count;\n%let ld4um_table_name = &ld4um_org_excel_table_name;\n%let ld4um_original_sheet_name = %scan(&ld4um_excel_table_seq, &ld4um_xlsx_table_counter, \"#\");\n%let ld4um_sheet_name = %sysfunc(tranwrd(%quote(&ld4um_original_sheet_name),-,_));\n%let ld4um_sheet_name = %sysfunc(kcompress(%superQ(ld4um_sheet_name),%(%)));\n/**\ncheck if name is final table name is provided through guided automation,\nthen sheet name is not needed.\n**/\n%if \"&ld4um_gddauto_upd_fls_tgt\" ne \"\" %then\n%let ld4um_sheet_name = ;\n%let ld4um_sheet_name_length = %length(&ld4um_sheet_name);\n%let ld4um_complete_length = %eval(&ld4um_sheet_name_length + &ld4um_table_name_length);\n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION: General: Working on  &=ld4um_sheet_name;\n%put INFORMATION: General: Working on  &=ld4um_complete_length;\n%end;\n%if &ld4um_complete_length gt &ld4um_max_name_length %then\n%do;\n%let ld4um_sheet_name = %sysfunc(kcompress(%superQ(ld4um_sheet_name),&ld4um_substitute_string_seq.));\n%let ld4um_sheet_name_length = %length(&ld4um_sheet_name);\n%if &ld4um_sheet_name_length gt &ld4um_max_name_length %then\n%do;\n%let ld4um_sheet_name = %substr(&ld4um_sheet_name, 1, &ld4um_max_name_length);\n%let ld4um_sheet_name_length = &ld4um_max_name_length;\n%end;\n%let ld4um_complete_length = %eval(&ld4um_sheet_name_length + &ld4um_table_name_length);\n%if &ld4um_complete_length gt &ld4um_max_name_length %then\n%do;\n%let ld4um_table_name = %sysfunc(kcompress(%superQ(ld4um_table_name),&ld4um_substitute_string_seq.));\n%end;\n \n%end;\n%let ld4um_table_name_length = %length(&ld4um_table_name);\n%let ld4um_sheet_name_length = %length(&ld4um_sheet_name);\n%let ld4um_complete_length = %eval(&ld4um_sheet_name_length + &ld4um_table_name_length);\n%if %length(&ld4um_sheet_name) gt &ld4um_half_of_max_name_length and\n%length(&ld4um_table_name) gt &ld4um_half_of_max_name_length %then\n%do;\n%let ld4um_table_name = %substr(&ld4um_table_name, 1, &ld4um_half_of_max_name_length);\n%let ld4um_sheet_name = %substr(&ld4um_sheet_name, 1, &ld4um_half_of_max_name_length);\n%end; %else\n%if &ld4um_complete_length gt &ld4um_max_name_length %then\n%do;\n%if &ld4um_table_name_length gt &ld4um_sheet_name_length %then\n%do;\n%let ld4um_allowed_length = %eval(&ld4um_max_name_length - &ld4um_sheet_name_length);\n%let ld4um_table_name = %substr(&ld4um_table_name, 1, &ld4um_allowed_length);\n%end; %else\n%do;\n%let ld4um_allowed_length = %eval(&ld4um_max_name_length - &ld4um_table_name_length);\n%let ld4um_sheet_name = %substr(&ld4um_sheet_name, 1, &ld4um_allowed_length);\n%end;\n%end;\n%let ld4um_table_name = %sysfunc(tranwrd(%quote(&ld4um_table_name&ld4um_sheet_name),%str( ),_));\n%let ld4um_final_table_name = %sysfunc(tranwrd(%quote(&ld4um_table_name),%str( ),_));\n%let ld4um_final_table_name = %upcase(%sysfunc(tranwrd(%quote(&ld4um_final_table_name),-,_)));\n/*********\nWrite out information to a temporary file for later consumption in case for Excel.\n*********/\n/** **/\n%if &ld4um_debug_mode %then\n%do;\n%put INFORMATION PROGRESS: File &ld4um_full_file_name;\n%put INFORMATION PROGRESS: Sheet &ld4um_original_sheet_name;\n%put INFORMATION PROGRESS: Mofify Date &ld4um_file_modified_date;\n%put INFORMATION PROGRESS: Modify Time &ld4um_file_modified_time;\n%put INFORMATION PROGRESS: Final Table Name &ld4um_final_table_name;\n%end;\n \n \ndata work._file_list_complete_info_&ld4um_file_counter._&ld4um_xlsx_table_counter;\nlength\nfile_path_full_name $512\noriginal_filename $128\noriginal_sheetname $128\nadjusted_table_name $64\nadjusted_table_name_org $64\nextension $12\nlibrary $8\nfile_delimiter $32\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\ndirectory_path  $512\n%end;\n;\nformat\nfile_modified_date date10.\nfile_modified_time time8.\n;\nfile_path_full_name = \"&ld4um_full_file_name\";\noriginal_filename = \"&ld4um_filename\";\noriginal_sheetname = \"&ld4um_original_sheet_name\";\nadjusted_table_name_org = \"%trim(%left(&ld4um_final_table_name))\";\nadjusted_table_name = \"\";\nfile_delimiter = \"&ld4um_gddauto_upd_fls_del\";\nextension = \"&ld4um_file_extension\";\nlibrary = \"\";\nfile_modified_date = input(\"&ld4um_file_modified_date\", date9.);\nfile_modified_time = input(\"&ld4um_file_modified_time\", time8.);\ncheck_source_file_flag = 0;\nfilepath_is_for_sas_content = &ld4um_gddauto_upd_fls_ct_flag;\n%if &ld4um_gddauto_upd_fls_hdr_flg = 0 %then\n%do;\nvariable_name_is_in_header = 0;\n%end; %else\n%do;\nvariable_name_is_in_header = 1;\n%end;\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\ndirectory_path = \"&ld4um_directory_path\";\n%end;\nrun;\n%end;\n%end; %else\n%do;\n%if &ld4um_file_extension ne DBF and\n&ld4um_file_extension ne PRJ and\n&ld4um_file_extension ne SHX %then\n%do;\n/*********\nWrite out information to a temporary file for later consumption in case for all other cases.\n*********/\n%let ld4um_final_table_name = %sysfunc(tranwrd(%quote(&ld4um_table_name),%str( ),_));\n%let ld4um_final_table_name = %sysfunc(tranwrd(%quote(&ld4um_final_table_name),-,_));\n \n/**\n%put INFORMATION PROGRESS: File &ld4um_full_file_name;\n%put INFORMATION PROGRESS: Mofify Date &ld4um_file_modified_date;\n%put INFORMATION PROGRESS: Modify Time &ld4um_file_modified_time;\n**/\ndata work._file_list_complete_info_&ld4um_file_counter._&ld4um_xlsx_table_counter;\nlength\nfile_path_full_name $512\noriginal_filename $128\noriginal_sheetname $128\nadjusted_table_name $64\nadjusted_table_name_org $64\nextension $12\nlibrary $8\nfile_delimiter $32\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\ndirectory_path  $512\n%end;\n%if \"&ld4um_fn_in_fxd_wdth_def_fl_seq\" ne \"\" %then\n%do;\nfilename_asin_fxd_wdth_def_fl $128\n%end;\n;\nformat\nfile_modified_date date9.\nfile_modified_time time8.\n;\nfile_path_full_name = \"&ld4um_full_file_name\";\noriginal_filename = \"&ld4um_filename\";\noriginal_sheetname = \"&ld4um_original_sheet_name\";\nadjusted_table_name_org = \"%trim(%left(&ld4um_final_table_name))\";\nadjusted_table_name = \"\";\nlibrary = \"\";\nfile_delimiter = \"&ld4um_gddauto_upd_fls_del\";\nextension = \"&ld4um_file_extension\";\nfile_modified_date = input(\"&ld4um_file_modified_date\", date9.);\nfile_modified_time = input(\"&ld4um_file_modified_time\", time8.);\ncheck_source_file_flag = 0;\nfilepath_is_for_sas_content = &ld4um_gddauto_upd_fls_ct_flag;\n%if &ld4um_gddauto_upd_fls_hdr_flg = 0 %then\n%do;\nvariable_name_is_in_header = 0;\n%end; %else\n%do;\nvariable_name_is_in_header = 1;\n%end;\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\ndirectory_path = \"&ld4um_directory_path\";\n%end;\n%if \"&ld4um_fn_in_fxd_wdth_def_fl_seq\" ne \"\" %then\n%do;\nfilename_asin_fxd_wdth_def_fl = \"&ld4um_fn_in_fxd_wdth_def_fl\";\n%end;\nrun;\n%end;\n%end;\n \n \n%end;\n/*********\nPut all the information together into one file and check if there is an original overview\nfile available.\n*********/\n%let ld4um_temp_table_seq_2_check = ;\n \nproc sql noprint;\nselect memname\ninto :ld4um_temp_table_seq_2_check separated by \" \"\nfrom dictionary.tables\nwhere\nkupcase(libname) = \"WORK\" and\nkupcase(memname) contains \"_FILE_LIST_COMPLETE_INFO_\";\nquit;\n \n%if &ld4um_temp_table_seq_2_check eq %then\n%do;\ndata &ld4um_temp_table_seq_2_check;\nlength\nfile_path_full_name $512\noriginal_filename $128\noriginal_sheetname $128\nadjusted_table_name $64\nadjusted_table_name_org $64\nextension $12\nlibrary $8\nfile_delimiter $32\n%if \"&ld4um_directory_path_seq\" ne \"\" %then\n%do;\ndirectory_path  $512\n%end;\n%if \"&ld4um_fn_in_fxd_wdth_def_fl_seq\" ne \"\" %then\n%do;\nfilename_asin_fxd_wdth_def_fl $128\n%end;\n;\ncheck_source_file_flag = 0;\nfilepath_is_for_sas_content = 0;\nif 0;\nrun;\n%end;\n \n \n/*************************\ncheck if table exists in CAS , but it not loaded yet\n**************************/\n%let ld4um_target_environment = ;\n%let ld4um_caslib_temp = %trim(%left(%scan(&ld4um_upload_log_ds_name, 1, '.')));\nproc sql noprint;\nselect distinct(engine)\ninto :ld4um_target_environment\nfrom dictionary.libnames\nwhere kupcase(libname) = \"%upcase(&ld4um_caslib_temp)\"\n;\nquit;\n \n%if %sysfunc(exist(&ld4um_upload_log_ds_name)) = 0 and\n&ld4um_target_environment eq CAS %then\n%do;\n%let ld4um_castable_temp = %trim(%left(%scan(&ld4um_upload_log_ds_name, 2, '.')));\nproc cas;\ntable.caslibinfo\nresult=sss/caslib=\"&ld4um_caslib_temp\"  ;\ndescribe sss;\nprint sss;\nsaveresult sss\ndataout=work._temp_path_data;\nrun;\n%let ld4um_temp_lib_path = ;\nproc sql;\nselect path\ninto:ld4um_temp_lib_path\nfrom work._temp_path_data;\nquit;\n \n%if %sysfunc(fileexist(%trim(%left(&ld4um_temp_lib_path))&ld4um_castable_temp..sashdat)) %then\n%do;\nproc casutil\nincaslib=\"&ld4um_caslib_temp\" outcaslib = \"&ld4um_caslib_temp\";\nload casdata=\"&ld4um_castable_temp..sashdat\" casout=\"&ld4um_castable_temp\" promote;\nquit;\n%end;\n%end;\n \n \n \n%if %sysfunc(exist(&ld4um_upload_log_ds_name)) %then\n%do;\ndata work.ld4um_combined_log_ds;\nset &ld4um_temp_table_seq_2_check\n;\nrun;\nproc sort\ndata = work.ld4um_combined_log_ds;\nby\nfile_path_full_name\n;\nquit;\n \ndata work.original_overview_ds;\nset &ld4um_upload_log_ds_name;\nif missing(check_source_file_flag) then check_source_file_flag = 0;\nrun;\nproc sort\ndata = work.original_overview_ds;\nby\nfile_path_full_name\n;\nquit;\ndata work.overview_new_upload_list;\nmerge\nwork.ld4um_combined_log_ds (in = update)\nwork.original_overview_ds (in = original);\nby\nfile_path_full_name;\nformat\ntemp_mod_date best12.\ntemp_load_date best12.;\ntemp_mod_date = .;\ntemp_load_date = .;\nif not update and original then\noutput; else\nif update and original then\ndo;\ntemp_mod_date = file_modified_date;\ntemp_load_date = load_date;\n%if &ld4um_force_upload_of_all_files = 0 %then\n%do;\nif temp_mod_date < temp_load_date or\n(file_modified_date = load_date and\nfile_modified_time < load_time) then\ndo;\nput \"PROCESSSING INFORMATION: Following file is not uploaded again since the last upload date is more recent then the file date:\" ;\nput \"PROCESSSING INFORMATION: \" file_path_full_name;\noutput;\nend; else\ndo;\n%end;\nload_date = .;\nload_time = .;\noutput;\n%if &ld4um_force_upload_of_all_files = 0 %then\n%do;\nend;\n%end;\nend; else\nif update and not original then\ndo;\noutput;\nend;\ndrop\ntemp_mod_date\ntemp_load_date\nfile_modified_date\nfile_modified_time;\nrun;\ndata work.zz_ld4um_upload_log_ds_name;\nset overview_new_upload_list;\nrun;\n%end; %else\n%do;\ndata work.zz_ld4um_upload_log_ds_name;\nset &ld4um_temp_table_seq_2_check\n;\nformat\nload_time time8.\nload_date date9.\n;\nload_date = .;\nload_time = .;\ndrop\nfile_modified_date\nfile_modified_time;\nrun;\n \n%end;\n \nproc sort data = work.zz_ld4um_upload_log_ds_name;\nby\nadjusted_table_name_org\ndescending load_date;\nquit;\n \n/**********\nthis datastep deals with duplicates and if there are, we are appending a counter to\nthe newly created table name to make them unique.\n**********/\n%let ld4um_z_prefix = %eval(31 - &ld4um_max_name_length);\ndata &ld4um_upload_log_ds_name;\nset work.zz_ld4um_upload_log_ds_name;\nby\nadjusted_table_name_org;\nretain counter 0;\ndrop counter;\nif first.adjusted_table_name_org then\ncounter = 0;\ncounter = counter + 1;\n%if &ld4um_create_unique_target_tblnm = 1 %then\n%do;\nif (first.adjusted_table_name_org ne last.adjusted_table_name_org) or\n(not first.adjusted_table_name_org and not last.adjusted_table_name_org) then\ndo;\nif missing(adjusted_table_name) then\ndo;\n%if \"&ld4um_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = trim(left(adjusted_table_name_org)) || \"_\" || put(counter, z&ld4um_z_prefix..);\n%end; %else\n%do;\nadjusted_table_name = \"&ld4um_fnl_ds_name_4_all_extfiles\";\n%end;\nend;\nend; else\n%end;\n%if \"&ld4um_fnl_ds_name_4_all_extfiles\" eq \"\" %then\n%do;\nadjusted_table_name = trim(left(adjusted_table_name_org));\n%end; %else\n%do;\nadjusted_table_name = \"&ld4um_fnl_ds_name_4_all_extfiles\";\n%end;\n \nrun;\n \n \n \n%mend log_dataset_4_upload_maintenance;\n/** FOR TESTING ***\noption mprint source notes;\noption mprint source notes;\n* %include \"C:\\Users\\<<MYUSERID>>\\OneDrive - SAS\\Documents\\Data Management\\Code Examples\\Viya\\DIAP\\Git_Section\\diap\\macros\\wordcnt.sas\";\n%include \"/mnt/downloads/production_code/macros/wordcnt.sas\";\n \n%let upload_new_seq_of_files=/mnt/downloads/ZZ_Testing/top_folder/excel_2/excel_test.xlsx#\n/Public/DIAP/TestFiles/excelfile.xlsx# /mnt/downloads/ZZ_Testing/top_folder/excel_2/_DIAP_guided_execution.csv#\n/Public/DIAP/TestFiles/testdir1/TestData_w_blank_del.csv# /Public/DIAP/TestFiles/testdir2/TestData.csv;\n%let directory_path_seq=/mnt/downloads/ZZ_Testing/top_folder/excel_2/# /Public/DIAP/TestFiles/#\n/mnt/downloads/ZZ_Testing/top_folder/excel_2/# /Public/DIAP/TestFiles/testdir1/# /Public/DIAP/TestFiles/testdir2/;\n%let WOF2L_FNL_DS_NAME_4_ALL_EXTFILES=;\n%let WOF2L_DIAP_GUIDED_AUTOMATION=1;\n%let WOF2L_GDDAUTO_UPD_FLS_DEL_SEQ=# # #blank #;\n%let WOF2L_GDDAUTO_UPD_FLS_SHT_SEQ=Sheet1 #ByPlant # # #;\n%let WOF2L_GDDAUTO_UPD_FLS_CNTT_FLG=0 #1 #0 #1 #1;\n%let WOF2L_GDDAUTO_UPD_FLS_TGT_SEQ=#ByPlantData # #TestBlankCSVFile #;\n%let WOF2L_GDDAUTO_UPD_FLS_HDR_SEQ=1 #1 #1 #1 #1;\n \n \n%let upload_log_ds_name = work._upload_log_work2;\n \n%let substitute_string_seq = aeiouAEOIU;\n%log_dataset_4_upload_maintenance(\n&upload_log_ds_name,\n&upload_new_seq_of_files,\nld4um_directory_path_seq = &directory_path_seq,\nld4um_substitute_string_seq = &substitute_string_seq,\nld4um_max_name_length = 29,\nld4um_debug_mode = 1,\nld4um_check_modify_date = 1,\nld4um_stringseq_2_cutout_from_fn = ,\nld4um_force_upload_of_all_files = 0,\nld4um_fnl_tblname_from_sheetonly = 1,\nld4um_create_unique_target_tblnm = 0,\nld4um_delimiter = /,\nld4um_fnl_ds_name_4_all_extfiles = ,\nld4um_diap_guided_automation = 1,\nld4um_gddauto_upd_fls_del_seq = &WOF2L_GDDAUTO_UPD_FLS_DEL_SEQ,\nld4um_gddauto_upd_fls_sht_seq = &WOF2L_GDDAUTO_UPD_FLS_SHT_SEQ,\nld4um_gddauto_upd_fls_cntt_flg = &WOF2L_GDDAUTO_UPD_FLS_CNTT_FLG,\nld4um_gddauto_upd_fls_tgt_seq = &WOF2L_GDDAUTO_UPD_FLS_TGT_SEQ,\nld4um_gddauto_upd_fls_hdr_seq = &WOF2L_GDDAUTO_UPD_FLS_HDR_SEQ\n);\n \n \n*********************/\n \n \n/******************************************************************************\n \n%automated_profiling_4_DIAP\n________\n \n \n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro is used within DIAP to integrate the AUTOPROFILING app developed\nby Joao Olivera in SAS Portugal. It bridges the information coming from DIAP to the\nAutorprofiling application.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nap4d_table_2_prep_4_prof_seq: sequence of tables loaded to CAS separated by #\nap4d_dict_source_file_name: this parameter is not used at the moment\nap4d_dict_source_file_path: this parameter is not used at the moment\nap4d_prof_execution_option:\n2 options\nDICT_ONLY:  only fills in the default dictionary entries needed for the\nAUTOPROFILING app. The actual profiling needs to be triggered\nseparatedly.\nPROFILE:    This option fills in the default dictionary entries AND also\ntriggers the execution of creating the actual profiles.\nad4d_fcmp_execution:\n2 options\n1: used proc FCMP to execute commands\n0: uses traditional macro processing to execute commands\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200707  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n \n%macro automated_profiling_4_DIAP(\nap4d_table_2_prep_4_prof_seq = ,\nap4d_dict_source_file_name = ,\nap4d_dict_source_file_path = ,\nap4d_prof_execution_option = DICT_ONLY,\nad4d_fcmp_execution = 1,\nap4d_libname_4_dictionaries = ,\nap4d_viyaversion = 35\n);\n \n%let ViyaVersion = &ap4d_viyaversion;        /* constant used on the macro routine called | 34 = Viya 3.4 | 35 = Viya 3.5 */\n%let DataMartLib = &ap4d_libname_4_dictionaries;    /* constant used on the macro routine called | Data Mart Location */\n \n \n \n \n/* Including the Auto Profiling code that creates / populates the Data Mart*/\n \n%local\nap4d_table_count\nap4d_table_counter\nap4d_full_table_name\nap4d_col_seq\nap4d_ds_name\nap4d_ds_libname\nap4d_col_counter\nap4d_col_count\nap4d_col_name\nap4d_col_name_seq\nap4d_col_type_seq\n;\n%let ap4d_table_count = %wordcnt(&ap4d_table_2_prep_4_prof_seq, \"#\");\n \n \n%do ap4d_table_counter = 1 %to &ap4d_table_count;\n%let ap4d_full_table_name = %scan(&ap4d_table_2_prep_4_prof_seq, &ap4d_table_counter, \"#\");\n%let ap4d_ds_libname = %scan(&ap4d_full_table_name, 1, \".\");\n%let ap4d_ds_name = %scan(&ap4d_full_table_name, 2, \".\");\n%let ap4d_col_name_seq = ;\n%let ap4d_col_type_seq = ;\n%if \"%upcase(&ap4d_prof_execution_option)\" = \"DICT_ONLY\" or\n\"%upcase(&ap4d_prof_execution_option)\" = \"PROFILE\" %then\n%do;\n \n%let ap4d_final_table_name = &ap4d_ds_name;\n%let ap4d_cas_target_libname = DM_DtMrt;\n%let ap4d_max_varnumber_&ap4d_table_counter = ;\nproc sql noprint;\nselect\nnobs into :ap4d_max_varnumber_&ap4d_table_counter\nfrom dictionary.tables\nwhere\nkupcase(libname) = \"%upcase(&ap4d_ds_libname)\" and\nkupcase(memname) = \"%upcase(&ap4d_ds_name)\";\nquit;\n \n \n \n%do ap4d_var_counter = 1 %to &&ap4d_max_varnumber_&ap4d_table_counter;\n%local\nap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter\nap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter\n;\n%let ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter = ;\n%let ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter = ;\n%end;\n \nproc sql noprint;\ncreate table columns_4_prfl_&ap4d_table_counter as\nselect\nname,\ntype\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"%upcase(&ap4d_ds_libname)\" and\nkupcase(memname) = \"%upcase(&ap4d_ds_name)\"\n;\nquit;\n \n \n \ndata _null_;\nset columns_4_prfl_&ap4d_table_counter;\nsuffix = put(_n_, 6.);\ncall symput(cats(\"ap4d_varname_seq_&ap4d_table_counter._\", suffix), name);\ncall symput(cats(\"ap4d_type_seq_&ap4d_table_counter._\", suffix), type);\nrun;\n%do ap4d_var_counter = 1 %to &&ap4d_max_varnumber_&ap4d_table_counter;\n%let ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter = %trim(%left(&&ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter));\n%let ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter = %trim(%left(&&ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter));\n%end;\n%let ap4d_varname_seq_count = &&ap4d_max_varnumber_&ap4d_table_counter;\n%do ap4d_var_counter = 1 %to &&ap4d_max_varnumber_&ap4d_table_counter;\n%put INFORMATION: ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter = &&ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter;\n%put INFORMATION: ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter = &&ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter;\n%end;\n \n \nproc casutil;\ndroptable casdata = \"&ap4d_final_table_name\" incaslib = \"&ap4d_cas_target_libname\" quiet;\ndroptable casdata = \"&ap4d_final_table_name\" incaslib = \"&ap4d_cas_target_libname\" quiet;\nquit;\n \n \ndata &ap4d_cas_target_libname..&ap4d_ds_name;\nlength\n_Definition_Version        4\n_Definition_date            8\n_rawdta_lib_name            $40\n_rawdta_table_name         $40\n_column_2profile         $1\n_column_mr_group            $128\n_column_name                $40\n_column_name_matchcode    $64\n_column_label            $64\n_column_meaning             $256\n_column_func_meaning        $64\n_column_iscritical         $1\n_column_type                $32\n_column_datatype         $32\n_column_data_fmt            $64\n_column_decimals            8\n_column_pattern            $2048\n_column_minmax            $64\n_DQ_Resolution_Actions     $2048\n_DQ_locale                $10\n_DQ_match_level_names    3.0\n_DQ_match_level_addrs    3.0\n_Func_Validation            $128\n_Func_ValDesc            $2048\n_SID_model_name            $128\n_SID_model_table            $40\n_SID_model_caslib        $40\n_SID_model_params        $2048\n_max_sample_size            8\n;\n \n%do ap4d_var_counter = 1 %to &&ap4d_max_varnumber_&ap4d_table_counter;\n_column_2profile = \"Y\";\n_column_name = \"&&ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter\";\n_column_label = \"&&ap4d_varname_seq_&ap4d_table_counter._&ap4d_var_counter\";\n_column_iscritical = \"Y\";\n_column_type =\n%if \"%upcase(&&ap4d_type_seq_&ap4d_table_counter._&ap4d_var_counter)\" = \"CHAR\" %then\n%do;\n\"CHAR\"\n%end; %else\n%do;\n\"DOUBLE\"\n%end;\n;\n_column_datatype = _column_type;\n_max_sample_size = 250;\n_rawdta_lib_name = \"&ap4d_ds_libname\";\n_rawdta_table_name = \"&ap4d_ds_name\";\noutput;\n%end;\nrun;\n \nproc casutil;\npromote casdata=\"&ap4d_final_table_name\" incaslib=\"&ap4d_cas_target_libname\"\noutcaslib=\"&ap4d_cas_target_libname\" casout=\"&ap4d_final_table_name\" ;\nquit;\n \n \n%let ViyaVersion = 35;\n%let DataMartLib = DM_DtMrt;\n%let inSrcFile = &ap4d_ds_name..csv;\n%let inSrcFileType = CSV;\n%let inSrcTable = &ap4d_ds_name.;\n%let do_update_defs = YES;\n%if &ap4d_table_counter = &ap4d_table_count %then\n%do;\n%let save_to_disk = YES;\n%end; %else\n%do;\n%let save_to_disk = NO;\n%end;\n%let prfTableSuffix=_PRF;            /* Suffix to be used on the profile results table */\n%if &ad4d_fcmp_execution = 1 %then\n%do;\n \ndata _null_;\nretain     _inViyaVer _dmCasLib\n_inSrcFile _inSrcFileType _inSrcTable\n_do_update_defs _save_to_disk\n;\nlength     _inViyaVer         $4\n_dmCasLib        $40\n_inSrcFile         $40\n_inSrcFileType    $10\n_inSrcTable     $40\n_do_update_defs    $3\n_save_to_disk     $3\n \n_val    $80\nlen        8\nmaxlen    8\n;\n/* Looping throughout the JSON set */\n \n/* Initiation of variables and stuff */\n_dmCasLib = \"&DataMartLib\";\n_inViyaVer= &ViyaVersion;\n \n/* Making sure that the params content has no spaces / blanks and special characters\nalthough this should be already handled on the javascript gathering param values*/\n_inSrcFile = \"&ap4d_cas_target_libname..SASDS\";\n_inSrcFileType = \"&inSrcFileType\";\n_inSrcTable = \"&ap4d_final_table_name\";\n_do_update_defs = \"&do_update_defs\";\n_save_to_disk = \"&save_to_disk\";\n \nput \"======================| Run_Loading_Dictionary with |======================\";\n \nput _inViyaVer=\n_dmCasLib=\n_inSrcFile=\n_inSrcFileType=\n_inSrcTable=\n_do_update_defs=\n_save_to_disk=;\nput \"=========================| Calling the Program |==========================\";\nif (_inViyaVer > 0) then do;\ncall TblDict_Load_Dictionary(_inViyaVer,        _dmCasLib,\n_inSrcFile,         _inSrcTable,\n_do_update_defs,     _save_to_disk\n);\nend;\n \nrun;\n%end; %else\n%do;\n%put &=DataMartLib;\n%load_DTA_prf_rawdta_tabledict(\ninViyaVer      = &ViyaVersion,\ndmCasLib      = &DataMartLib,\ninSrcFile      = &ap4d_cas_target_libname..SASDS,\ninSrcTable      = &ap4d_final_table_name,\ndo_update_defs= &do_update_defs,\nsave_to_disk  = &save_to_disk\n);\n \n \n%end;\n \nproc casutil;\ndroptable casdata = \"&ap4d_final_table_name\" incaslib = \"&ap4d_cas_target_libname\" quiet;\nquit;\n \n%end; /** end if **/\n%end;\n%do ap4d_table_counter = 1 %to &ap4d_table_count;\n%let ap4d_full_table_name = %scan(&ap4d_table_2_prep_4_prof_seq, &ap4d_table_counter, \"#\");\n%let ap4d_ds_libname = %scan(&ap4d_full_table_name, 1, \".\");\n%let ap4d_ds_name = %scan(&ap4d_full_table_name, 2, \".\");\n \n%if \"%upcase(&ap4d_prof_execution_option)\" = \"PROFILE\" %then\n%do;\n%let ViyaVersion = 35;\n%let DataMartLib = DM_DtMrt;\n%let inSrcFile = &ap4d_ds_name..csv;\n%let inSrcFileType = CSV;\n%let prfTableSuffix=_PRF;\n%let inSrcTable = &ap4d_ds_name.;\n%let do_update_defs = YES;\n%if &ap4d_table_counter = &ap4d_table_count %then\n%do;\n%let save_to_disk = YES;\n%end; %else\n%do;\n%let save_to_disk = NO;\n%end;\n \n%if &ad4d_fcmp_execution = 1 %then\n%do;\ndata _null_;\nretain     _in_rawdta_lib _in_rawdta_table _in_prf_table_desc\n_dm_cas_lib _in_prf_table _do_append_master _save_to_disk\n;\nlength     _in_rawdta_lib         $40\n_in_rawdta_table     $40\n_in_prf_table        $40\n_dm_cas_lib            $40\n_in_prf_table_desc     $255\n_do_append_master     $3\n_save_to_disk         $3\n \n_val    $256\nlen        8\nmaxlen    8\n;\n_dm_cas_lib = \"&DataMartLib\";\n_inViyaVer= &ViyaVersion;\n \n/* Making sure that the params content has no spaces / blanks and special characters\nalthough this should be already handled on the javascript gathering param values*/\n_in_rawdta_lib = \"&ap4d_ds_libname\";\n_in_rawdta_table = strip(\"&ap4d_ds_name\");\n_in_prf_table_desc = \"Automated Profile prepared by DIAP\";\n_do_append_master = \"&do_update_defs\";\n_save_to_disk = \"&save_to_disk\";\n \n \nput \"======================| Run_Auto_Profiling |======================\";\n/* Generating the Profiling Table Name =\nraw data table name plus the Suffix defined by 'prfTableSuffix' */\n_val = kcompress(kupcase(_in_rawdta_table));\nlen = klength(_val);\nmaxlen = 32 - klength(\"_PRF\");\nif len gt maxlen then  _in_prf_table = strip(ksubstrn(_val, 1, maxlen) || \"_PRF\");\nelse                   _in_prf_table = strip(ksubstrn(_val, 1, len) || \"_PRF\");\n \nput _in_rawdta_lib=\n_in_rawdta_table=\n_in_prf_table=\n_in_prf_table_desc=\n_dm_cas_lib=\n_do_append_master=\n_save_to_disk=;\nput \"======================| Calling the Program |=======================\";\ncall DQ_AutoProfile_Run(\n_in_rawdta_lib,\n_in_rawdta_table,\n_in_prf_table,\n_in_prf_table_desc,\n_dm_cas_lib,\n_do_append_master,\n_save_to_disk\n);\n \nrun;\n%end; %else\n%do;\n%let ap4d_ds_name = %trim(%left(%upcase(&ap4d_ds_name));\n%let ap4d_length_ds_name = %length(&ap4d_ds_name);\n%let ap4d_legnth_prefix = %length(&prfTableSuffix);\n%let ad4d_max_length_ds_name = %eval(32 - &ap4d_legnth_prefix);\n%if &ap4d_length_ds_name gt &ad4d_max_length_ds_name %then\n%do;\n%let in_prf_table = %trim(%left(%substr(&ap4d_ds_name, 1, &ad4d_max_length_ds_name)))&prfTableSuffix;\n%end; %else\n%do;\n%let in_prf_table = %trim(%left(%substr(&ap4d_ds_name, 1, &ap4d_length_ds_name)))&prfTableSuffix;\n%End;\n \n%let in_prf_tabl = %trim(%left((&in_prf_tabl)));\n \n%do_profile_results2(\nin_rawdta_lib        = &ap4d_ds_libname,\nin_rawdta_table   = &ap4d_ds_name,\nin_prf_table        = &in_prf_table,\nin_prf_table_desc = Automated Profile prepared by DIAP,\ndm_cas_lib        = &DataMartLib,\ndo_append_master  = &do_update_defs,\nsave_to_disk        = &save_to_disk\n);\n%end;\n%end;\n%end; /**     end of ap4d_table_counter  **/\n%mend automated_profiling_4_DIAP;\n \n/** FOR TESTING ***\noption mprint source notes;\n%include \"/mnt/downloads/production_code/macros/wordcnt.sas\";\nOPTIONS cashost=\"&_CASHOST_\" casport=&_CASPORT_;\ncas;\ncaslib _all_ assign;\nlibname test \"/mnt/downloads/blast_covid/data/100_Loading\";\n%let table_2_prep_4_prof_seq = test._variable_dictionary_bl_load#test.first_blast#test.first_blast_expanded1#test._upload_log_bl_load;\n%let dict_source_file_name = ;\n%let profile_option = PROFILE;\n%let dict_source_file_path = /Public/DM_Assets/SAS_DQ_AUTOPROFILE/Imports;\n%automated_profiling_4_DIAP(\nap4d_table_2_prep_4_prof_seq = &table_2_prep_4_prof_seq,\nap4d_dict_source_file_name = &dict_source_file_name,\nap4d_dict_source_file_path = &dict_source_file_path,\nap4d_prof_execution_option = &profile_option\n);\n \n*********************/\n/******************************************************************************\n \n%wrapper_import_files_into_viya\n________\n \n \nthis is the core wrapper of DIAP.\nIt takes in all the parameters and prepares and starts the process\n- to find the files in the directories\n- process the files found in the directories\n- manages the metadata of those files and cleans up the metadata\n- triggers the profiling execution .\n \n______________________________________________________________________________\n \n \nUSAGE:        see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nDIAP can handle a whole variety of external files to be uploaded into SAS/CAS.\n \n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \nwifiv_inRootDir:\ndefault: /mnt/downloads/ZZ_Testing/top_folder/\nThis is the path to the top level directory that DIAP should use to start looking for\nfiles that should be uploaded.\nwifiv_inExtension:\ndefault: *\nprovide which extensions to look for. Choose * (default) to look for any extensions.\nwifiv_inTargetLib:\ndefault: work\nprovide a SAS or CAS libname where the files that are found in the directory should be uploaded to.\nThe system can handle SAS or CAS libnames.\nwifiv_inUpldLogDS:\nThis parameter is not used at this point.\nwifiv_inSbstStrgSeq:\ndefault: aeiouAEIOU\nThis sequence of characters determine which characters will be omitted if the target file name or variable name\nneeds to be truncated.\nwifiv_meta_centralized:\ndefault: 1\n1: if set to 1, then all the information will be centrally stored in the library as specified in wifiv_libname_meta_centralized\nlibname. The overview of the uploaded tables are stored under\n_Upload_log ,\nand the overview of the variables created is stored in this table:\n_Variable_Dictionary\n0: if set to 0, then the metainformation about the upload process is stored within the chosen target library\nas specified in wifiv_inTargetLib.\nThe overview of the uploaded tables are stored under\n_Upload_log_&wifiv_inTargetLib,\nand the overview of the variables created is stored in this table:\n_Variable_Dictionary_&wifiv_inTargetLib\nwifiv_libname_meta_centralized:\ndefault: DM_DtMrt\nthis parameter determines the library name where the metainformation about this process is stored in case a\ncentralized location is desired.\nwifiv_max_table_name_length:\ndefault: 27\ndetermines the maximum table length allowed after truncation of the name. It is recommended to have a value less than\n30 for sure, since the underscore plus a counter is added in case the truncated name is the name for multiple source files.\nwifiv_debug_mode:\ndefault: 0\n1: writes out additional detail information about the process to the log window.\n0: no additional information is written out.\nwifiv_shp_enrich_with_zip:\ndefault: 0\n0: Shape files are read in as is.\n1: additional zip information is merged into the SHAPE files assuming that they contain lattitude and longitude\ninformation. It also needs a specific lookup table for the process to be available.\nwifiv_do_profiling:\ndefault: NO\nNO: no additional processing is done for profiling purposes. This is also automatically chosen if the underlying\nparameters are not set that are needed for the processing of profiling.\nDICT_ONLY:  only fills in the default dictionary entries needed for the\nAUTOPROFILING app. The actual profiling needs to be triggered separatedly.\nPROFILE:    This option fills in the default dictionary entries AND also\ntriggers the execution of creating the actual profiles.\nThe last 2 options require the \"Autoprofiling\" application to be included with DIAP. For details check\nthe installation instructions.\nwifiv_profiling_dict_location:\nThis parameter is NOT used at this point.\nwifiv_profiling_code_location:\nThis parameter is NOT used at this point.\n \n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200406  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n%macro wrapper_import_files_into_viya(\nwifiv_inRootDir        = /mnt/downloads/ZZ_Testing/top_folder/,\nwifiv_inExtension   = *,\nwifiv_inTargetLib        = work,\nwifiv_inUpldLogDS = _NONE_,\nwifiv_inSbstStrgSeq        = aeiouAEIOU,\nwifiv_meta_centralized = 1,\nwifiv_libname_meta_centralized = DM_DtMrt,\nwifiv_max_table_name_length = 27,\nwifiv_debug_mode = 0,\nwifiv_shp_enrich_with_zip = 0,\nwifiv_do_profiling = NO,\nwifiv_profiling_dict_location = ,\nwifiv_profiling_code_location = ,\nwifiv_path_2_python_shape_script = ,\nwifiv_csv_big_data_mode = 0,\nwifiv_write_log_into_file = 1,\nwifiv_provide_default_log_path = ,\nwifiv_drop_missing_vars = 0,\nwifiv_stringseq_2_cutout_from_fn = ,\nwifiv_stringseq_2_cutout_from_vn = ,\nwifiv_prefix_4_suspicious_src_fl = CHK,\nwifiv_max_lgth_of_suspicious_str = 4,\nwifiv_check_csv_4_num = 0,\nwifiv_macro_varname_cashost = controller.viya.sas,\nwifiv_macro_varname_casport = 5570,\nwifiv_viyaversion = 35,\nwifiv_install_mode_in_SASContent = 0,\nwifiv_chck_txt_fl_4_spcl_chrct = 0,\nwifiv_spcl_chrctr_sq2chck_in_hex = 0A#0D,\nwifiv_spcl_chrct_chck_rplcmnt_hx = 00,\nwifiv_make_imported_data_prsstnt = 1,\nwifiv_force_upload_of_all_files = 0,\nwifiv_traverse_directories = 1,\nwifiv_skip_files_start_with_seq = ,\nwifiv_skip_files_end_with_seq = ,\nwifiv_fnl_tblname_from_sheetonly = 0,\nwifiv_create_unique_target_tblnm = 1,\nwifiv_delimiter = /,\nwifiv_chck_4_spcl_char_in_vars = 1,\nwifiv_fnl_ds_name_4_all_extfiles = ,\nwifiv_diap_guided_auto_fl_loc =\n);\n \n%put INFORMATION GENERAL: &=wifiv_inExtension;\n%put INFORMATION GENERAL: &=wifiv_inTargetLib;\n%put INFORMATION GENERAL: &=wifiv_inUpldLogDS;\n \n%local\nwifiv_temp_file\nwifiv_temp_path_length\nwifiv_temp_file_length\nwifiv_temp_path_only\nwifiv_diap_gdd_auto_fl_loc_src\nwifiv_diap_gdd_auto_fl_loc_only\nwifiv_temp_count\nwifiv_diap_guided_automation\nwifiv_gddauto_upd_fls_del_seq\nwifiv_gddauto_upd_fls_dir_seq\nwifiv_gddauto_upd_fls_sht_seq\nwifiv_gddauto_upd_fls_cntt_flg\nwifiv_gddauto_upd_fls_tgt_seq\n;\n \n%let fixed_width_file_definition_name = _DIAP_Special_File_Definition.csv;\n \n%let wifiv_diap_gdd_auto_fl_loc_src = ;\n%let wifiv_diap_gdd_auto_fl_loc_only = ;\n%if \"&wifiv_diap_guided_auto_fl_loc\" = \"\" %then\n%do;\n%let wifiv_diap_guided_automation = 0;\n%let wifiv_gddauto_upd_fls_del_seq = ;\n%let wifiv_gddauto_upd_fls_dir_seq = ;\n%let wifiv_gddauto_upd_fls_sht_seq = ;\n%let wifiv_gddauto_upd_fls_hdr_seq = ;\n%let wifiv_gddauto_upd_fls_cntt_flg = ;\n%let wifiv_gddauto_upd_fls_tgt_seq = ;\n \n%let length = %length(&root_directory);\n%let last_char = %substr(&root_directory,&length, 1);\n \n%if \"&last_char\" ne \"&wifiv_delimiter.\" %then\n%let root_directory = &root_directory.&wifiv_delimiter.;\n \n \n%end; %else\n%do;\n \n%let wifiv_diap_gdd_auto_fl_loc_src = %scan(&wifiv_diap_guided_auto_fl_loc, 1, \":\");\n%let wifiv_gdd_src_length = %length(&wifiv_diap_gdd_auto_fl_loc_src);\n%let wifiv_gdd_loc_length = %length(&wifiv_diap_guided_auto_fl_loc);\n%if &wifiv_debug_mode = 1 %then\n%put &=wifiv_diap_guided_auto_fl_loc;\n%if &wifiv_debug_mode = 1 %then\n%put &=wifiv_gdd_src_length;\n%if &wifiv_debug_mode = 1 %then\n%put &=wifiv_diap_gdd_auto_fl_loc_src;\n%if &wifiv_debug_mode = 1 %then\n%put &=wifiv_gdd_loc_length;\n \n%let wifiv_diap_gdd_auto_fl_loc_only = %substr(&wifiv_diap_guided_auto_fl_loc, %eval(&wifiv_gdd_src_length + 2));\n \n%let do_processing = 1;\n%if %upcase(\"&wifiv_diap_gdd_auto_fl_loc_src\") eq \"SASSERVER\" %then\n%do;\nfilename _DIAP_GA \"&wifiv_diap_gdd_auto_fl_loc_only\";\n%end; %else\n%do;\n%let wifiv_temp_file = %scan(&wifiv_diap_gdd_auto_fl_loc_only, -1, \"&wifiv_delimiter\");\n%let wifiv_temp_path_length = %length(&wifiv_diap_gdd_auto_fl_loc_only);\n%let wifiv_temp_file_length = %length(&wifiv_temp_file);\n%let wifiv_temp_path_only = %substr(&wifiv_diap_gdd_auto_fl_loc_only, 1, %eval(&wifiv_temp_path_length - &wifiv_temp_file_length));\n \nfilename _DIAP_GA\nfilesrvc\nfolderpath     = \"&wifiv_temp_path_only\"\nfilename    = \"&wifiv_temp_file\";\n%end;\n%let wifiv_diap_guided_automation = 1;\n%let wifiv_gddauto_upd_fls_del_seq = ;\n%let wifiv_gddauto_upd_fls_dir_seq = ;\n%let wifiv_gddauto_upd_fls_sht_seq = ;\n%let wifiv_gddauto_upd_fls_cntt_flg = ;\n%let wifiv_gddauto_upd_fls_hdr_seq = ;\n%let wifiv_gddauto_upd_fls_tgt_seq = ;\n%let wifiv_ga_full_filename_path_seq = ;\n%let wifiv_fllist_contains_fixed_def = 0;\n \nproc import\ndatafile = _DIAP_GA\nout = work._DIAP_guided_execution_order\ndbms=dlm replace;\ndelimiter = \",\" ;\ndatarow = 2;\nguessingrows = 200;\ngetnames=yes;\nquit;\n \n%let wifiv_temp_count = 0;\n%let wifiv_temp_target_count = 0;\n%let wifiv_temp_header_flag_count = 0;\n \nproc sql;\nselect\ncount(name)\ninto :wifiv_temp_count\nfrom dictionary.columns\nwhere kupcase(libname) = \"WORK\" and\nkupcase(memname) = \"_DIAP_GUIDED_EXECUTION_ORDER\" and\nkupcase(name) = \"DELIMITER_FOR_TEXT_FILES\";\nquit;\nproc sql;\nselect\ncount(name)\ninto :wifiv_temp_target_count\nfrom dictionary.columns\nwhere kupcase(libname) = \"WORK\" and\nkupcase(memname) = \"_DIAP_GUIDED_EXECUTION_ORDER\" and\nkupcase(name) = \"TARGET_TABLE_NAME\";\nquit;\nproc sql;\nselect\ncount(name)\ninto :wifiv_temp_header_flag_count\nfrom dictionary.columns\nwhere kupcase(libname) = \"WORK\" and\nkupcase(memname) = \"_DIAP_GUIDED_EXECUTION_ORDER\" and\nkupcase(name) = \"COLUMN_NAMES_IN_FIRST_ROW\";\nquit;\nproc sql;\nselect\ncount(full_file_name)\ninto\n:wifiv_fllist_contains_fixed_def\nfrom work._DIAP_guided_execution_order\nwhere kupcase(full_file_name) contains %upcase(\"&fixed_width_file_definition_name\");\nquit;\n \ndata work._DIAP_guided_execution_order;\nlength target_table_name $64.\ndelimiter_for_text_files $64.\nsheet_xml_json_tablename $64.;\nset work._DIAP_guided_execution_order (rename=(delimiter_for_text_files = del_ftf_old\ntarget_table_name = ttn_old\nsheet_xml_json_tablename = sheet_xjt_old));\nfile_name = kscan(full_file_name, -1, \"&wifiv_delimiter\");\ndrop\nfile_name_length\nfull_name_length\ndel_ftf_old\nttn_old\nsheet_xjt_old\n;\nif missing(ttn_old) then\ntarget_table_name = \"_DIAP_NA_\";\nelse\ntarget_table_name = ttn_old;\nif missing(del_ftf_old) then\ndelimiter_for_text_files = \"_DIAP_NA_\";\nelse\ndelimiter_for_text_files = del_ftf_old;\nif missing(sheet_xjt_old) then\nsheet_xml_json_tablename = \"_DIAP_NA_\";\nelse\nsheet_xml_json_tablename = sheet_xjt_old;\n%if &wifiv_temp_header_flag_count ne 0 %then\n%do;\nif missing(column_names_in_first_row) then\ncolumn_names_in_first_row = 1;\n%end;\nif missing(is_in_SAS_Content_flag) then\nis_in_SAS_Content_flag = 0;\nfile_name_length = klength(file_name);\nfull_name_length = klength(full_file_name);\ndirectory_path = ksubstr(full_file_name, 1, full_name_length - file_name_length);\nrun;\n \n \n \n%end;\n \n%let wifiv_root_dir_src = %upcase(%scan(&wifiv_inRootDir, 1, \":\"));\n%let wifiv_root_is_sas_content = 0;\n%if %upcase(\"&wifiv_root_dir_src\") eq \"SASCONTENT\" %then\n%do;\n%let root_directory = %scan(&wifiv_inRootDir, 2, \":\");\n%let wifiv_root_is_sas_content = 1;\n%end; %else\n%do;\n%if %upcase(\"&wifiv_root_dir_src\") eq \"SASSERVER\" %then\n%do;\n%let root_directory = %scan(&wifiv_inRootDir, 2, \":\");\n%end; %else\n%do;\n%let root_directory = &wifiv_inRootDir;\n%end;\n%end;\n%let extension = &wifiv_inExtension;\n%let target_libname = &wifiv_inTargetLib;\n \n/****\nmax_table_name_length:\nthis determines the maximum allowed table name length.\nE.g. in the case of uploading XLSX files to SAS94, the final table name\nis built by concatenating Excel-filename and Sheetname.\nSo this can easily lead to a datasetname that is too long.\nAlso take into consideration that the concatenated name for multiple tables could\npotentially the same in the abbreviated form.\nThe system checks for that and adds a counter to the table name.\nSo leave at least 2 characters for a counter.\n****/\n%let max_table_name_length = &wifiv_max_table_name_length;\n/****\nsubstitute_string_seq:\nIf the target table name is too long, this string determines which\ncharacters are taken out from the targeet name to shorten the name further,\nbefore the truncation process kicks in.\nE.g. when substitute_string_seq = aeAEoO\nthen a table name of\n\"ThisIsAVeryLongTableNameThatIsTooLong\" and a\nmax_table_name_length = 29\nwould be first changed to the following:\n\"ThisIsVryLngTblNmThtIsTLng\" which would be short enough\n****/\n%let substitute_string_seq = &wifiv_inSbstStrgSeq.;\n \n%let meta_centralized = &wifiv_meta_centralized;\n%let libname_meta_centralized = &wifiv_libname_meta_centralized;\n \n%let debug_mode = &wifiv_debug_mode;\n%let shp_enrich_with_zip = &wifiv_shp_enrich_with_zip;\n/**************\nPlease change all parameters above this section as needed.\nSee the meaning of the keywords in the headersection.\nDon't change anything below this section!!\n***************/\n \n \n%let wifiv_clean_up_worklib_inbetween = 1;\n \n%if &meta_centralized = 1 %then\n%do;\n%let upload_log_ds = &libname_meta_centralized.._UPLOAD_LOG;\n%let variable_dict_ds = &libname_meta_centralized.._VARIABLE_DICTIONARY;\n%end; %else\n%do;\n%let upload_log_ds = &target_libname.._UPLOAD_LOG_%upcase(&target_libname.);\n%let variable_dict_ds = &target_libname.._VARIABLE_DICTIONARY_%upcase(&target_libname.);\n%end;\n \n%let wifiv_target_environment = ;\n \nproc sql noprint;\nselect distinct(engine)\ninto :wifiv_target_environment\nfrom dictionary.libnames\nwhere kupcase(libname) = \"%upcase(&wifiv_inTargetLib)\"\n;\nquit;\n \n \n%if \"%upcase(&wifiv_target_environment)\" eq \"CAS\" %then\n%do;\n%if \"&wifiv_macro_varname_cashost\" ne  \"\" %then\n%do;\noptions cashost=\"&wifiv_macro_varname_cashost\" casport=&wifiv_macro_varname_casport;\n%end;\n/*    cas DIAP_PRC;*/\ncaslib _all_ assign;\n%end;\n/***\nCheck that last characters is either / or \\\n***/\n \n \n%if \"&wifiv_provide_default_log_path\" eq \"\" %then\n%let wifiv_write_log_into_file = 0;\n \n \n%if &wifiv_write_log_into_file = 1 %then\n%do;\n%let wifiv_timestamp = ;\ndata _null_;\ntodaysdate = today();\nyear = year(todaysdate);\nmonth = put(month(todaysdate), z2.);\nday = put(day(todaysdate), z2.);\nnowtime = time();\nhour = put(hour(nowtime), z2.);\nminute = put(minute(nowtime), z2.);\nput minute;\ntimestamp = trim(left(year))||trim(left(month))||trim(left(day))||\"_\"||trim(left(hour))||trim(left(minute));\ncall symput('wifiv_timestamp', timestamp);\nrun;\n%let wifiv_timestamp = %trim(%left(&wifiv_timestamp));\n \n%if \"&wifiv_provide_default_log_path\" eq \"\" %then\n%let wifiv_provide_default_log_path = %trim(%left(&root_directory));\n \n%if &wifiv_install_mode_in_SASContent = 0 %then\n%do;\nproc printto\nlog=\"&wifiv_provide_default_log_path.&target_libname._&wifiv_timestamp._DIAP_upload_run.log\";\nquit;\n%end; %else\n%if &wifiv_install_mode_in_SASContent = 1 %then\n%do;\nfilename logfile\nfilesrvc\nfolderpath = \"&wifiv_provide_default_log_path\"\nfilename = \"&target_libname._&wifiv_timestamp._DIAP_upload_run.log\";\n \nproc printto\nlog=logfile new;\nquit;\n%end;\n \n%end;\n/***\noverview_ds:\nprovide the location of the SAS dataset, that contains the list\nof all found files in the directory.\n***/\n%let overview_ds = work._file_overview;\n%let batchsize = 100;\n \nproc datasets lib=%scan(&overview_ds, 1, '.');\ndelete %scan(&overview_ds, 2, '.');\nquit;\n \n/***\nIn case CUSTOM is selected make sure that to check for the files, all the extensions are checked for\n****/\n%let extension_pass_through = &extension;\n%if \"%upcase(&extension)\" eq \"CUSTOM\" %then\n%let extension_pass_through = *;\n \n%if &wifiv_diap_guided_automation = 1 %then\n%do;\n \ndata &overview_ds;\nset work._DIAP_guided_execution_order;\nrun;\n \n%end; %else\n%do;\n%list_all_files(\n&root_directory,\n&extension_pass_through,\n&overview_ds,\nlaf_debug_mode = &debug_mode,\nlaf_traverse_directories = &wifiv_traverse_directories,\nlaf_directory_separator = &wifiv_delimiter.,\nlaf_is_sas_content_directory = &wifiv_root_is_sas_content\n);\n%end;\n%if \"%upcase(&wifiv_do_profiling)\" = \"DICT_ONLY\" or\n\"%upcase(&wifiv_do_profiling)\" = \"PROFILE\" or\n\"%upcase(&wifiv_do_profiling)\" = \"PROFILE_ONLY_NO_UPLOAD\" %then\n%do;\n%if \"&wifiv_profiling_dict_location\" eq \"\" %then\n%do;\n%let wifiv_do_profiling = NO;\n%end; %else\n%do;\nfilename PrfRslts     /* limited to 8 characters */\nfilesrvc     /* SAS Viya Service to load the code stored within Viya */\nfolderpath     = \"&prfl_cd_lctn_in_content_area\"\nfilename    = 'DQ_AutoDataProfiling_Exec_4.sas';\n%include PrfRslts;\nfilename _TblDict     /* limited to 8 characters */\nfilesrvc     /* SAS Viya Service to load the code stored within Viya */\nfolderpath     = \"&prfl_cd_lctn_in_content_area\"\nfilename    = 'DQ_AutoDataProfiling_TableDict_4.sas';\n%include _TblDict;\n%end;\n%end;\n \n \n \n%if %sysfunc(exist(&overview_ds)) ne 0 %then\n%do;\n \n/****\nprepare for fixed-width file import\n****/\n%let diap_fixed_width_file_def_seq = ;\n%let fixed_file_ds_name_4_processing = ;\n \n%local\nwifiv_skip_files_start_count\nwifiv_skip_files_end_count\n;\n \nproc sql;\nselect\nfull_file_name\ninto\n:diap_fixed_width_file_def_seq separated by ' #'\nfrom\n&overview_ds\nwhere\nkupcase(file_name) = \"%upcase(&fixed_width_file_definition_name)\"\n;\nquit;\n%let fixed_file_width_def_count = %wordcnt(&diap_fixed_width_file_def_seq, '#');\n%put &=fixed_file_width_def_count;\n \n \n%if \"&wifiv_skip_files_start_with_seq\" ne \"\" or\n\"&wifiv_skip_files_end_with_seq\" ne \"\" %then\n%do;\n%let wifiv_skip_files_start_count = %wordcnt(&wifiv_skip_files_start_with_seq, \"#\");\n%let wifiv_skip_files_end_count = %wordcnt(&wifiv_skip_files_end_with_seq, \"#\");\n \n \n \ndata &overview_ds.;\nset &overview_ds;\nlength_name = klength(file_name);\ndrop length_name;\n%do wifiv_skip_counter = 1 %to &wifiv_skip_files_start_count;\n%let wifiv_skip_files_start_with = %scan(&wifiv_skip_files_start_with_seq, &wifiv_skip_counter, \"#\");\n%let wifiv_skip_files_start_length = %length(&wifiv_skip_files_start_with);\nif length_name >= &wifiv_skip_files_start_length then\ndo;\nif kupcase(ksubstr(file_name, 1, &wifiv_skip_files_start_length)) = %upcase(\"&wifiv_skip_files_start_with\") then delete;\nend;\n%end;\n%do wifiv_skip_counter = 1 %to &wifiv_skip_files_end_count;\n%let wifiv_skip_files_end_with = %scan(&wifiv_skip_files_end_with_seq, &wifiv_skip_counter, \"#\");\n%let wifiv_skip_files_end_length = %length(&wifiv_skip_files_end_with);\nif length_name >= &wifiv_skip_files_end_length then\ndo;\nif kupcase(ksubstr(file_name, length_name - &wifiv_skip_files_end_length + 1, &wifiv_skip_files_end_length)) = %upcase(\"&wifiv_skip_files_end_with\") then delete;\nend;\n%end;\nrun;\n%end;\n \n%if &fixed_file_width_def_count ne 0 %then\n%do;\n%do fixed_file_width_def_counter = 1 %to &fixed_file_width_def_count;\n%let diap_fixed_width_file_def = %scan(&diap_fixed_width_file_def_seq, &fixed_file_width_def_counter, '#');\nproc import\ndatafile=\"&diap_fixed_width_file_def\"\nout=work._fixed_file_definition_&fixed_file_width_def_counter\ndbms=dlm replace;\ndelimiter = \",\" ;\ndatarow = 2;\nguessingrows = 200;\ngetnames=yes;\nquit;\n%end;\n%let fixed_file_ds_name_4_processing = work._fixed_file_definition_all_comb;\ndata &fixed_file_ds_name_4_processing;\nset\n%do fixed_file_width_def_counter = 1 %to &fixed_file_width_def_count;\nwork._fixed_file_definition_&fixed_file_width_def_counter\n%end;\n;\nrun;\n \nproc sort\ndata = &fixed_file_ds_name_4_processing nodupkey;\nby\nfilename\ndirectory\nvariable_name\n;\nquit;\n \ndata work._fixed_file_definition_red;\nset &fixed_file_ds_name_4_processing;\nby filename directory;\nif first.directory;\nrun;\n%let ind_fn_4_fixed_width_seq = ;\n%let is_full_fn_indicator_seq = ;\n%let ind_dir_4_fixed_width_seq = ;\n \nproc sql;\nselect\nfilename,\ndirectory\ninto\n:ind_fn_4_fixed_width_seq separated by ' #',\n:ind_dir_4_fixed_width_seq separated by ' #'\nfrom\nwork._fixed_file_definition_red\n;\nquit;\n%let fixed_filename_count = %wordcnt(&ind_fn_4_fixed_width_seq, '#');\n/****\nnow check for how many fixed file are occuring\n*****/\n%if &wifiv_debug_mode = 1 %then\n%do;\ndata &overview_ds._fxd_backup;\nset &overview_ds;\nrun;\n%end;\ndata &overview_ds._fixed_width\n&overview_ds (drop = filename_as_in_fixed_width_def);\nlength\nfilename_as_in_fixed_width_def $100.;\nset &overview_ds;\ndrop switch;\nswitch = 0;\n%do fixed_filename_counter = 1 %to &fixed_filename_count;\n%let filename = %scan(&ind_fn_4_fixed_width_seq, &fixed_filename_counter, '#' );\n%let fixed_file_dir = %scan(&ind_dir_4_fixed_width_seq, &fixed_filename_counter, '#' );\n%let filename_length = %length(%trim(%left(&filename)));\nif ksubstr(kupcase(file_name), 1, &filename_length) = \"%trim(%left(%upcase(&filename)))\" and\ntrim(left(kupcase(directory_path))) = \"%trim(%left(%upcase(&fixed_file_dir)))\" then\ndo;\nfilename_as_in_fixed_width_def = \"%trim(%left(&filename))\";\nswitch = 1;\nend;\n%end;\nif switch then\noutput &overview_ds._fixed_width;\nelse\noutput &overview_ds;\nrun;\n \n \n \n \nproc sort\ndata = &fixed_file_ds_name_4_processing nodupkey;\nby\nfilename\ndirectory\nvariable_start_position\nvariable_name\n;\nquit;\n \n \ndata work._loop_overview_ds_fwf;\nset &overview_ds._fixed_width;\nunique_id = _n_;\nrun;\n \n%let number_of_rows_fwf = 0;\nproc sql noprint;\nselect\nnobs\ninto\n:number_of_rows_fwf\nfrom\ndictionary.tables\nwhere\nlibname = \"WORK\" and\nmemname = \"_LOOP_OVERVIEW_DS_FWF\";\nquit;\n \n%if &number_of_rows_fwf ne 0 %then\n%do;\n \n%let mod_fwf = %sysfunc(mod(&number_of_rows_fwf,&batchsize));\n%let loop_size_fwf = %eval(&number_of_rows_fwf / &batchsize);\n \n%do batch_counter_fwf = 0 %to &loop_size_fwf;\n%let full_filename_path_seq_fwf = ;\n%let directory_path_seq_fwf = ;\n%let fn_as_in_fixed_width_def_seq = ;\nproc sql noprint;\nselect\nfull_file_name,\ndirectory_path,\nfilename_as_in_fixed_width_def\ninto\n:full_filename_path_seq_fwf separated by \"# \",\n:directory_path_seq_fwf separated by \"# \",\n:fn_as_in_fixed_width_def_seq separated by \"# \"\nfrom\nwork._loop_overview_ds_fwf\nwhere\nunique_id gt %eval(&batch_counter_fwf*&batchsize) and\nunique_id le %eval(%eval(&batch_counter_fwf +1)*&batchsize);\nquit;\n \n%if &wifiv_clean_up_worklib_inbetween = 1 %then\n%do;\nproc datasets lib = work nolist;\ndelete\nvarnames_:\nget_table_info_:\n;\nquit;\n%end;\n \n%put INFORMATION GENERAL: This is batch # &batch_counter_fwf &=full_filename_path_seq_fwf;\n%put INFORMATION GENERAL: This is batch # &batch_counter_fwf &=directory_path_seq_fwf;\n%write_out_files_2_libname(\n&full_filename_path_seq_fwf,\n&target_libname,\n&fn_as_in_fixed_width_def_seq,\nwof2l_directory_path_seq = &directory_path_seq_fwf,\nwof2l_upload_log_ds = &upload_log_ds,\nwof2l_shp_enrich_with_zip = &shp_enrich_with_zip,\nwof2l_variable_dict_dataset = &variable_dict_ds,\nwof2l_debug_mode = &debug_mode,\nwof2l_max_name_length = &max_table_name_length,\nwof2l_substitute_string_seq = &substitute_string_seq,\nwof2l_fixed_file_definition_ds = &fixed_file_ds_name_4_processing ,\nwof2l_do_profiling = &wifiv_do_profiling,\nwof2l_profile_dict_location = &wifiv_profiling_dict_location,\nwof2l_path_2_python_shape_script = &wifiv_path_2_python_shape_script,\nwof2l_drop_missing_vars = &wifiv_drop_missing_vars,\nwof2l_stringseq_2_cutout_from_fn = &wifiv_stringseq_2_cutout_from_fn,\nwof2l_stringseq_2_cutout_from_vn = &wifiv_stringseq_2_cutout_from_vn,\nwof2l_prefix_4_suspicious_src_fl = &wifiv_prefix_4_suspicious_src_fl,\nwof2l_max_lgth_of_suspicious_str = &wifiv_max_lgth_of_suspicious_str,\nwof2l_check_csv_4_num = &wifiv_check_csv_4_num,\nwof2l_viyaversion = &wifiv_viyaversion,\nwof2l_chck_txt_fl_4_spcl_chrct = &wifiv_chck_txt_fl_4_spcl_chrct,\nwof2l_spcl_chrctr_sq2chck_in_hex = &wifiv_spcl_chrctr_sq2chck_in_hex,\nwof2l_spcl_chrct_chck_rplcmnt_hx = &wifiv_spcl_chrct_chck_rplcmnt_hx,\nwof2l_make_imported_data_prsstnt = &wifiv_make_imported_data_prsstnt,\nwof2l_force_upload_of_all_files = &wifiv_force_upload_of_all_files,\nwof2l_skip_files_start_with_seq = &wifiv_skip_files_start_with_seq ,\nwof2l_skip_files_end_with_seq = &wifiv_skip_files_end_with_seq,\nwof2l_fnl_tblname_from_sheetonly = &wifiv_fnl_tblname_from_sheetonly,\nwof2l_create_unique_target_tblnm = &wifiv_create_unique_target_tblnm,\nwof2l_delimiter = &wifiv_delimiter,\nwof2l_chck_4_spcl_char_in_vars = &wifiv_chck_4_spcl_char_in_vars,\nwof2l_fnl_ds_name_4_all_extfiles = &wifiv_fnl_ds_name_4_all_extfiles,\nwof2l_diap_guided_automation = &wifiv_diap_guided_automation,\nwof2l_gddauto_upd_fls_del_seq = &wifiv_gddauto_upd_fls_del_seq,\nwof2l_gddauto_upd_fls_sht_seq = &wifiv_gddauto_upd_fls_sht_seq,\nwof2l_gddauto_upd_fls_cntt_flg = &wifiv_gddauto_upd_fls_cntt_flg,\nwof2l_gddauto_upd_fls_hdr_seq = &wifiv_gddauto_upd_fls_hdr_seq,\nwof2l_gddauto_upd_fls_tgt_seq = &wifiv_gddauto_upd_fls_tgt_seq\n);\n%end;\n%end;\n%else\n%put INFORMATION ALERT: Did NOT find any matching definitions in the Special File Definition;\n%let fixed_file_ds_name_4_processing = ;\n%end; /* end of Fixed width check/processing */\n \n \n \ndata work._loop_overview_ds;\nset &overview_ds;\nunique_id = _n_;\nrun;\n \n%let number_of_rows = 0;\nproc sql noprint;\nselect\nnobs\ninto\n:number_of_rows\nfrom\ndictionary.tables\nwhere\nlibname = \"WORK\" and\nmemname = \"_LOOP_OVERVIEW_DS\";\nquit;\n \n%let mod = %sysfunc(mod(&number_of_rows,&batchsize));\n%let loop_size = %eval(&number_of_rows / &batchsize);\n%do batch_counter = 0 %to &loop_size;\n%let full_filename_path_seq = ;\n%let directory_path_seq = ;\nproc sql noprint;\nselect\nfull_file_name,\nis_in_SAS_Content_flag,\n%if &wifiv_diap_guided_automation = 1 %then\n%do;\nsheet_xml_json_tablename,\n%if &wifiv_temp_count ne 0 %then\n%do;\ndelimiter_for_text_files,\n%end;\n%if &wifiv_temp_header_flag_count ne 0 %then\n%do;\ncolumn_names_in_first_row,\n%end;\n%if &wifiv_temp_target_count ne 0 %then\n%do;\ntarget_table_name,\n%end;\n%end;\ndirectory_path\ninto\n:full_filename_path_seq separated by \"# \",\n:wifiv_gddauto_upd_fls_cntt_flg separated by \" #\" ,\n%if &wifiv_diap_guided_automation = 1 %then\n%do;\n:wifiv_gddauto_upd_fls_sht_seq separated by \" #\" ,\n%if &wifiv_temp_count ne 0 %then\n%do;\n:wifiv_gddauto_upd_fls_del_seq separated by \" #\",\n%end;\n%if &wifiv_temp_header_flag_count ne 0 %then\n%do;\n:wifiv_gddauto_upd_fls_hdr_seq separated by \" #\",\n%end;\n%if &wifiv_temp_target_count ne 0 %then\n%do;\n:wifiv_gddauto_upd_fls_tgt_seq separated by \" #\",\n%end;\n%end;\n:directory_path_seq separated by \"# \"\nfrom\nwork._loop_overview_ds\nwhere\nunique_id gt %eval(&batch_counter*&batchsize) and\nunique_id le %eval(%eval(&batch_counter +1)*&batchsize);\nquit;\n \n%put INFORMATION GENERAL: This is batch # &batch_Counter &=full_filename_path_seq;\n%put INFORMATION GENERAL: This is batch # &batch_Counter &=directory_path_seq;\n%if &wifiv_clean_up_worklib_inbetween = 1 %then\n%do;\nproc datasets lib = work nolist;\ndelete\nvarnames_:\nget_table_info_:\n;\nquit;\n%end;\n%write_out_files_2_libname(\n&full_filename_path_seq,\n&target_libname,\n,\nwof2l_directory_path_seq = &directory_path_seq,\nwof2l_upload_log_ds = &upload_log_ds,\nwof2l_debug_mode = &debug_mode,\nwof2l_shp_enrich_with_zip = &shp_enrich_with_zip,\nwof2l_variable_dict_dataset = &variable_dict_ds,\nwof2l_max_name_length = &max_table_name_length,\nwof2l_substitute_string_seq = &substitute_string_seq,\nwof2l_do_profiling = &wifiv_do_profiling,\nwof2l_profile_dict_location = &wifiv_profiling_dict_location,\nwof2l_path_2_python_shape_script = &wifiv_path_2_python_shape_script,\nwof2l_csv_big_data_mode = &wifiv_csv_big_data_mode,\nwof2l_drop_missing_vars = &wifiv_drop_missing_vars,\nwof2l_stringseq_2_cutout_from_fn = &wifiv_stringseq_2_cutout_from_fn,\nwof2l_stringseq_2_cutout_from_vn = &wifiv_stringseq_2_cutout_from_vn,\nwof2l_prefix_4_suspicious_src_fl = &wifiv_prefix_4_suspicious_src_fl,\nwof2l_max_lgth_of_suspicious_str = &wifiv_max_lgth_of_suspicious_str,\nwof2l_check_csv_4_num = &wifiv_check_csv_4_num,\nwof2l_viyaversion = &wifiv_viyaversion,\nwof2l_chck_txt_fl_4_spcl_chrct = &wifiv_chck_txt_fl_4_spcl_chrct,\nwof2l_spcl_chrctr_sq2chck_in_hex = &wifiv_spcl_chrctr_sq2chck_in_hex,\nwof2l_spcl_chrct_chck_rplcmnt_hx = &wifiv_spcl_chrct_chck_rplcmnt_hx,\nwof2l_make_imported_data_prsstnt = &wifiv_make_imported_data_prsstnt,\nwof2l_force_upload_of_all_files = &wifiv_force_upload_of_all_files,\nwof2l_skip_files_start_with_seq = &wifiv_skip_files_start_with_seq ,\nwof2l_skip_files_end_with_seq = &wifiv_skip_files_end_with_seq,\nwof2l_fnl_tblname_from_sheetonly = &wifiv_fnl_tblname_from_sheetonly,\nwof2l_create_unique_target_tblnm = &wifiv_create_unique_target_tblnm,\nwof2l_delimiter = &wifiv_delimiter,\nwof2l_chck_4_spcl_char_in_vars = &wifiv_chck_4_spcl_char_in_vars,\nwof2l_fnl_ds_name_4_all_extfiles = &wifiv_fnl_ds_name_4_all_extfiles,\nwof2l_diap_guided_automation = &wifiv_diap_guided_automation,\nwof2l_gddauto_upd_fls_del_seq = &wifiv_gddauto_upd_fls_del_seq,\nwof2l_gddauto_upd_fls_sht_seq = &wifiv_gddauto_upd_fls_sht_seq,\nwof2l_gddauto_upd_fls_cntt_flg = &wifiv_gddauto_upd_fls_cntt_flg,\nwof2l_gddauto_upd_fls_hdr_seq = &wifiv_gddauto_upd_fls_hdr_seq,\nwof2l_gddauto_upd_fls_tgt_seq = &wifiv_gddauto_upd_fls_tgt_seq\n);\n%end;\n%end; %else\n%do;\n%put INFORMATION ALERT: Directory does NOT exist!;\n%end;\n%if &wifiv_write_log_into_file = 1 %then\n%do;\nproc printto;\nquit;\n%end;\n/*    %if \"%upcase(&wifiv_target_environment)\" eq \"CAS1\" %then*/\n/*    %do;*/\n/*        cas DIAP_PRC disconnect ;*/\n/*        cas DIAP_PRC terminate ;*/\n/*    %end;*/\n%mend wrapper_import_files_into_viya;\n \n/** FOR TESTING ***\noption mprint source notes;\n%include \"/mnt/downloads/production_code/wrapper/development_wrapper/00_all_code_pieces_import_files_into_viya_4_execution.sas\";\nOPTIONS cashost=\"&_CASHOST_\" casport=&_CASPORT_;\ncas;\ncaslib _all_ assign;\n \n%let root_directory = /mnt/downloads/ZZ_Testing/top_folder/;\n%let extension = *;\n%let target_libname = work;\n%let substitute_string_seq = aeiouAEIOU;\n%let meta_centralized = 0;\n%let libname_meta_centralized = work;\n%let max_table_name_length = 27;\n%let shp_enrich_with_zip = 0;\n%let debug_mode = 1;\n%let profiling_execution_option = NO;\n%let prfl_dict_lctn_in_content_area = ;\n%let prfl_cd_lctn_in_content_area = ;\n \n%wrapper_import_files_into_viya(\nwifiv_inRootDir        = &root_directory,\nwifiv_inExtension   = &extension,\nwifiv_inTargetLib        = &target_libname,\nwifiv_inUpldLogDS = _NONE_,\nwifiv_inSbstStrgSeq        = &substitute_string_seq,\nwifiv_meta_centralized = &meta_centralized,\nwifiv_libname_meta_centralized = &libname_meta_centralized,\nwifiv_max_table_name_length = &max_table_name_length,\nwifiv_debug_mode = &debug_mode,\nwifiv_shp_enrich_with_zip = &shp_enrich_with_zip,\nwifiv_do_profiling = &profiling_execution_option,\nwifiv_profiling_dict_location = &prfl_dict_lctn_in_content_area,\nwifiv_profiling_code_location = &prfl_cd_lctn_in_content_area\n);\n \n \n*********************/\n/******************************************************************************\n \n%DIAP_handling_missings_vars\n________\n \n \ndeletes completely missing variables from datasets\n \n______________________________________________________________________________\n \n \nUSAGE:                         see testing section on the bottom of this code\n \n______________________________________________________________________________\n \nDESCRIPTION:\n \nThis macro checks all the variables of a provided dataset for completely missing\nvariables. There are 2 modes for dropping of those variables, either all of them, or\nonly the ones that contains a certain string in their variable name.\n______________________________________________________________________________\n \n \nINPUT PARAMETERS AND KEYWORDS:\n \ndhm_missing_handling_option:\n1: drop any variable that contains only missing values\n2: drop only those variables that contain a certain string\nas provided in parameter dhm_stg_2_chk_var_b4_drop\ndhm_dataset_2_check\nprovide the dataset name that needs to be checked for missing variables\ndhm_dataset_2_write_out_results\nprovide dataset name where the results of the missing variables is stored\ndhm_stg_2_chk_var_b4_drop\nchecks the variable name for this string sequence before dropping\ndefault: ZZ_MISSING_VARNAME_\n______________________________________________________________________________\n \nNOTES: (Initials, date, summary)\n \nStephan Weigandt    20200909  First officially Released Version\n______________________________________________________________________________\n \n*******************************************************************************/\n%macro DIAP_handling_missings_vars(\ndhm_missing_handling_option = 1,\ndhm_dataset_2_check = ,\ndhm_dataset_2_check_output = ,\ndhm_dataset_2_write_out_results = ,\ndhm_stg_2_chk_var_b4_drop = ZZ_MISSING_VARNAME_\n);\n \n%local\ndhm_drop_seq\ndhm_count_num\ndhm_count_char\n;\n%let dhm_drop_seq = ;\n%let dhm_count_num = 0;\n%let dhm_count_char = 0;\nproc sql noprint;\nselect\ncount(type)\ninto\n:dhm_count_num\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"%upcase(%trim(%left(%scan(&dhm_dataset_2_check, 1, '.'))))\" and\nkupcase(memname) = \"%upcase(%trim(%left(%scan(&dhm_dataset_2_check, 2, '.'))))\" and\nkupcase(type) = \"NUM\"\n;\nselect\ncount(type)\ninto\n:dhm_count_char\nfrom\ndictionary.columns\nwhere\nkupcase(libname) = \"%upcase(%trim(%left(%scan(&dhm_dataset_2_check, 1, '.'))))\" and\nkupcase(memname) = \"%upcase(%trim(%left(%scan(&dhm_dataset_2_check, 2, '.'))))\" and\nkupcase(type) = \"CHAR\"\n;\nquit;\n%let dhm_count_char = %trim(%left(&dhm_count_char));\n%let dhm_count_num = %trim(%left(&dhm_count_num));\n \nproc iml;\nuse &dhm_dataset_2_check;\n%if &dhm_count_num > 0 %then\n%do;\nread all var _NUM_ into x[colname=nNames];\nn = countn(x,\"col\");\nnmiss = countmiss(x,\"col\");\n%end;\n%if &dhm_count_char > 0 %then\n%do;\nread all var _CHAR_ into x[colname=cNames];\nc = countn(x,\"col\");\ncmiss = countmiss(x,\"col\");\n%end;\nclose &dhm_dataset_2_check;\n%if &dhm_count_num > 0  and\n&dhm_count_char > 0 %then\n%do;\n/* combine results for num and char into a single table */\nNames = cNames || nNames;\nrNames = {\"Missing\", \"Not_Missing\"};\ncnt = (cmiss // c) || (nmiss // n);\nprint cnt[r=rNames c=Names label=\"\"];\n \ncreate &dhm_dataset_2_write_out_results\nfrom cnt[r=rNames c=Names];\nappend from cnt[r=rNames];\nclose;\n%end;\n%if &dhm_count_num = 0  and\n&dhm_count_char > 0 %then\n%do;\n/* combine results for num and char into a single table */\nNames = cNames ;\nrNames = {\"Missing\", \"Not_Missing\"};\ncnt = (cmiss // c) ;\nprint cnt[r=rNames c=Names label=\"\"];\n \ncreate &dhm_dataset_2_write_out_results\nfrom cnt[r=rNames c=Names];\nappend from cnt[r=rNames];\nclose;\n%end;\n%if &dhm_count_num > 0  and\n&dhm_count_char = 0 %then\n%do;\n/* combine results for num and char into a single table */\nNames = nNames;\nrNames = {\"Missing\", \"Not_Missing\"};\ncnt = (nmiss // n);\nprint cnt[r=rNames c=Names label=\"\"];\n \ncreate &dhm_dataset_2_write_out_results\nfrom cnt[r=rNames c=Names];\nappend from cnt[r=rNames];\nclose;\n%end;\nquit;\nproc transpose\ndata = &dhm_dataset_2_write_out_results\nout = &dhm_dataset_2_write_out_results._t;\nid  rnames;\nquit;\n \n%if &dhm_missing_handling_option = 1 %then\n%do;\n/****\ndelete all occuring missing vars\n****/\nproc sql;\nselect\n_NAME_\ninto\n:dhm_drop_seq separated by \" \"\nfrom\n&dhm_dataset_2_write_out_results._t\nwhere\nMissing > 1 and\nNot_Missing = 0\n;\nquit;\n \n%end;\n%if &dhm_missing_handling_option = 2 %then\n%do;\n/****\ndelete occuring missing vars that originally also have a missing variable name\n****/\nproc sql;\nselect\n_NAME_\ninto\n:dhm_drop_seq separated by \" \"\nfrom\n&dhm_dataset_2_write_out_results._t\nwhere\nMissing > 1 and\nNot_Missing = 0 and\nkupcase(_NAME_) contains (\"%upcase(&dhm_stg_2_chk_var_b4_drop)\")\n;\nquit;\n \n%end;\n%let dhm_missing_var_count = 0;\n%let dhm_missing_var_count = %wordcnt(&dhm_drop_seq, ' ');\ndata &dhm_dataset_2_check_output;\nset &dhm_dataset_2_check;\n%if &dhm_missing_var_count ne 0 %then\n%do;\ndrop &dhm_drop_seq;\n%end;\nrun;\n \n%mend DIAP_handling_missings_vars;\n \n/** FOR TESTING ***\noption mprint source notes;\n%include \"/mnt/downloads/production_code/macros/wordcnt.sas\";\ndata one;\ninput ZZ_MISSING_VARNAME_ $ b $ cothervar $ d e;\ncards;\n. . . 1 3\n. b . 2 4\n. a . . 5\n. . . 3 5\n. a . . 6\n. a . . 7\n. a . 2 8\n;\nrun;\n \n%let ebla_cas_target_libname = ZZ_Tstng;\n%let missing_handling_option = 1;\n%let dataset_2_check = work.one;\n%let dataset_2_check_output = work.two;\n%let dataset_2_write_out_results =  work._missing_var_results_;\n%let stg_2_chk_var_b4_drop = ZZ_MISSING_VARNAME_;\n \n \n%DIAP_handling_missings_vars(\ndhm_missing_handling_option = &missing_handling_option,\ndhm_dataset_2_check = &dataset_2_check,\ndhm_dataset_2_check_output = &dataset_2_check_output,\ndhm_dataset_2_write_out_results = &dataset_2_write_out_results,\ndhm_stg_2_chk_var_b4_drop = &stg_2_chk_var_b4_drop\n);\n \n \n*********************/\n \n%macro execute_all();\n%put     &=chck_4_spcl_char_in_vars_ui    ;\n%put      &=check_csv_4_num_ui    ;\n%put     &=check_txt_file_4_special_chrctui    ;\n%put     &=csv_big_data_mode_ui    ;\n%put     &=debug_mode_ui    ;\n%put     &=diap_create_unique_target_tblnm2    ;\n%put     &=diap_fnl_tblname_from_sheetonly2    ;\n%put     &=diap_traverse_directories_ui    ;\n%put     &=drop_missing_vars_ui    ;\n%put     &=extension_ui    ;\n%put     &=fnl_ds_name_4_all_extfiles_ui    ;\n%put     &=force_upload_of_all_files_ui    ;\n%put     &=libname_meta_centralized_ui    ;\n%put     &=make_imported_data_persistent_ui    ;\n%put     &=max_lgth_of_suspicious_str_ui    ;\n%put     &=max_table_length_ui    ;\n%put     &=meta_centralized_ui    ;\n%put     &=prefix_4_suspicious_src_fl_ui    ;\n%put     &=root_directory_ui    ;\n%put    &=log_file_path_ui;\n%put &=root_directory_overwrite_ui;\n%put     &=skip_files_ending_with_seq_ui    ;\n%put     &=skip_files_starting_with_seq_ui    ;\n%put     &=spcl_chrctr_check_rplcmnt_inhex2    ;\n%put     &=special_chrctr_seq_2_chck_inhex2    ;\n%put     &=stringseq_2_cutout_from_fn_ui    ;\n%put     &=stringseq_2_cutout_from_vn_ui    ;\n%put     &=substitute_string_seq_ui    ;\n%put     &=target_libname_ui    ;\n%put     &=write_log_into_file_ui    ;\n%let root_directory = &root_directory_ui;\n \n%put &=root_directory;\n \n%let     chck_4_spcl_char_in_vars    =    &chck_4_spcl_char_in_vars_ui    ;\n%let     check_csv_4_num    =    &check_csv_4_num_ui    ;\n%let     check_txt_file_4_special_chrct    =    &check_txt_file_4_special_chrctui    ;\n%let     csv_big_data_mode    =    &csv_big_data_mode_ui    ;\n%let     debug_mode    =    &debug_mode_ui    ;\n%let     diap_create_unique_target_tblnm    =    &diap_create_unique_target_tblnm2    ;\n%let     diap_fnl_tblname_from_sheetonly    =    &diap_fnl_tblname_from_sheetonly2    ;\n%let     diap_traverse_directories    =    &diap_traverse_directories_ui    ;\n%let     drop_missing_vars    =    &drop_missing_vars_ui    ;\n%let     extension    =    &extension_ui    ;\n%let     fnl_ds_name_4_all_extfiles    =    &fnl_ds_name_4_all_extfiles_ui    ;\n%let     force_upload_of_all_files    =    &force_upload_of_all_files_ui    ;\n%let     libname_meta_centralized    =    &libname_meta_centralized_ui    ;\n%let     make_imported_data_persistent    =    &make_imported_data_persistent_ui    ;\n%let     max_lgth_of_suspicious_str    =    &max_lgth_of_suspicious_str_ui    ;\n%let     max_table_length    =    &max_table_length_ui    ;\n%let     meta_centralized    =    &meta_centralized_ui    ;\n%let     prefix_4_suspicious_src_fl    =    &prefix_4_suspicious_src_fl_ui    ;\n \n%if \"&root_directory_overwrite_ui\" ne \"\" %then\n%do;\n%let root_directory_source_ow = %upcase(%scan(&root_directory_overwrite_ui, 1, \":\"));\n%if \"&root_directory_source_ow\"    ne \"SASSERVER\" and\n\"&root_directory_source_ow\"    ne \"SASCONTENT\" %then\n%do;\n%let root_directory = SASSERVER:&root_directory_overwrite_ui;\n%end; %else\n%do;\n%let root_directory = &root_directory_overwrite_ui;\n%end;\n%end;\n%let     skip_files_ending_with_seq    =    &skip_files_ending_with_seq_ui    ;\n%let     skip_files_starting_with_seq    =    &skip_files_starting_with_seq_ui    ;\n%let     spcl_chrctr_check_rplcmnt_in_hex    =    &spcl_chrctr_check_rplcmnt_inhex2    ;\n%let     special_chrctr_seq_2_chck_in_hex    =    &special_chrctr_seq_2_chck_inhex2    ;\n%let     stringseq_2_cutout_from_fn    =    &stringseq_2_cutout_from_fn_ui    ;\n%let     stringseq_2_cutout_from_vn    =    &stringseq_2_cutout_from_vn_ui    ;\n%let     substitute_string_seq    =    &substitute_string_seq_ui    ;\n%let     target_libname    =    &target_libname_ui    ;\n%let     write_log_into_file    =    &write_log_into_file_ui    ;\n \n%let DIAP_viyaversion = 4;\n \n%let provide_default_log_path = ;\n%let log_file_directory_source_ui = ;\n%if \"&log_file_path_ui\" ne \"\" %then\n%do;\n%let provide_default_log_path = %scan(&log_file_path_ui, 2, \":\")/;\n%let log_file_directory_source_ui = %scan(&log_file_path_ui, 1, \":\");\n%end;\n%if \"%upcase(&log_file_directory_source_ui)\" eq \"SASSERVER\" %then\n%do;\n%let install_mode_in_SAS_Content = 0;\n%end; %else\n%do;\n%let install_mode_in_SAS_Content = 1;\n%end;\n%if &DIAP_mode_selection_ui = 1 %then\n%do;\n%let diap_guided_automation_fl_loc = ;\n%end; %else\n%do;\n%let diap_guided_automation_fl_loc = &diap_guided_auto_fl_loc_ui;\n%end;\n \n%if &do_processing = 1 %then\n%do;\n \n%put INFORMATION: &=profiling_execution_option ;\n%wrapper_import_files_into_viya(\nwifiv_inRootDir        = &root_directory,\nwifiv_inExtension   = &extension,\nwifiv_inTargetLib        = &target_libname,\nwifiv_inUpldLogDS = _NONE_,\nwifiv_inSbstStrgSeq        = &substitute_string_seq,\nwifiv_meta_centralized = &meta_centralized,\nwifiv_libname_meta_centralized = &libname_meta_centralized,\nwifiv_max_table_name_length = &max_table_name_length,\nwifiv_debug_mode = &debug_mode,\nwifiv_shp_enrich_with_zip = &shp_enrich_with_zip,\nwifiv_do_profiling = &profiling_execution_option,\nwifiv_profiling_dict_location = &prfl_dict_lctn_in_content_area,\nwifiv_profiling_code_location = &prfl_cd_lctn_in_content_area,\nwifiv_path_2_python_shape_script = &path_2_python_shape_script,\nwifiv_csv_big_data_mode = &csv_big_data_mode,\nwifiv_write_log_into_file = &write_log_into_file,\nwifiv_provide_default_log_path = &provide_default_log_path,\nwifiv_drop_missing_vars = &drop_missing_vars,\nwifiv_stringseq_2_cutout_from_fn = &stringseq_2_cutout_from_fn,\nwifiv_stringseq_2_cutout_from_vn = &stringseq_2_cutout_from_vn,\nwifiv_prefix_4_suspicious_src_fl = &prefix_4_suspicious_src_fl,\nwifiv_max_lgth_of_suspicious_str = &max_lgth_of_suspicious_str,\nwifiv_check_csv_4_num = &check_csv_4_num,\nwifiv_macro_varname_cashost = &_CASHOST_,\nwifiv_macro_varname_casport = &_CASPORT_,\nwifiv_viyaversion = &DIAP_viyaversion,\nwifiv_install_mode_in_SASContent = &install_mode_in_SAS_Content,\nwifiv_chck_txt_fl_4_spcl_chrct = &check_txt_file_4_special_chrct,\nwifiv_spcl_chrctr_sq2chck_in_hex = &special_chrctr_seq_2_chck_in_hex,\nwifiv_spcl_chrct_chck_rplcmnt_hx = &spcl_chrctr_check_rplcmnt_in_hex,\nwifiv_make_imported_data_prsstnt = &make_imported_data_persistent,\nwifiv_force_upload_of_all_files = &force_upload_of_all_files,\nwifiv_traverse_directories = &diap_traverse_directories,\nwifiv_skip_files_start_with_seq = &skip_files_starting_with_seq,\nwifiv_skip_files_end_with_seq = &skip_files_ending_with_seq,\nwifiv_fnl_tblname_from_sheetonly = &diap_fnl_tblname_from_sheetonly,\nwifiv_create_unique_target_tblnm = &diap_create_unique_target_tblnm,\nwifiv_delimiter = &diap_delimiter.,\nwifiv_chck_4_spcl_char_in_vars = &chck_4_spcl_char_in_vars,\nwifiv_fnl_ds_name_4_all_extfiles = &fnl_ds_name_4_all_extfiles,\nwifiv_diap_guided_auto_fl_loc = &diap_guided_automation_fl_loc\n);\n%end;\n \n%mend execute_all;\n%if &DIAP_mode_selection_ui = 4 %then\n%do;\nfilename temp_fix temp;\ndata _null_;\nfile temp_fix delimiter = \",\";\ninfile datalines delimiter = \",\" truncover;\nlength\ndirectory $256.\nfilename $128.\ninclude_fn_in_table_output 8\nfile_type $3.\nvariable_name $32.\nvariable_label $256.\nvariable_type $4.\nvariable_length 8\nvariable_format $32.\nvariable_informat $32.\nvariable_start_position 8\nvariable_end_position 8;\n \ninput\ndirectory $\nfilename $\ninclude_fn_in_table_output\nfile_type $\nvariable_name $\nvariable_label $\nvariable_type $\nvariable_length\nvariable_start_position\nvariable_end_position;\nvariable_format = \"\";\nvariable_informat = \"\";\nif _n_ = 1 then\ndo;\nput\n\"directory,\"\n\"filename,\"\n\"include_fn_in_table_output,\"\n\"file_type,\"\n\"variable_name,\"\n\"variable_label,\"\n\"variable_type,\"\n\"variable_length,\"\n\"variable_start_position,\"\n\"variable_end_position,\"\n\"variable_format,\"\n\"variable_informat\"\n;\n \nend;\nput\ndirectory $\nfilename $\ninclude_fn_in_table_output\nfile_type $\nvariable_name $\nvariable_label $\nvariable_type $\nvariable_length\nvariable_start_position\nvariable_end_position\nvariable_format\nvariable_informat    ;\n \ndatalines;\n/mnt/downloads/climate/,climdiv,1,fix,state_code,state_code,char,3,1,3\n/mnt/downloads/climate/,climdiv,1,fix,division_number,division_number,num,8,4,4\n/mnt/downloads/climate/,climdiv,1,fix,element_code,element_code,char,1,5,6\n/mnt/downloads/climate/,climdiv,1,fix,year,year,num,8,7,10\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hit_num,hit_num,num,8,1,1\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hit_id,hit_id,char,32,2,2\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hit_def,hit_def,char,512,3,3\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hit_accession,hit_accession,num,8,4,4\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hit_len,hit_len,num,8,5,5\n/mnt/downloads/ZZ_Testing/top_folder/xml/,first_blast.xml,1,xml,hsp_midline,hsp_midline,char,32000,6,6\n;\nrun;\n%end;\n%if &DIAP_mode_selection_ui = 3 %then\n%do;\nfilename temp_gdd temp;\ndata _null_;\nfile temp_gdd delimiter = \",\";\ninfile datalines delimiter = \",\" truncover;\nlength\nfull_file_name $256.\nsheet_xml_json_tablename $128.\nis_in_SAS_Content_flag $32.\ncolumn_names_in_first_row $32.\ndelimiter_for_text_files $32.\ntarget_table_name $32.\n;\n \ninput\nfull_file_name $\nsheet_xml_json_tablename $\nis_in_SAS_Content_flag\ncolumn_names_in_first_row\ndelimiter_for_text_files $\ntarget_table_name $\n;\n \nif _n_ = 1 then\ndo;\nput\n\"full_file_name,\"\n\"sheet_xml_json_tablename,\"\n\"is_in_SAS_Content_flag,\"\n\"column_names_in_first_row,\"\n\"delimiter_for_text_files,\"\n\"target_table_name\"\n;\n \nend;\nput\nfull_file_name $\nsheet_xml_json_tablename $\nis_in_SAS_Content_flag\ncolumn_names_in_first_row\ndelimiter_for_text_files $\ntarget_table_name $\n;\ndatalines;\n/mnt/dir/where/excel/files/test_excel.xlsx,name_of_sheet_2_read_in,0,1, ,excel_sheet2\n/public/dir/where/csv/files/test_detect_delimiter_automatically.csv, ,1,1, ,auto_detect_delimiter\n/public/dir/where/csv/files/test_comma_delimited.csv, ,1,1,comma,\n/public/dir/where/csv/files/test_tab_delimited.csv, ,1,1,tab,tab_del_from_sasContent\n/public/dir/where/csv/files/test_blank_space_delimited.csv, ,1,1,blank,\n/public/dir/where/csv/files/test_semicolon_delimited.csv, ,1,1,semicolon,semi_del_table\n/public/dir/where/csv/files/test_pipe_delimited.csv, ,1,1,pipe,\n/mnt/dir/where/more/excel/files/test_target_table_name_auto_created.xlsx,another_name_of_sheet_2_read_in,0,1, ,\n;\nrun;\n%end;\n \n \n%macro check_4_admin_tasks();\n \n%let do_processing = 1;\n%let controlfile_target_location = %scan(&controlfile_target_location_ui, 2, \":\")/;\n%let control_trgt_location_source = %scan(&controlfile_target_location_ui, 1, \":\");\n \n%put &=controlfile_target_location;\n%put &=do_processing;\n \n%if (&DIAP_mode_selection_ui = 3 or &DIAP_mode_selection_ui = 4) and\n&do_processing = 1 %then\n%do;\n%if &DIAP_mode_selection_ui = 4 %then\n%do;\n%if %upcase(\"&control_trgt_location_source\") eq \"SASSERVER\" %then\n%do;\nfilename out \"&controlfile_target_location._DIAP_Special_File_Definition.csv\";\n%end; %else\n%do;\nfilename out\nfilesrvc\nfolderpath     = \"&controlfile_target_location\"\nfilename    = \"_DIAP_Special_File_Definition.csv\";\n%end;\n%put &=controlfile_target_location;\ndata _null_;\nfile out delimiter = \",\";\ninfile temp_fix delimiter = \",\" truncover;\nlength\ndirectory $256.\nfilename $128.\ninclude_fn_in_table_output $32.\nfile_type $32.\nvariable_name $32.\nvariable_label $256.\nvariable_type $32.\nvariable_length $32.\nvariable_format $32.\nvariable_informat $32.\nvariable_start_position $32.\nvariable_end_position $32.;\ninput\ndirectory $\nfilename $\ninclude_fn_in_table_output $\nfile_type $\nvariable_name $\nvariable_label $\nvariable_type $\nvariable_length $\nvariable_start_position $\nvariable_end_position $\nvariable_format $\nvariable_informat $\n;\n \nput\ndirectory $\nfilename $\ninclude_fn_in_table_output $\nfile_type $\nvariable_name $\nvariable_label $\nvariable_type $\nvariable_length $\nvariable_start_position $\nvariable_end_position $\nvariable_format $\nvariable_informat $\n;\nrun;\n%end;\n \n \n%if &DIAP_mode_selection_ui = 3 %then\n%do;\n%if %upcase(\"&control_trgt_location_source\") eq \"SASSERVER\" %then\n%do;\nfilename out \"&controlfile_target_location._DIAP_guided_execution.csv\";\n%end; %else\n%do;\nfilename out\nfilesrvc\nfolderpath     = \"&controlfile_target_location\"\nfilename    = \"_DIAP_guided_execution.csv\";\n%end;\ndata _null_;\nfile out delimiter = \",\";\ninfile temp_gdd delimiter = \",\" truncover;\nlength\nfull_file_name $256.\nsheet_xml_json_tablename $128.\nis_in_SAS_Content_flag $32.\ncolumn_names_in_first_row $32.\ndelimiter_for_text_files $32.\ntarget_table_name $32.\n;\n \ninput\nfull_file_name $\nsheet_xml_json_tablename $\nis_in_SAS_Content_flag $\ncolumn_names_in_first_row $\ndelimiter_for_text_files $\ntarget_table_name $\n;\n \nput\nfull_file_name $\nsheet_xml_json_tablename $\nis_in_SAS_Content_flag $\ncolumn_names_in_first_row $\ndelimiter_for_text_files $\ntarget_table_name $\n;\nrun;\n%end;\n%end; %else\n%do;\n%execute_all();\n%end;\n \n/**\nRestore original SAS options settings\n**/\n \n%adjust_option_setings_controlled(\naosc_running_mode = RESET\n);\n \n%if &debug_mode_ui ne 1 %then\n%do;\nproc datasets lib=work;\ndelete\n_diap_:\n_file_:\n_laf_:\n_loop_:\n_temp_:\ncolumns_:\nget_table_info:\nld4um_combined:\noriginal_overview_ds\noriginal_var_overview_ds\noverview_new_:\nvarnames_:\nwof2l_:\nzz_ld4um_:\n_fixed_file_def:\n_aosc:\n;\nquit;\n%end;\n \n%mend check_4_admin_tasks;\n%check_4_admin_tasks();\n"}}