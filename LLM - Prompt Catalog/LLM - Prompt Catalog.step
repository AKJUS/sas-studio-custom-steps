{"creationTimeStamp":"2024-02-07T04:44:51.658Z","modifiedTimeStamp":"2024-03-14T08:26:12.184Z","createdBy":"XinRu.Lee@sas.com","modifiedBy":"XinRu.Lee@sas.com","name":"LLM - Prompt Catalog.step","displayName":"LLM - Prompt Catalog.step","localDisplayName":"LLM - Prompt Catalog.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","uri":"/dataFlows/steps/be2e47a3-958e-4b64-a5d4-877cd4299a37","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"queryTable","displayName":"queryTable","localDisplayName":"queryTable","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"},{"name":"promptTable","displayName":"promptTable","localDisplayName":"promptTable","minEntries":0,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[{"name":"responseTable","displayName":"responseTable","localDisplayName":"responseTable","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"pageQuery\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Query\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"queryInputChoice\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Specify source of your query input\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"table\",\n\t\t\t\t\t\t\t\"label\": \"Use a table\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"enter\",\n\t\t\t\t\t\t\t\"label\": \"Enter manually\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"queryTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Select the table containing the queries:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$queryInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"queryColumn\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select the column containing the query:\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"c\",\n\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$queryInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"queryTable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"queryText\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Enter query text:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$queryInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"enter\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"pagePrompt\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Prompt\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptInputChoice\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Specify source of your prompt input:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"catalog\",\n\t\t\t\t\t\t\t\"label\": \"Prompt catalog\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"custom\",\n\t\t\t\t\t\t\t\"label\": \"Custom prompt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Select the prompt table:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptCol\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select the prompt column:\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"c\",\n\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"promptTable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"suggestedPromptText\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Suggested prompt has been selected automatically based on an evaluation framework.\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"suggestedPromptCheckbox\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Use suggested prompt from prompt catalog\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"suggestedPromptCol\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select suggested prompt column:\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"c\",\n\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"$suggestedPromptCheckbox\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"promptTable\",\n\t\t\t\t\t\"readonly\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"suggestedPromptVal\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Suggested prompt column = 'True':\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"ref\": \"suggestedPromptCol\"\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"True\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"$suggestedPromptCheckbox\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"suggestedPrompt\",\n\t\t\t\t\t\"type\": \"list\",\n\t\t\t\t\t\"label\": \"Review suggested prompt (for viewing only):\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"ref\": \"promptCol\"\n\t\t\t\t\t},\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"$suggestedPromptCheckbox\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"overwritePromptText\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Select the options below to pick another prompt. This will overwrite the suggested prompt.\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"!$suggestedPromptCheckbox\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptIDColumn\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Select the prompt ID column:\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"n\",\n\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"!$suggestedPromptCheckbox\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"promptTable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptDropdown\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Select the prompt for your model:\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"ref\": \"promptIDColumn\"\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"!$suggestedPromptCheckbox\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptList\",\n\t\t\t\t\t\"type\": \"list\",\n\t\t\t\t\t\"label\": \"Review prompt list (for viewing only):\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"ref\": \"promptCol\"\n\t\t\t\t\t},\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"catalog\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\"!$suggestedPromptCheckbox\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"customPrompt\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Insert custom prompt here:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptInputChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"custom\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"pageLLM\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Large Language Model\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"introText\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"This custom step works with offline and online large language model APIs that support the OpenAI format.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"llmTypeChoice\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Specify offline or online large language model\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"openai\",\n\t\t\t\t\t\t\t\"label\": \"OpenAI\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"offline\",\n\t\t\t\t\t\t\t\"label\": \"Offline model\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"APIURL\",\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"label\": \"REST endpoint for large language model:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"Token\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Token for OpenAI API:\",\n\t\t\t\t\t\"placeholder\": \"Token or macro variable storing the token\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$llmTypeChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"openai\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"llmDropdown\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Enter an available openai models. Refer to official Open AI documentation for updated list:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"gpt-3.5-turbo\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$llmTypeChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"openai\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"pageOutput\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Save & Promote Tables\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"responseTable\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Response table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"saslibName\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide SAS library name to where prompt tables are saved:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"saslibPath\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide SAS library path to where prompt tables are saved:\",\n\t\t\t\t\t\"placeholder\": \"/insert-your-path/folder-name\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"savePromptCheckbox\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Save prompt history and prompt catalog tables\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"caslibName\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide CAS library name to promote prompt tables to:\",\n\t\t\t\t\t\"placeholder\": \"e.g. public\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promoteHistoryCheckbox\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Promote prompt history table\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promoteCatalogCheckbox\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Promote prompt catalog table\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"promptHistoryChoice\",\n\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\"label\": \"Do you have existing prompt history and catalog tables?\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"existing\",\n\t\t\t\t\t\t\t\"label\": \"Yes (use existing)\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"new\",\n\t\t\t\t\t\t\t\"label\": \"No (create new)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"historyTable\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Specify the two level dataset name of your latest Prompt History table:\",\n\t\t\t\t\t\"placeholder\": \"e.g. public.prompthistory\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptHistoryChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"existing\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"catalogTable\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Specify the two level dataset name of your latest Prompt Catalog table:\",\n\t\t\t\t\t\"placeholder\": \"e.g. public.promptcatalog\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$promptHistoryChoice\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"existing\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"pageAbout\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"textAbout\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"LLM - Prompt Catalog\\n===============\\n\\nThis custom step allows users to:\\n1. Submit single or multiple queries to a large language model;\\n2. Write custom prompts (prompt engineering);\\n3. Choose an existing prompt from the promptcatalog table;\\n4. Select the best prompt from the promptcatalog table, where the suggested prompt is selected through a prompt evaluation framework;\\n5. Save prompt to the prompt history and prompt catalog tables;\\n6. Promote prompt history and prompt catalog tables;\\n7. View results in the output table node.\\n\\nThe following large language models are supported: \\n  * Offline Models (e.g. Llama-2-7b)\\n  * Online Models (e.g. OpenAI API)\\n\\nRight-click on the node to add or remove input port as needed.\\n\\nOutput table options can be specified to WORK.RESPONSE.\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"sectionPrereqs\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Pre-requisites\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textPrereqs\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Created and tested on Viya 4 environment version Stable 2023.12 or later.\\n\\nThis custom step works by making a REST API call to the LLM service. (POST request)\\n\\nWhen using offline model, it is assumed that user spins up his/her own Python VM where the large language model will run, such as through a flask app.\\n\\nAssuming these are the details of your flask app.\\n1. IP address of Python VM: 12.345.678.910\\n2. Port number: 8080 (You would need to whitelist this port number on your VM.)\\n3. Route: \\\"/query\\\"\\n\\nThen, the REST endpoint for large language model would be: \\nhttp(s)://12.345.678.910:8080/query\\n\\nWhen using the OpenAI API, a token is required.\\n\\nWhen selecting the option for \\\"Do you have existing prompt history and catalog tables?\\\"\\n1. Ensure that the caslib or SAS libref for your existing prompt history and catalog tables has been assigned for your session, if it is neither of the two specified above.\\n2. Ensure that your existing prompt history table has these 4 columns: txt, prompt, response, and ID (numeric). \\n3. Ensure that your existing prompt catalog table has these 3 columns: prompt, ID (numeric), suggested_prompt.\\n4. The \\\"No (create new)\\\" option does not require any action from the user. Selecting this option will automatically create and add the current run's query, prompt and response to the respective tables.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"sectionDocumentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textDocumentation\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"To understand more on Prompt Engineering, please refer to https://www.promptingguide.ai\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"sectionChangelog\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Changelog\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"textChangelog\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"* Version: 2.0 (16FEB2024)\\n      - Removed hardcoded references to SAS libraries and CASlibs, added UI options\\n      - Standardized code format\\n      - Added pre-requisites notes\\n      - Input query table can now use any column name instead of just \\\"txt\\\"\\n      - Input prompt table can now use any column name instead of just \\\"prompt\\\"\\n      - Cleaned up intermediate tables\\n      - Cleaned up SAS macros and SAS macro variables (WIP)\\n\\n* Version: 1.0 (02FEB2024)\\n      - Initial version\\n\\nContacts: \\n      - Xin Ru Lee (XinRu.Lee@sas.com)\\n      - Pei Sin Khoo (PeiSin.Khoo@sas.com)\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"queryInputChoice\": {\n\t\t\t\"value\": \"table\",\n\t\t\t\"label\": \"Use a table\"\n\t\t},\n\t\t\"queryTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"queryColumn\": [],\n\t\t\"queryText\": \"\",\n\t\t\"promptInputChoice\": {\n\t\t\t\"value\": \"catalog\",\n\t\t\t\"label\": \"Prompt catalog\"\n\t\t},\n\t\t\"promptTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"promptCol\": [],\n\t\t\"suggestedPromptCheckbox\": true,\n\t\t\"suggestedPromptCol\": [],\n\t\t\"suggestedPromptVal\": {\n\t\t\t\"value\": \"True\"\n\t\t},\n\t\t\"suggestedPrompt\": [],\n\t\t\"promptIDColumn\": [],\n\t\t\"promptDropdown\": null,\n\t\t\"promptList\": [],\n\t\t\"customPrompt\": \"\",\n\t\t\"llmTypeChoice\": {\n\t\t\t\"value\": \"offline\",\n\t\t\t\"label\": \"Offline model\"\n\t\t},\n\t\t\"APIURL\": \"http(s)://<>\",\n\t\t\"Token\": \"\",\n\t\t\"llmDropdown\": {\n\t\t\t\"value\": \"gpt-3.5-turbo\"\n\t\t},\n\t\t\"responseTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"saslibName\": \"\",\n\t\t\"saslibPath\": \"\",\n\t\t\"savePromptCheckbox\": false,\n\t\t\"caslibName\": \"\",\n\t\t\"promoteHistoryCheckbox\": false,\n\t\t\"promoteCatalogCheckbox\": false,\n\t\t\"promptHistoryChoice\": {\n\t\t\t\"value\": \"existing\",\n\t\t\t\"label\": \"Yes (use existing)\"\n\t\t},\n\t\t\"historyTable\": \"\",\n\t\t\"catalogTable\": \"\"\n\t},\n\t\"promptHierarchies\": [\n\t\t{\n\t\t\t\"name\": \"PromptHierarchy1\",\n\t\t\t\"levels\": [\n\t\t\t\t\"promptDropdown\",\n\t\t\t\t\"promptList\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"PromptHierarchy2\",\n\t\t\t\"levels\": [\n\t\t\t\t\"suggestedPromptVal\",\n\t\t\t\t\"suggestedPrompt\"\n\t\t\t]\n\t\t}\n\t]\n}","templates":{"SAS":"/* --------------------------------------------------------------------------*\n TODO list:\n   - Cleanup SAS macros and SAS macro variables at the end of the step\n   - _template.step provides sample code snippets for these cleanup routines\n * --------------------------------------------------------------------------*/\n\n/* **************************************** */\n/*             INPUT NEW PROMPT             */\n/* **************************************** */\n\n* Specify source of your query input = 'Use a table';\n* (E.g. &queryInputChoice. = 'table');\n%macro useQueryTable();\n\tproc sql noprint;\n\t    create table work.txt001 as\n\t\t    select &queryColumn. as txt length=32767\n\t            from &queryTable. (keep=&queryColumn.);\n\tquit;\n%mend useQueryTable;\n\n* Specify source of your query input = 'Enter manually';\n* (E.g. &queryInputChoice. = 'enter');\n%macro createQueryTable(name, keepCol);\n\tproc sql noprint;\n\t\tcreate table &name. (&keepCol. char(32767));\n\t\t\tinsert into &name.\n\t\t\t    set &keepCol. = %nrstr(\"&queryText.\");\n\tquit;\n%mend createQueryTable;\n\n* Specify source of your prompt input = 'Custom prompt';\n* (E.g. &promptInputChoice. = 'custom');\n%macro createPromptTable(name,keepCol);\n\tproc sql noprint;\n\t\tcreate table &name (&keepCol. char(32767));\n\t\t\tinsert into &name.\n\t\t\t    set &keepCol. = %nrstr(\"&customPrompt.\");\n\tquit;\n%mend createPromptTable;\n\n%macro createFinalTable1();\n\tproc sql;\n\t    create table work.joined_table as\n\t\t    select *, catx(' ',\"Given this:\",txt,prompt) as content length=32767\n\t            from work.txt001 (keep=txt)\n\t                full join work.prompt001 (keep=prompt)\n                        on 1 = 1;\n\tquit;\n\t\n\tdata &responseTable. (drop=content);\n\t     length txt $32767.;\n\t     length prompt $32767.;\n\t     length response $32767.;\n\t\t call execute('%loopOverDatasets('|| size ||')');\n\t\t stop;\n  \t\t set work.joined_table nobs=size;\n\trun;\n%mend createFinalTable1;\n\n/* **************************************** */\n/*           INPUT PROMPT CATALOG           */\n/* **************************************** */\n\n* Specify source of your prompt input = 'Prompt catalog';\n* (E.g. &promptInputChoice. = 'catalog');\n%macro createFinalTable2();\n\t%if &suggestedPromptCheckbox. = 1 %then %do;\n        data work.prompt001 (keep=prompt); \n            set &promptTable.;\n\t\t\trename &promptCol. = prompt;\n            if &suggestedPromptCol. = 'True' then output;\n        run;\n\t%end;\n\n\t%if &suggestedPromptCheckbox. = 0 %then %do;\n        data work.prompt001 (keep=prompt); \n            set &promptTable.;\n\t\t\trename &promptCol. = prompt;\n            if &promptIDColumn. = &promptDropdown. then output;\n        run;\n\t%end;\n\n\tproc sql;\n\t    create table work.joined_table as\n\t\t    select *, catx(' ', 'Given this:', txt, prompt) as content length=32767\n\t            from work.txt001 (keep=txt)\n\t                full join work.prompt001\n                        on 1 = 1;\n\tquit;\n\t\n\tdata &responseTable. (drop=content);\n\t    length txt $32767.;\n\t    length prompt $32767.;\n\t    length response $32767.;\n\t\tcall execute('%loopOverDatasets('|| size ||')');\n\t\tstop;\n  \t\tset work.joined_table nobs=size;\n\trun;\n%mend createFinalTable2;\n\n/* **************************************** */\n/*        SELECT LARGE LANGUAGE MODEL       */\n/* **************************************** */\n\n%macro loopOverDatasets(datasetCount);\n    %local iter;\n\n    * Initiate loop;\n    %do iter=1 %to &datasetCount;\n        * Get libref and dataset name for dataset you will work on during this iteration;\n        data work.msgs_json;\n            set work.joined_table (firstobs=&iter. obs=&iter. keep=content);\n            role = 'assistant';\n        run;\n\n        * Prepare the json files for in and out;\n        filename json_in temp;\n        filename json_out temp;\n\n        * Input the texts for json_in;\n        proc json out=json_in pretty;\n            write values \"model\" \"%trim(&llmDropdown.)\"; \n            write values \"messages\";\n            write open array;\n            export work.msgs_json / nosastags;\n            write close;  \n            write values \"temperature\" 0.1;\n            write values \"max_tokens\" 1000;\n        run;   \n \n        * Send the json_in to LLM by API;\n        proc http\n\t        url=\"%trim(%nrstr(&APIURL))\"\n\t        method='Post'\n\t        in=json_in\n\t        out=json_out;\n\t        headers\n\t            'Authorization' = \"%trim(%nrstr(&Token.))\"\n\t            'Content-Type' = 'application/json';\n        run;\n\n        * Print the response from gtp;\n        libname jlib json fileref=json_out;\n\n        proc print data=jlib.choices_message(keep=content);\n        run;\n\n        data work.row_response;\n\t        merge work.joined_table(firstobs=&iter. obs=&iter. drop=content) jlib.choices_message(keep=content rename=(content=response));\n\t    run;\n\n\t    proc append base=&responseTable. data=work.row_response force;\n\t    run;\n    %end;\n\t\n\t* Cleanup;\n\tproc delete data=work.txt001 work.joined_table work.row_response work.msgs_json;\n    run;\n%mend loopOverDatasets;\n\n* Call LLM API;\ndata _null_;\n\t* Use Query Table;\n\tif strip(\"&queryInputChoice.\") = 'table' then do;\n\t\tcall execute('%useQueryTable()');\n\tend;\n\n\t* Create Query Table if needed;\n\tif strip(\"&queryInputChoice.\") = 'enter' then do;\n\t\tcall execute('%createQueryTable(txt001, txt)');\n\t\tcall symput('queryTable', 'txt001');\t\n\t\tcall symput('queryColumn', 'txt');\n\tend;\n\n\t* Create Prompt Table if needed;\n\tif strip(\"&promptInputChoice.\") = 'custom' then do;\n\t\tcall execute('%createPromptTable(prompt001, prompt)');\t\n\t\tcall symput('promptTable', 'prompt001');\n\t\tcall symput('promptCol', 'prompt');\n\tend; \nrun;\n\ndata _null_;\n\t* Select Prompt from Prompt Catalog;\n\tif strip(\"&promptInputChoice.\") = 'catalog' then do;\n\t    call execute('%createFinalTable2()');\n\tend; \n\telse do; \n\t\tcall execute('%createFinalTable1()');\n\tend;\nrun;\n\n/* **************************************** */\n/*     CREATE PROMPT HISTORY & CATALOG      */\n/* **************************************** */\n\n* Assign SAS library; \n%let outlib = &saslibName.;\n%let outpath = \"&saslibPath.\";\nlibname &outlib. &outpath.;\n\n* Assign CAS library;\n%let VAlib = &caslibName.;\nlibname &VAlib. cas caslib=&VAlib.;\n\n* Rename these if you would like to change the default prompt table names;\n%let prompt_history = prompthistory;\n%let prompt_catalog = promptcatalog;\n\n* Create Prompt History Table, if needed;\n%macro createHistoryTable();\n\tproc sql noprint;\n\t\tcreate table work.&prompt_history. as select txt, prompt, response, 1 as ID \n\t\tfrom &responseTable.;\n\tquit;\n%mend createHistoryTable;\n\n* Create Prompt Catalog Table, if needed;\n%macro createCatalogTable();\n\tproc sql noprint;\n\t\tcreate table work.&prompt_catalog. as select prompt, 1 as ID, \"False\" as suggested_prompt \n\t\tfrom work.prompt001;\n\tquit;\n%mend createCatalogTable;\n\ndata _null_;\n\tif strip(\"&promptHistoryChoice.\") = 'new' then do;\n\t\tcall execute('%createHistoryTable()');\n\t\tcall execute('%createCatalogTable()');\t\n\tend;\nrun;\n\n/* **************************************** */\n/*     ADD TO PROMPT HISTORY & CATALOG      */\n/* **************************************** */\n\n* Use existing Prompt History & Prompt Catalog tables, if exist;\n%macro useExistingTables();\n\t* Copy latest Prompt History table into temporary Prompt History table;\n\tdata work.&prompt_history.;\n\t\tset &historyTable.;\n\trun;\n\n\t* Copy latest Prompt Catalog table into temporary Prompt Catalog table;\n\tdata work.&prompt_catalog.;\n\t\tset &catalogTable.;\n\trun;\n\n\t* Append to Prompt History table;\n\tproc sql;\n\t\tcreate table work.promptappend AS\n\t\t    select * from work.&prompt_history.\n\t\t        union ALL\n\t\t    select txt, prompt, response from &responseTable.;\n\tquit;\n\t\n\t* Add unique ID to the new prompt;\n\tdata work.&prompt_history.(drop=ID_max);\n\t\tset work.promptappend;\n\t\tretain ID_max;\n\t\tID_max = max(ID_max, ID);\n\t\tif ID = . then ID = ID_max + 1;\n\trun;\n\t\n\t* Find the latest prompt and ID;\n\tproc sql noprint;\n\t    select max(ID) into :maxID from work.&prompt_history.;\n\t    select prompt into :promptValue from work.prompt001;\n\tquit;\n\n\t* Insert the new row into work.promptcatalog;\n\tproc sql;\n\t\tinsert into work.&prompt_catalog. (prompt, ID, suggested_prompt)\n\t\t    values (\"&promptValue.\", &maxID., 'False');\n\tquit;\n\n\t* Remove duplicates from Prompt Catalog;\n\tproc sort data=work.&prompt_catalog. out=work.&prompt_catalog. (keep=prompt ID suggested_prompt) nodupkey;\n\t\tby prompt;\n\trun;\n\t\n\t* Order by ID number;\n\tproc sort data=work.&prompt_catalog. out=work.&prompt_catalog.;\n\t\tby ID;\n\trun;\n\t\n\tproc sort data=work.&prompt_history. out=work.&prompt_history.;\n\t\tby ID;\n\trun;\n\n\t* Cleanup;\n\tproc delete data=work.promptappend;\n    run;\n%mend useExistingTables;\n\ndata _null_;\n\tif strip(\"&promptHistoryChoice.\") = 'existing' then do;\n\t\tcall execute('%useExistingTables()');\n\tend;\nrun;\n\n/* **************************************** */\n/*   SAVE & PROMOTE PROMPT HISTORY/CATALOG  */\n/* **************************************** */\n\n%if &savePromptCheckbox.=1 %then %do;\n\tdata &outlib..&prompt_history.; \n\t\tset work.&prompt_history.;\n\trun;\n\n\tdata &outlib..&prompt_catalog.; \n\t\tset work.&prompt_catalog.;\n\trun;\n%end;\n\n%if &promoteHistoryCheckbox.=1 %then %do;\n\t* Drop table;\n\tproc casutil;\n\t\tdroptable casdata=\"&prompt_history.\" incaslib=\"&VAlib.\" quiet;\n\tquit;\n\t\n\tdata &VAlib..&prompt_history.; \n\t\tset work.&prompt_history.;\n\trun;\n\t\n\t* Promote table;\n\tproc casutil;\n\t   promote casdata=\"&prompt_history\" casout=\"&prompt_history\" incaslib=\"&VAlib\" outcaslib=\"&VAlib\";\n\tquit;\n%end;\n\n%if &promoteCatalogCheckbox.=1 %then %do;\n\t* Drop table;\n\tproc casutil;\n\t\tdroptable casdata=\"&prompt_catalog.\" incaslib=\"&VAlib.\" quiet;\n\tquit;\n\t\n\tdata &VAlib..&prompt_catalog.; \n\t\tset work.&prompt_catalog.;\n\trun;\n\n\t* Promote table;\n\tproc casutil;\n\t   promote casdata=\"&prompt_catalog.\" casout=\"&prompt_catalog.\" incaslib=\"&VAlib.\" outcaslib=\"&VAlib.\";\n\tquit;\n%end;\n\n* Cleanup;\nproc delete data=work.prompt001 work.&prompt_catalog. work.&prompt_history.;\nrun;"}}