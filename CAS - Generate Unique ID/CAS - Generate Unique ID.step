{"creationTimeStamp":"2023-08-16T00:35:24.339Z","modifiedTimeStamp":"2023-08-16T00:54:19.801Z","createdBy":"viya_admin","modifiedBy":"viya_admin","name":"CAS - Generate Unique ID.step","displayName":"CAS - Generate Unique ID.step","localDisplayName":"CAS - Generate Unique ID.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","uri":"/dataFlows/steps/482c2c5d-8973-4fd8-8e23-75819d2113ca","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[{"name":"casout","displayName":"casout","localDisplayName":"casout","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table","columnDelta":{"updateColumnArguments":["uid"],"automaticMapping":[{"inputPort":"inputtable1","inputPortName":"inputtable1"}]},"supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"parameters\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"uid\",\n\t\t\t\t\t\"type\": \"newcolumn\",\n\t\t\t\t\t\"label\": \"Provide unique ID name:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"hideproperties\": false,\n\t\t\t\t\t\"readonly\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Note: By default, all input table columns (plus the unique ID) get copied over to the output table.  Refer the CAS action documentation (About tab) for details on the copyVars option in case you wish to specify variables to copy.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"casout\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table:\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"CAS - Generate Unique ID\\n==================\\n\\nThis custom step generates a new unique identifier (ID) column for a given input SAS Cloud Analytics Services (CAS) table.\\n\\nSince SAS Cloud Analytics Services (CAS) process data across multiple threads, the conventional method of using the _n_  automatic variable (as used in SAS Compute) does not ensure uniqueness.  \\n\\nThere exists both a workaround ( concatenating the thread id with the _n_ variable) and a CAS action (included in all Viya offerings) to create a unique ID column.  This custom step makes use of the CAS action (textmanagement.generateIds) to generate a unique ID.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step runs on data loaded to a SAS Cloud Analytics Services (CAS) library (known as a caslib). Ensure you are connected to CAS before running this step.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_input\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input Parameters\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"input_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Input port: connect an input CAS table to the input port.\\n\\n2. Name desired for the unique ID column.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_output_specs\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Specifications\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"Note that all columns are copied over to the output table.\\n\\n1. Output port: connect an output table (which needs to be a CAS table) to the output port.\\n\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_runtimecontrol\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Run-time Control\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"runtimecontrol_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Note: Run-time control is optional.  You may choose whether to execute the main code of this step or not, based on upstream conditions set by earlier SAS programs.  This includes nodes run prior to this custom step earlier in a SAS Studio Flow, or a previous program in the same session.\\n\\nRefer this blog (https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526) for more details on the concept.\\n\\nThe following macro variable,\\n\\n_gui_run_trigger\\n\\nwill initialize with a value of 1 by default, indicating an \\\"enabled\\\" status and allowing the custom step to run.\\n\\nIf you wish to control execution of this custom step, include code in an upstream SAS program to set this variable to 0.  This \\\"disables\\\" execution of the custom step.\\n\\nTo \\\"disable\\\" this step, run the following code upstream:\\n\\n%global _gui_run_trigger;\\n%let _gui_run_trigger =0;\\n\\nTo \\\"enable\\\" this step again, run the following (it's assumed that this has already been set as a global variable):\\n\\n%let _gui_run_trigger =1;\\n\\nIMPORTANT: Be aware that disabling this step means that none of its main execution code will run, and any  downstream code which was dependent on this code may fail.  Change this setting only if it aligns with the objective of your SAS Studio program.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"1. textmanagement.generateIds CAS action : https://go.documentation.sas.com/doc/en/pgmsascdc/default/casvtapg/n0qdvvymlj69d7n18dfvh6ipjn2k.htm#p1rs825m6ue07wn1tusdtru2vrc5\\n\\n2. This SAS Communities article provides the workaround mentioned earlier: https://communities.sas.com/t5/SAS-Communities-Library/Creating-a-unique-ID-with-CAS-DATA-Step/ta-p/644592\\n\\n3. This SAS Communities article: https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526 referred to earlier suggests an approach through which execution of this custom step is controlled during run time.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"change_log_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.2  (15AUG2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Created/contact: Sundaresh Sankaran (sundaresh.sankaran@sas.com)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"uid\": {\n\t\t\t\"value\": \"Unique_ID\",\n\t\t\t\"label\": \"Unique ID\",\n\t\t\t\"type\": \"n\"\n\t\t},\n\t\t\"casout\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/* SAS templated code goes here */\n\n/*-----------------------------------------------------------------------------------------*\n   START MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n/* -----------------------------------------------------------------------------------------* \n   Create a global macro variable for the trigger to run this custom step. A value of 1 \n   (the default) enables this custom step to run.  A value of 0 (provided by upstream code)\n   sets this to disabled.\n   \n   Albeit a little unnecessary, to avoid any confusion, the \"gui\" in the macro variable \n   is a reference to \"Generate Unique ID\" (the name of this step).\n*------------------------------------------------------------------------------------------ */\n\n%global _gui_run_trigger;\n\n%if %sysevalf(%superq(_gui_run_trigger)=, boolean)  %then %do;\n\t%put NOTE: Trigger macro variable _gui_run_trigger does not exist. Creating it now.;\n    %let _gui_run_trigger=1;\n%end;\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE MACRO \n   Driven by user choice from UI. \n*------------------------------------------------------------------------------------------*/\n\n%macro main_execution_code;\n\n/* A common use-case is that the analytics developer desires all variables to be copied over to the output table.   */\n/* A trait of the CAS action (textmanagement.generateIds) used below is to automatically copy all variables, if NO variables are selected in the copyVars option. */\n/* This current version of the custom step does not specify the copyVars option, therefore implying that all columns get copied over.  Users may edit this custom step to include the copyVars option if they desire. */\n\n   %put \"Blank list provided. All Columns will be copied.\";\n\n\n/* Call the CAS action contained within the Text Management action set (which is available within all Viya offerings) */\n   proc cas;\n      textManagement.generateIds /                            \n         casOut={name=\"&casout_name_base.\", caslib=\"&casout_lib.\", replace=TRUE }\n         id=\"&uid_name_base.\"\n         table={name=\"&inputtable1_name_base.\", caslib=\"&inputtable1_lib.\"}\n         ;\n\n   quit;\n\n%mend main_execution_code;\n\n\n/*-----------------------------------------------------------------------------------------*\n   END OF MACROS\n*------------------------------------------------------------------------------------------*/\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE\n   The execution code is controlled by the trigger variable defined in this custom step. This\n   trigger variable is in an \"enabled\" (value of 1) state by default, but in some cases, as \n   dictated by logic, could be set to a \"disabled\" (value of 0) state.\n*------------------------------------------------------------------------------------------*/\n\n\n%if &_gui_run_trigger. = 1 %then %do;\n   %main_execution_code;\n%end;\n%if &_gui_run_trigger. = 0 %then %do;\n   %put NOTE: This step has been disabled.  Nothing to do.;\n%end;\n"}}