{"creationTimeStamp":"2023-02-02T03:30:58.112Z","modifiedTimeStamp":"2023-02-03T20:52:37.834Z","createdBy":"sinsrn","modifiedBy":"sinsrn","name":"CAS - Generate Unique ID.step","displayName":"CAS - Generate Unique ID.step","localDisplayName":"CAS - Generate Unique ID.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","uri":"/dataFlows/steps/2774c2ed-4dc6-4ff6-90fe-e35f227f5568","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputtable1","displayName":"inputtable1","localDisplayName":"inputtable1","minEntries":1,"maxEntries":1,"type":"table"}],"outputPorts":[{"name":"casout","displayName":"casout","localDisplayName":"casout","minEntries":1,"maxEntries":1,"type":"table","requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"CAS - Generate Unique ID\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputtable1\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"uid\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Provide Unique ID name:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Output table specifications\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Use in case you wish to copy specific columns from the input table to the output table. Note: selecting no columns will automatically lead to all input table columns getting copied over.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"columnselector1\",\n\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\"label\": \"Select columns to copy:\",\n\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"table\": \"inputtable1\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"casout\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"CAS - Generate Unique ID\\n\\nThis custom step generates a new column containing a unique identifier (ID) per observation for a given input CAS table.\\n\\nSince Cloud Analytics Services (CAS) processes across multiple threads, the conventional method of using the _n_  automatic variable (as used in SAS Compute) does not ensure uniqueness.  \\n\\nThere exists both a workaround ( concatenating the thread id with the _n_ variable) and a CAS action (included in all Viya offerings) to create a unique ID column.  This custom step makes use of the CAS action (textmanagement.generateIds) to generate a unique ID.\\n\\nParameters:\\n\\nNote that this action requires an active CAS connection in order to run successfully.  Ensure you are connected to CAS before running this step.\\n\\n1. Input port: connect an input CAS table to the input port.\\n2. Name desired for the unique ID column.\\n3. Optionally, select specific input table columns to copy to the output table.  If no columns are selected, note that all columns are copied.\\n4. Output port: connect an output table (which needs to be a CAS table) to the output port.\\n\\nDocumentation:\\n\\n1. textmanagement.generateIds CAS action : https://go.documentation.sas.com/doc/en/pgmsascdc/default/casvtapg/n0qdvvymlj69d7n18dfvh6ipjn2k.htm#p1rs825m6ue07wn1tusdtru2vrc5\\n2. This SGF 2009 paper proved helpful in drafting string substitution code within the custom step.  It helps answer - \\\"which is the best way to check if a macro variable is blank?\\\" : http://support.sas.com/resources/papers/proceedings09/022-2009.pdf\\n3. This SAS Communities article provides the workaround mentioned earlier: https://communities.sas.com/t5/SAS-Communities-Library/Creating-a-unique-ID-with-CAS-DATA-Step/ta-p/644592\\n\\nCreated / contact : \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\\nVersion : 1.0.   (02FEB2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputtable1\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"uid\": \"Unique_ID\",\n\t\t\"columnselector1\": [],\n\t\t\"casout\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t}\n\t}\n}","templates":{"SAS":"/* SAS templated code goes here */\n\n/* Make use of utility macro to obtain a list of selected variables, separated by spaces */\n%let blankSeparatedList = %_flw_get_column_list(_flw_prefix=columnselector1);\n\n/* A common use-case is that the analytics developer desires all variables to be copied over to the output table.   */\n/* A trait of the CAS action (textmanagement.generateIds) used below is to automatically copy all variables, if NO variables are selected in the copyVars option. */\n/* The following block of code evaluates if no columnns are selected.  If so, then a string (which represents the copyVars option of the CAS action) is set to blank. */\n/* Otherwise, a string containing the copyVars code block (i.e. copyVars={\"a..\",\"..\"}) is created with the selected columns populated. */\n/* The SGF paper which suggested a method to check if a macro variable is blank, is provided in the Documentation as a reference. */\n\n%if %sysevalf(%superq(blankSeparatedList)=,boolean)  %then %do;\n   %put \"Blank list provided. All Columns will be copied.\";\n/* Set the components of the copyVars string to null */\n   %let commaSeparatedList=;\n   %let copyVarStringPre=;\n   %let copyVarStringPost=;\n%end;\n%else %do;\n/* The following utility macro creates a comma-separated list from the space separated list */\n   %let commaSeparatedList = %_flw_get_column_list(_flw_prefix=columnselector1, _delim=%str(,));\n/* This is a necessary adjustment in order to create \"quoted\" comma-separated lists for use as a list of variables inside a CAS action */\n   data _null_;\n      call symput(\"commaSeparatedList\",'\"'||tranwrd(\"&commaSeparatedList.\",\",\",'\",\"')||'\"');\n   run;\n/* Set additional values to the text preceding and succeeding the quoted comma-separated list, yielding copyVars={\"a\",\"b\",\"c\"}  */\n   data _null_;\n      call symput(\"copyVarStringPre\",\"copyVars={\");\n      call symput(\"copyVarStringPost\",\"}\");\n   run;\n%end;\n\n/* Call the CAS action contained within the Text Management action set (which is available within all Viya offerings) */\nproc cas;\n   textManagement.generateIds /                            \n      casOut={name=\"&casout_name_base.\", caslib=\"&casout_lib.\", replace=TRUE }\n      &copyVarStringPre.&commaSeparatedList.&copyVarStringPost.\n      id=\"&uid.\"\n      table={name=\"&inputtable1_name_base.\", caslib=\"&inputtable1_lib.\"}\n      ;\n\nquit;"}}